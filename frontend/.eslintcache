[{"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\index.js":"1","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\App.js":"2","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PatientProfilePage.js":"3","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\VacationRequest.js":"4","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\ReviewedClients.js":"5","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\DermatologistHomePage.js":"6","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\DermatologistsProfilePage.js":"7","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\AllergyPatientListing.js":"8","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\AddAllergy.js":"9","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\UserInfo.js":"10","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\ChangePassword.js":"11","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\Registration.js":"12","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\Login.js":"13","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PharmacistProfilePage.js":"14","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PharmacistWorkingHours.js":"15","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PharmacistHomePage.js":"16","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\ISAdminHomePage.js":"17","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\SupplierRegistration.js":"18","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\LoyaltyProgram.js":"19","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\Complaints.js":"20","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\PharmacyRegistration.js":"21","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\AddNewMedication.js":"22","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\DermatologistRegistration.js":"23","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\PharmacyAdminRegistration.js":"24","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\WorkingHoursCalendar.js":"25","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PharmacyPage.js":"26","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\IndexPage.js":"27","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyEmployees.js":"28","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyMedicationOrders.js":"29","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyVacationsRequests.js":"30","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyMedicationQueries.js":"31","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\Promotions.js":"32","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyDescription.js":"33","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyMedications.js":"34","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PriceList.js":"35","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyReports.js":"36","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\MedicationListing.jsx":"37","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyListing.jsx":"38","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\layout\\UnregisteredLayout.jsx":"39","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\MedicationOrdersList.js":"40","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\MedicationOffers.js":"41","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\CreateOrder.js":"42"},{"size":457,"mtime":1610652333975,"results":"43","hashOfConfig":"44"},{"size":2234,"mtime":1610890782579,"results":"45","hashOfConfig":"44"},{"size":7778,"mtime":1610890782559,"results":"46","hashOfConfig":"44"},{"size":2485,"mtime":1610808222437,"results":"47","hashOfConfig":"44"},{"size":3585,"mtime":1610808222436,"results":"48","hashOfConfig":"44"},{"size":2884,"mtime":1610742736506,"results":"49","hashOfConfig":"44"},{"size":3031,"mtime":1610742736506,"results":"50","hashOfConfig":"44"},{"size":1099,"mtime":1610890782549,"results":"51","hashOfConfig":"44"},{"size":1582,"mtime":1610890782549,"results":"52","hashOfConfig":"44"},{"size":2872,"mtime":1610711910735,"results":"53","hashOfConfig":"44"},{"size":2157,"mtime":1610742736490,"results":"54","hashOfConfig":"44"},{"size":9620,"mtime":1610890759514,"results":"55","hashOfConfig":"44"},{"size":4277,"mtime":1610808222432,"results":"56","hashOfConfig":"44"},{"size":3159,"mtime":1610808222435,"results":"57","hashOfConfig":"44"},{"size":1185,"mtime":1610890782559,"results":"58","hashOfConfig":"44"},{"size":3116,"mtime":1610808222434,"results":"59","hashOfConfig":"44"},{"size":4011,"mtime":1610891214615,"results":"60","hashOfConfig":"44"},{"size":355,"mtime":1610890759509,"results":"61","hashOfConfig":"44"},{"size":340,"mtime":1610890759502,"results":"62","hashOfConfig":"44"},{"size":327,"mtime":1610890759500,"results":"63","hashOfConfig":"44"},{"size":9420,"mtime":1610890759505,"results":"64","hashOfConfig":"44"},{"size":348,"mtime":1610890759498,"results":"65","hashOfConfig":"44"},{"size":361,"mtime":1610890759501,"results":"66","hashOfConfig":"44"},{"size":348,"mtime":1610890759503,"results":"67","hashOfConfig":"44"},{"size":2396,"mtime":1610890782550,"results":"68","hashOfConfig":"44"},{"size":6760,"mtime":1610890782560,"results":"69","hashOfConfig":"44"},{"size":3956,"mtime":1610890782558,"results":"70","hashOfConfig":"44"},{"size":7544,"mtime":1610890782574,"results":"71","hashOfConfig":"44"},{"size":2917,"mtime":1610890782554,"results":"72","hashOfConfig":"44"},{"size":5717,"mtime":1610890782572,"results":"73","hashOfConfig":"44"},{"size":291,"mtime":1610890782574,"results":"74","hashOfConfig":"44"},{"size":2774,"mtime":1610890782571,"results":"75","hashOfConfig":"44"},{"size":3157,"mtime":1610890782552,"results":"76","hashOfConfig":"44"},{"size":7581,"mtime":1610890782573,"results":"77","hashOfConfig":"44"},{"size":813,"mtime":1610890782556,"results":"78","hashOfConfig":"44"},{"size":816,"mtime":1610890782555,"results":"79","hashOfConfig":"44"},{"size":1468,"mtime":1610890782550,"results":"80","hashOfConfig":"44"},{"size":1347,"mtime":1610890782553,"results":"81","hashOfConfig":"44"},{"size":1081,"mtime":1610890782558,"results":"82","hashOfConfig":"44"},{"size":5390,"mtime":1610890782575,"results":"83","hashOfConfig":"44"},{"size":5237,"mtime":1610890782551,"results":"84","hashOfConfig":"44"},{"size":4545,"mtime":1610890782550,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1rfaw5s",{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"88"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"88"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"88"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"88"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"88"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"88"},"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\index.js",[],["197","198"],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\App.js",["199","200"],"import React from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport IndexPage from \"./pages/IndexPage\";\r\nimport PatientProfilePage from \"./pages/PatientProfilePage\";\r\nimport PharmacyPage from \"./pages/PharmacyPage\";\r\nimport ReviewedClients from \"./pages/ReviewedClients\";\r\nimport VacationRequest from \"./pages/VacationRequest\";\r\nimport DermatologistHomePage from \"./pages/DermatologistHomePage\";\r\nimport PharmacistProfilePage from \"./pages/PharmacistProfilePage\";\r\nimport PharmacistHomePage from \"./pages/PharmacistHomePage\";\r\nimport PharmacistWorkingHours from \"./pages/PharmacistWorkingHours\";\r\nimport Registration from \"./pages/Registration\";\r\nimport {ISAdminHomePage} from \"./pages/ISAdminHomePage\";\r\n\r\n\r\nexport default class App extends React.Component {\r\n  constructor () {\r\n    super();\r\n    this.state = {\r\n      userRole : \"\",\r\n      username : \"\",\r\n      Id : \"\"\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const role = \"Admin\";\r\n    const Id = this.state.Id;\r\n    document.title = \"Internet Pharmacy\"\r\n    return (\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route exact path=\"/\"  render={(props) => <IndexPage {...props} role={role} /> } />\r\n            <Route path=\"/patient-profile\" render={(props) => <PatientProfilePage {...props} role={role} /> } />\r\n            <Route path=\"/pharmacy\"  component={PharmacyPage} role={role}/>\r\n            <Route path=\"/reviewClients\"  render={(props) => <ReviewedClients {...props} role={role} Id={Id}/> } />\r\n            <Route path=\"/vacationRequest\" render={(props) => <VacationRequest {...props} role={role} Id={Id}/> } />\r\n            <Route path=\"/dermatologistHomePage\"  render={(props) => <DermatologistHomePage {...props} role={role} Id={Id}/> } />\r\n            <Route path=\"/pharmacistHomePage\"  render={(props) => <PharmacistHomePage {...props} role={role} Id={Id}/> } />\r\n            <Route path=\"/registration\"  component={Registration} role={role}/>\r\n            <Route path=\"/pharmacyAdmin\"  component={ISAdminHomePage} role={role}/>\r\n\r\n          </Switch>\r\n        </BrowserRouter>\r\n    );\r\n  }\r\n\r\n  updateUserData = (role, username) => {\r\n    this.setState({\r\n      userRole : role,\r\n      username : username\r\n    })\r\n  }\r\n\r\n}\r\n","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PatientProfilePage.js",["201"],"import React from \"react\";\r\nimport {Col, Container, Nav, Row, Button} from \"react-bootstrap\";\r\nimport UserInfo from \"../components/UserInfo\";\r\nimport AllergyPatientListing from \"../components/AllergyPatientListing\";\r\nimport AddAllergy from \"../components/AddAllergy\";\r\nimport ChangePassword from \"../components/ChangePassword\";\r\nimport axios from \"axios\"\r\n\r\nexport default class PatientProfilePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'firstName' : '',\r\n            'lastName' : '',\r\n            'email' : '',\r\n            'address' : '',\r\n            'town' : '',\r\n            'country' : '',\r\n            'phoneNumber' : '',\r\n            'oldPass' : '',\r\n            'newPass' : '',\r\n            'repPass' : '',\r\n            'allergies' : [],\r\n            'editMode' : false,\r\n            'saveDisabled' : false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios\r\n        .get('http://localhost:8080/api/patients')\r\n        .then(res => console.log(res.data));\r\n\r\n        this.setState({\r\n            'firstName' : 'Ilija',\r\n            'lastName' : 'Brdar',\r\n            'email' : 'ilija_brdar@yahoo.com',\r\n            'address' : 'Vuka Karadzica 18',\r\n            'town' : 'Sirig',\r\n            'country' : 'Serbia',\r\n            'phoneNumber' : '+381604648117',\r\n            'allergies' : ['a1', 'a2', 'a3', 'a4', 'a5', 'a6'],\r\n            'editMode' : false,\r\n            'changePasswordMode' : false\r\n        })\r\n\r\n        this.user = {\r\n            'firstName' : 'Ilija',\r\n            'lastName' : 'Brdar',\r\n            'email' : 'ilija_brdar@yahoo.com',\r\n            'address' : 'Vuka Karadzica 18',\r\n            'town' : 'Sirig',\r\n            'country' : 'Serbia',\r\n            'phoneNumber' : '+381604648117',\r\n            'allergies' : ['a1', 'a2', 'a3', 'a4', 'a5', 'a6'],\r\n        }\r\n    }\r\n\r\n    activateUpdateMode = () => {\r\n        this.resetData();\r\n        this.setState({\r\n            editMode : !this.state.editMode,\r\n            changePasswordMode : false\r\n        })\r\n    }\r\n\r\n    activateChangePasswordMode = () => {\r\n        this.setState({\r\n            'saveDisabled' : !this.state.changePasswordMode,\r\n            'changePasswordMode' : !this.state.changePasswordMode,\r\n            'oldPass' : '',\r\n            'newPass' : '',\r\n            'repPass' : ''\r\n        })\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        this.setState({\r\n            [target.name] : target.value,\r\n        })\r\n    }\r\n\r\n    resetData = () => {\r\n        this.setState({\r\n            'firstName' : this.user.firstName,\r\n            'lastName' : this.user.lastName,\r\n            'address' : this.user.address,\r\n            'town' : this.user.town,\r\n            'country' : this.user.country,\r\n            'phoneNumber' : this.user.phoneNumber,\r\n            'allergies' : this.user.allergies\r\n        })\r\n    }\r\n\r\n    disableSave = (disable) => {\r\n        this.setState({\r\n            'saveDisabled' : disable\r\n        })\r\n    }\r\n\r\n    addAllergy = (allergy) => {\r\n        if(!this.state.allergies.includes(allergy))\r\n            this.setState({\r\n                'allergies' : [...this.state.allergies, allergy]\r\n            })\r\n    }\r\n\r\n    removeAllergy = (allergy) => {\r\n        this.setState({\r\n            'allergies' : [...this.state.allergies.filter(a => a !== allergy)]\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {oldPass, newPass, repPass} = this.state;\r\n        const passwords = [oldPass, newPass, repPass]\r\n\r\n        return (\r\n            <Container fluid>\r\n                <Row className=\"pt-5\">\r\n                    <Col xs={2}>\r\n                        <Nav defaultActiveKey=\"/home\" className=\"flex-column\">\r\n                            {!this.state.editMode\r\n                                ? <Button variant=\"primary\" onClick={this.activateUpdateMode}>Edit</Button>\r\n                                : <Button variant=\"outline-secondary\" onClick={this.activateUpdateMode}>Cancel</Button>\r\n                            }\r\n                            {this.state.editMode && <Button variant=\"primary mt-2\"\r\n                                                            onClick={this.activateChangePasswordMode}>\r\n                                Change Password</Button>}\r\n                            {this.state.editMode && <Button variant=\"success mt-2\" disabled={this.state.saveDisabled}>Save</Button>}\r\n                        </Nav>\r\n                    </Col>\r\n                    <Col>\r\n                        <UserInfo user={this.state} edit={this.state.editMode} onChange={this.handleInputChange}/>\r\n                        <h2 className=\"pt-4 pb-3\">Allergies</h2>\r\n                        {this.state.editMode && <AddAllergy addAllergy={this.addAllergy}/>}\r\n                        <AllergyPatientListing edit={this.state.editMode}\r\n                            allergies={this.state.allergies} removeAllergy={this.removeAllergy}/>\r\n                        {this.state.changePasswordMode &&\r\n                        <ChangePassword pass={passwords} onChange={this.handleInputChange} disable={this.disableSave}/>}\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\VacationRequest.js",["202"],"import React from \"react\";\r\nimport {Col, Container,  Row, Button} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nexport default class VacationRequest extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employeeId : props.Id,\r\n            startDate : \"\",\r\n            endDate : \"\",\r\n            pharmacy : \"\",\r\n            employeeType : props.role,\r\n            vacationNote : \"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n    render() {\r\n        let pharmacies = [\"hemofarm\", \"jankovic\"];\r\n        const  PharmaciesTag = pharmacies.map((pharmacy, key) =>\r\n            <option value={pharmacy}> {pharmacy} </option>\r\n        );\r\n        return (\r\n            <Container>\r\n                <br/>\r\n                <h2> Create request for vacation or absence</h2>\r\n                <br/>\r\n                <Row>\r\n                    <Col xs={2}> <p> Choose period: </p> </Col>\r\n                    <Col xs={-4}> <DatePicker  selected={this.state.startDate} minDate={new Date()} onChange={date => this.setState({startDate : date})} /> </Col>\r\n                    <Col xs={-4}> <DatePicker  selected={this.state.endDate} minDate={new Date()} onChange={date => this.setState({endDate : date})} /> </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={2}> <p> Choose pharmacy: </p> </Col>\r\n                    <Col xs={-4}>\r\n                            <select value={this.state.pharmacy} onChange={value => this.setState({ pharmacy : value.target.value})}>\r\n                                {PharmaciesTag}\r\n                            </select>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <p> Reason :</p>\r\n                        <textarea className=\"form-control\"  rows=\"5\" cols=\"30\"\r\n                                  placeholder=\"Type reason...\" id=\"comment\" value={this.state.vacationNote} onChange={text => this.setState({vacationNote : text.target.value})}/>\r\n                    </Col>\r\n                </Row>\r\n                <Button onClick={this.sendData}> Submit </Button>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n\r\n    sendData = () => {\r\n        alert(this.state.vacationNote.toString())\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\ReviewedClients.js",["203","204","205"],"import React from \"react\";\r\nimport {Col, Container,Row, Button, Table} from \"react-bootstrap\";\r\n\r\nexport default class ReviewedClients extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            role : props.role,\r\n            Id : props.Id,\r\n            clients : [],\r\n            sortType : \"desc\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let client = {\r\n            firstName: \"Aovan\",\r\n            lastName: \"Jelicki\",\r\n            dateOfAppointment: \"20.01.2021.\"\r\n        }\r\n        let client2 = {\r\n            firstName: \"Pera\",\r\n            lastName: \"Peric\",\r\n            dateOfAppointment: \"10.01.2021.\"\r\n        }\r\n        let list = [client, client2]\r\n        this.setState({\r\n            clients: list\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const Clients = this.state.clients.map((client, key) =>\r\n            <tr>\r\n                <td>{client.firstName}</td>\r\n                <td>{client.lastName}</td>\r\n                <td>{client.dateOfAppointment}</td>\r\n            </tr>\r\n        );\r\n        return (\r\n\r\n            <Container>\r\n                <br/>\r\n                <Row>\r\n                    <Col  xs={12} md={8}>\r\n                        <Button onClick={this.sortByFirstName} type=\"button\" className=\"btn btn-secondary\"> Sort by first name</Button>\r\n                        <Button onClick={this.sortByLastName} type=\"button\" className=\"btn btn-secondary\"> Sort by last name</Button>\r\n                        <Button onClick={this.sortByDateOfAppointment} type=\"button\" className=\"btn btn-secondary\"> Sort by date of appointment</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Table style={{\"borderWidth\":\"1px\", 'borderColor':\"#aaaaaa\", 'borderStyle':'solid'}} striped hover>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>First name</th>\r\n                            <th>Last name</th>\r\n                            <th>Date of appointment</th>\r\n                        </tr>\r\n                        {Clients}\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n\r\n        )\r\n    }\r\n\r\n    sortByFirstName = () => {\r\n        if(this.state.sortType === \"desc\")\r\n            this.setState({\r\n                clients: this.state.clients.sort((a, b) => (a.firstName > b.firstName) ? -1 : 1),\r\n                sortType : \"asc\"\r\n            })\r\n        else\r\n            this.setState({\r\n                clients: this.state.clients.sort((a, b) => (a.firstName > b.firstName) ? 1 : -1),\r\n                sortType : \"desc\"\r\n            })\r\n    }\r\n    sortByLastName = () => {\r\n        if(this.state.sortType === \"desc\")\r\n            this.setState({\r\n                clients: this.state.clients.sort((a, b) => (a.lastName > b.lastName) ? -1 : 1),\r\n                sortType : \"asc\"\r\n            })\r\n        else\r\n            this.setState({\r\n                clients: this.state.clients.sort((a, b) => (a.lastName > b.lastName) ? 1 : -1),\r\n                sortType : \"desc\"\r\n            })\r\n    }\r\n    sortByDateOfAppointment = () => {\r\n        if(this.state.sortType === \"desc\")\r\n            this.setState({\r\n                clients: this.state.clients.sort((a, b) => (a.dateOfAppointment > b.dateOfAppointment) ? -1 : 1),\r\n                sortType : \"asc\"\r\n            })\r\n        else\r\n            this.setState({\r\n                clients: this.state.clients.sort((a, b) => (a.dateOfAppointment > b.dateOfAppointment) ? 1 : -1),\r\n                sortType : \"desc\"\r\n            })\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\DermatologistHomePage.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\DermatologistsProfilePage.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\AllergyPatientListing.js",["206"],"import React from \"react\";\r\nimport {Button, Card, Col, Row} from \"react-bootstrap\";\r\n\r\nclass AllergyPatientListing extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.removeAllergy = this.removeAllergy.bind(this);\r\n    }\r\n\r\n    removeAllergy(allergy) {\r\n        this.props.removeAllergy(allergy)\r\n    }\r\n\r\n    render() {\r\n        const allergies = this.props.allergies.map((allergy, index) => {\r\n            return (\r\n                <Col xs={3} >\r\n                    <div className=\"m-2 bg-primary p-2\" style={{ height: '3rem' }}>\r\n                        {this.props.edit && <Button variant=\"primary\" className=\"mr-3 p-0\" style={{width: '1rem'}}\r\n                                 onClick={this.removeAllergy.bind(this, allergy)}>X</Button>}\r\n                        {allergy}\r\n                    </div>\r\n                </Col>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <Row>\r\n                {allergies}\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllergyPatientListing;","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\AddAllergy.js",["207"],"import React from \"react\";\r\nimport {Button, FormControl} from \"react-bootstrap\";\r\n\r\nclass AddAllergy extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'allergy' : '',\r\n            'allergies' : []\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addAllergy = this.addAllergy.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            'allergies' : ['a10', 'a11', 'a12', 'a13']\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({allergy: event.target.value});\r\n    }\r\n\r\n    addAllergy() {\r\n        this.props.addAllergy(this.state.allergy)\r\n    }\r\n\r\n    render() {\r\n        const allergies = this.state.allergies.map((allergy, index) => {\r\n            return <option value={allergy} key={index}>{allergy}</option>\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <select value={this.state.allergy} style={{width: '15rem'}} className=\"mr-2\"\r\n                        onChange={this.handleChange}>\r\n                    {allergies}\r\n                </select>\r\n                <Button variant=\"success\" className=\"mb-3\" onClick={this.addAllergy}>Add</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AddAllergy;","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\UserInfo.js",["208","209","210"],"import React from \"react\";\r\nimport {Container, Row, Col, Table, FormControl} from \"react-bootstrap\";\r\n\r\nclass UserInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        this.props.onChange(event)\r\n    }\r\n\r\n    render() {\r\n        let {user, edit} = this.props;\r\n\r\n        return (\r\n            <Table striped hover>\r\n                <tbody>\r\n                <tr>\r\n                    <td>First Name</td>\r\n                    {edit\r\n                        ? <FormControl name=\"firstName\" className=\"mt-2 mb-2\" value={user.firstName}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.firstName}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Last Name</td>\r\n                    {edit\r\n                        ? <FormControl name=\"lastName\" className=\"mt-2 mb-2\" value={user.lastName}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.lastName}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Email</td>\r\n                    <td>{user.email}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Address</td>\r\n                    {edit\r\n                        ? <FormControl name=\"address\" className=\"mt-2 mb-2\" value={user.address}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.address}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Town</td>\r\n                    {edit\r\n                        ? <FormControl name=\"town\" className=\"mt-2 mb-2\" value={user.town}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.town}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Country</td>\r\n                    {edit\r\n                        ? <FormControl name=\"country\" className=\"mt-2 mb-2\" value={user.country}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.country}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Phone Number</td>\r\n                    {edit\r\n                        ? <FormControl name=\"phoneNumber\" className=\"mt-2 mb-2\" value={user.phoneNumber}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.phoneNumber}</td>\r\n                    }\r\n                </tr>\r\n                </tbody>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserInfo;","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\ChangePassword.js",["211"],"import React from \"react\";\r\nimport {Col, Container, FormControl, Row} from \"react-bootstrap\";\r\n\r\nclass ChangePassword extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'repErr' : ''\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.validatePassword = this.validatePassword.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        this.props.onChange(event);\r\n        this.validatePassword(event);\r\n    }\r\n\r\n    validatePassword(event) {\r\n        let repErr = ''\r\n        let val = event.target.value;\r\n        let newPass = this.props.pass[1]\r\n\r\n        if (event.target.name === 'repPass')\r\n            if(val !== newPass.substr(0, Math.min(val.length, newPass.length)) ||\r\n                (val.trim() === '' && newPass.trim() !== '')) {\r\n                repErr = 'This password must match the previous';\r\n                this.props.disable(true);\r\n            }\r\n            else\r\n                this.props.disable(false);\r\n\r\n        this.setState({\r\n            'repErr': repErr\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h2 className=\"pt-4 pb-3\">Change Password</h2>\r\n                <Row className=\"m-2\">\r\n                    <FormControl name=\"oldPass\" type=\"password\" placeholder=\"Password\"\r\n                                 value={this.props.pass[0]} onChange={this.handleInputChange}/>\r\n                </Row>\r\n                <Row className=\"m-2\">\r\n                    <FormControl name=\"newPass\" type=\"password\" placeholder=\"New Password\"\r\n                                 value={this.props.pass[1]} onChange={this.handleInputChange}/>\r\n                </Row>\r\n                <Row className=\"m-2\">\r\n                    <FormControl name=\"repPass\" type=\"password\" placeholder=\"Repeat new Password\"\r\n                                 value={this.props.pass[2]} onChange={this.handleInputChange}/>\r\n                    <label className=\"text-danger\">{this.state.repErr}</label>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChangePassword;","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\Registration.js",["212","213","214","215","216","217","218","219"],"import React from \"react\";\r\nimport {Button, Col, Form, Modal, Table, Grid, FormControl, Row} from \"react-bootstrap\";\r\nimport \"../App.css\";\r\n\r\n\r\nexport default class Registration extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                'email': '',\r\n                'password': '',\r\n                'firstName': '',\r\n                'lastName': '',\r\n                'country': '',\r\n                'city': '',\r\n                'telephone': '',\r\n                'rePassword' : ''\r\n            },\r\n            errors:{\r\n                user: {\r\n                    'email': 'Enter email',\r\n                    'password': 'Enter password',\r\n                    'firstName': 'Enter First name',\r\n                    'lastName': 'Enter Last name',\r\n                    'country': 'Enter Country',\r\n                    'city': 'Enter City',\r\n                    'telephone': 'Enter Telephone',\r\n                    'rePassword' : 'Repeat password'\r\n                }\r\n            },\r\n            validForm: false,\r\n            submitted: false,\r\n\r\n\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.isValidPassword = this.isValidPassword.bind(this);\r\n\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        const user = this.state.user;\r\n        user[name] = value;\r\n\r\n        this.setState({ user });\r\n        this.validationErrorMessage(event);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rightPanel\" >\r\n                <header>User - Registration</header>\r\n\r\n                <div className=\"row\" >\r\n                    <label className=\"col-sm-2 col-form-label\">Name</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.firstName} name=\"firstName\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"First Name\" />\r\n                        { this.state.submitted && this.state.errors.user.firstName.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.firstName}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.lastName} name=\"lastName\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"Last Name\" />\r\n                        { this.state.submitted && this.state.errors.user.lastName.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.lastName}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Email</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"email\" value={this.state.user.email} name=\"email\" onChange={(e) => { this.handleInputChange(e)} }className=\"form-control\" id=\"email\" placeholder=\"example@gmail.com\" />\r\n                        { this.state.submitted && this.state.errors.user.email.length > 0 && <span className=\"text-danger\">{this.state.errors.user.email}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Tel</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.telephone} name=\"telephone\" onChange={(e) => { this.handleInputChange(e)} }  className=\"form-control\" id=\"telephone\" placeholder=\"+3810640333489\" />\r\n                        { this.state.submitted && this.state.errors.user.telephone.length > 0 && <span className=\"text-danger\">{this.state.errors.user.telephone}</span>}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Country</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.country} name=\"country\" onChange={(e) => { this.handleInputChange(e)} }  className=\"form-control\" id=\"country\" placeholder=\"Enter country\" />\r\n                        { this.state.submitted && this.state.errors.user.country.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.country}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">City</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.city} name=\"city\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" id=\"city\" placeholder=\"Enter city\" />\r\n                        { this.state.submitted && this.state.errors.user.city.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.city}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label className=\"col-sm-2 col-form-label\">Password</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <FormControl name=\"password\" type=\"password\" placeholder=\"Password\"  value={this.state.user.password} onChange={(e) => { this.handleInputChange(e)} }/>\r\n                        { this.state.submitted && this.state.errors.user.password.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.password}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Repeat password</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <FormControl name=\"rePassword\" type=\"password\" placeholder=\"Repeat new Password\" value={this.state.user.rePassword} onChange={(e) => { this.handleInputChange(e)} }/>\r\n                        { this.state.submitted && this.state.errors.user.rePassword.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.rePassword}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-5 mb-2\">\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <Button variant=\"primary\" onClick={this.submitForm} >Submit</Button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    submitForm = async (event) => {\r\n        this.setState({ submitted: true });\r\n        const user = this.state.user;\r\n        event.preventDefault();\r\n        if (this.validateForm(this.state.errors)) {\r\n            console.info('Valid Form')\r\n        } else {\r\n            console.log('Invalid Form')\r\n        }\r\n    }\r\n\r\n    validationErrorMessage = (event) => {\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n\r\n        switch (name) {\r\n            case 'firstName':\r\n                errors.user.firstName = value.length < 1 ? 'Enter First Name' : '';\r\n                break;\r\n            case 'lastName':\r\n                errors.user.lastName = value.length < 1 ? 'Enter Last Name' : '';\r\n                break;\r\n            case 'email':\r\n                errors.user.email = this.isValidEmail(value) ? '' : 'Email is not valid!';\r\n                break;\r\n            case 'telephone':\r\n                errors.user.telephone = this.isValidTelephone(value) ? 'Enter valid telephone number' : '';\r\n                break;\r\n            case 'country':\r\n                errors.user.country = value.length < 1 ?  'Enter Country' : '';\r\n                break;\r\n            case 'city':\r\n                errors.user.city = value.length < 1 ?  'Enter City' : '';\r\n                break;\r\n            case 'password':\r\n                errors.user.password = value.length < 1 ? 'Enter Password' : '';\r\n                break;\r\n            case 'rePassword':\r\n                errors.user.rePassword = this.isValidPassword(value) ? '' : 'This password must match the previous';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({ errors });\r\n    }\r\n\r\n    validateForm = (errors) => {\r\n        let valid = true;\r\n        Object.entries(errors.user).forEach(item => {\r\n            console.log(item)\r\n            item && item[1].length > 0 && (valid = false)\r\n        })\r\n        return valid;\r\n    }\r\n    isValidEmail = (value) => {\r\n        return !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,64}$/i.test(value))\r\n    }\r\n\r\n    isValidTelephone = (value) => {\r\n        return !(value && /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[0-9]{2,3}[-\\s\\./0-9]*$/i.test(value))\r\n    }\r\n\r\n    isValidPassword = (value) => {\r\n            if(this.state.user.password !== this.state.user.rePassword) {\r\n                return false;\r\n            }else{\r\n                return  true\r\n            }\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\Login.js",["220"],"import React from \"react\";\r\nimport {Button, Col, Form, Modal} from \"react-bootstrap\";\r\n\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'password': '',\r\n            'email': '',\r\n            errors: {\r\n                'email': 'Enter Email.',\r\n                'password': 'Enter Password.'\r\n            },\r\n            submitted: false\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        alert('A name was submitted: ' + this.state.value);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n        this.validationErrorMessage(event);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Button type=\"button\" className=\"btn btn-secondary\"  onClick={this.handleModal}>Login</Button>\r\n\r\n                <Modal show={this.state.showModal} onHide={this.handleModal}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Login</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group size=\"lg\" controlId=\"email\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control autoFocus name=\"email\" placeholder=\"email\"  type=\"email\" value={this.state.email} onChange={(e) => { this.handleInputChange(e)} } />\r\n                                { this.state.submitted && this.state.errors.email.length > 0 &&  <span className=\"text-danger\">{this.state.errors.email}</span>}\r\n                            </Form.Group>\r\n                            <Form.Group size=\"lg\" controlId=\"password\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\"  name=\"password\" placeholder=\"password\"  value={this.state.password} onChange={(e) => { this.handleInputChange(e)} } />\r\n                                { this.state.submitted && this.state.errors.password.length > 0 &&  <span className=\"text-danger\">{this.state.errors.password}</span>}\r\n\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleModal}  >\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.loginForm}>\r\n                            Ok\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n    handleModal = () => {\r\n        this.setState({\r\n            showModal : !this.state.showModal,\r\n            password: '',\r\n            'email': '',\r\n        });\r\n    }\r\n    validationErrorMessage = (event) => {\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n        switch (name) {\r\n            case 'email':\r\n                errors.email = this.isValidEmail(value) ? '' : 'Wrong email format. Please check and try again.';\r\n                break;\r\n            case 'password':\r\n                errors.password = value.length < 1 ? 'Enter Password' : '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({ errors });\r\n    }\r\n\r\n    validateForm = (errors) => {\r\n        let valid = true;\r\n        Object.entries(errors).forEach(item => {\r\n            console.log(item)\r\n            item && item[1].length > 0 && (valid = false)\r\n        })\r\n        return valid;\r\n    }\r\n    isValidEmail = (value) => {\r\n        return !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,64}$/i.test(value))\r\n    }\r\n\r\n    loginForm = async (event) => {\r\n        this.setState({ submitted: true });\r\n        event.preventDefault();\r\n        if (this.validateForm(this.state.errors)) {\r\n            console.log('Valid Form')\r\n        } else {\r\n            console.log('Invalid Form')\r\n        }\r\n    }\r\n\r\n}",["221","222"],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PharmacistProfilePage.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PharmacistWorkingHours.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PharmacistHomePage.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\ISAdminHomePage.js",["223","224","225","226","227","228","229"],"import React from \"react\";\r\nimport PharmacyRegistration from \"../components/PharmacyRegistration\";\r\nimport DermatologistRegistration from \"../components/DermatologistRegistration\";\r\nimport SupplierRegistration from \"../components/SupplierRegistration\";\r\nimport AddNewMedication from \"../components/AddNewMedication\";\r\nimport Complaints from \"../components/Complaints\";\r\nimport LoyaltyProgram from \"../components/LoyaltyProgram\";\r\nimport PharmacyAdminRegistration from \"../components/PharmacyAdminRegistration\";\r\n\r\nexport class ISAdminHomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            pharmacyAdmin:{\r\n                firstName:'',\r\n                lastName:'',\r\n            },\r\n            navbar : \"\",\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let  pharmacyAdmin= {\r\n            firstName: 'Snezana',\r\n            lastName: 'Bulajic',\r\n        }\r\n        this.setState({\r\n            pharmacyAdmin : pharmacyAdmin\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron jumbotron-fluid\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-4\">{this.state.pharmacyAdmin.firstName +\" \" +this.state.pharmacyAdmin.lastName }</h1>\r\n                </div>\r\n\r\n                <ul className=\"nav justify-content-center\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" href='#' onClick={this.handleChange} name=\"pharmacy\">Pharmacy registration</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"dermatologist\" onClick={this.handleChange}>Dermatologist registration</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"supplier\" onClick={this.handleChange}>Supplier registration</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"medication\" onClick={this.handleChange}>Add medication</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"complaint\" onClick={this.handleChange}>Complaint</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"loyalty\" onClick={this.handleChange}>Loyalty program</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"pharmacyAdmin\" onClick={this.handleChange}>Add new pharmacy admin</a>\r\n                    </li>\r\n\r\n                </ul>\r\n                {this.renderNavbar()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            navbar : name\r\n        });\r\n    }\r\n\r\n    renderNavbar = () => {\r\n        if (this.state.navbar === \"pharmacy\")\r\n            return (\r\n                <PharmacyRegistration/>\r\n            );\r\n        else if (this.state.navbar === \"dermatologist\")\r\n            return (\r\n                <DermatologistRegistration/>\r\n            );\r\n        else if (this.state.navbar === \"supplier\")\r\n            return (\r\n                <SupplierRegistration/>\r\n            );\r\n        else if (this.state.navbar === \"medication\")\r\n            return (\r\n                <AddNewMedication/>\r\n            );\r\n        else if (this.state.navbar === \"complaint\")\r\n            return (\r\n                <Complaints/>\r\n            );\r\n        else if (this.state.navbar === \"loyalty\")\r\n            return (\r\n                <LoyaltyProgram/>\r\n            );else if (this.state.navbar === \"pharmacyAdmin\")\r\n            return (\r\n                <PharmacyAdminRegistration/>\r\n            );\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\SupplierRegistration.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\LoyaltyProgram.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\Complaints.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\PharmacyRegistration.js",["230","231","232"],"import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport Script from 'react-load-script';\r\nimport Select from \"react-select\";\r\n\r\nconst options = [\r\n    { value: 'Marko', label: 'Marko Markovic' },\r\n    { value: 'Zoran', label: 'Zoran Petrovic' },\r\n    { value: 'Ana', label: 'Ana Matic' },\r\n];\r\n\r\nexport default class PharmacyRegistration extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            pharmacy: {\r\n                name: '',\r\n                description: '',\r\n                dermatologist : [],\r\n                pharmacist : [],\r\n                address : {\r\n                    street : \"\",\r\n                    town : \"\",\r\n                    country : \"\",\r\n                    latitude : 51.507351,\r\n                    longitude : -0.127758\r\n                },\r\n                medicationReservation : [],\r\n                grade : 0,\r\n                pharmacyAdmin: [],\r\n\r\n            },\r\n            selectedOption: null,\r\n            numberOfRows : 1,\r\n            address2 : {\r\n                street : \"\",\r\n                town : \"\",\r\n                country : \"\",\r\n                latitude :\"\",\r\n                longitude : \"\"\r\n            },\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n\r\n    }\r\n    handleDermatologistChange = selectedOption => {\r\n        const newitems = this.state.pharmacy.dermatologist\r\n        newitems.push(selectedOption)\r\n\r\n        this.setState({\r\n            dermatologist:newitems\r\n        });\r\n        console.log(`dermatologist selected`, selectedOption);\r\n    };\r\n\r\n    handlePharmacistChange = selectedOption => {\r\n        const newitems = this.state.pharmacy.pharmacist\r\n        newitems.push(selectedOption)\r\n\r\n        this.setState({\r\n            pharmacist:newitems\r\n        });\r\n        console.log(`Option selected:`, selectedOption);\r\n    };\r\n    handleAdminChange = selectedOption => {\r\n        const newitems = this.state.pharmacy.pharmacyAdmin\r\n        newitems.push(selectedOption)\r\n\r\n        this.setState({\r\n            pharmacyAdmin:newitems\r\n        });\r\n        console.log(`Option selected:`, selectedOption);\r\n    };\r\n\r\n    handleInputChange = (event) => {\r\n\r\n        const { name, value } = event.target;\r\n        //console.log(name);\r\n        const address = this.state.pharmacy.address;\r\n        const medicationQuantity = this.state.pharmacy.medicationQuantity;\r\n\r\n        if(name==\"medication\"){\r\n            medicationQuantity[name]=value;\r\n        }else if(name==\"quantity\"){\r\n            medicationQuantity[name]=value;\r\n        }\r\n        const pharmacy = this.state.pharmacy;\r\n        pharmacy[name] = value;\r\n        pharmacy[address]=address;\r\n        pharmacy[medicationQuantity]=address;\r\n        console.log(this.state.pharmacy)\r\n        this.setState({ pharmacy });\r\n    }\r\n\r\n\r\n    handleSubmit = () => {\r\n        console.log(this.state.medicationOrder);\r\n    }\r\n//, componentRestrictions: { country: \"rs\" }\r\n    //                        <input type=\"text\" value={this.state.pharmacy.address.street} name=\"street\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"Enter Street\" />\r\n    handleScriptLoad = () => {\r\n        var input = document.getElementById('street');\r\n        var options = {\r\n            types: ['geocode'] //this should work !\r\n        };\r\n        const google = window.google\r\n\r\n        this.street = new google.maps.places.Autocomplete(input, options);\r\n        this.street.addListener('place_changed', this.handlePlaceSelect);\r\n    }\r\n\r\n    handlePlaceSelect = () => {\r\n        const addressObject = this.street.getPlace();\r\n        try {\r\n            console.log( addressObject.address_components)\r\n\r\n            const address = addressObject.address_components;\r\n\r\n            if (address) {\r\n                this.setState(\r\n                    {\r\n                        //query: addressObject.formatted_address,\r\n                        address2: {\r\n                            street: address[1].long_name + \" \" + address[0].long_name,\r\n                            town: address[2].long_name,\r\n                            country: address[address.length-1].long_name,\r\n                            latitude:addressObject.geometry.location.lat(),\r\n                            longitude: addressObject.geometry.location.lng()\r\n                        },\r\n                    }\r\n                );\r\n            }\r\n            this.state.pharmacy.address=this.state.address2;\r\n\r\n        }\r\n        catch{\r\n        //treba da printa gresku\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { selectedOption } = this.state;\r\n        return (\r\n            <div>\r\n                <h3 style={({ marginTop: '5rem', textAlignVertical: \"center\",textAlign: \"center\"})}>Pharmacy registration</h3>\r\n                <div className=\"row\" style={({ marginTop: '3rem' })} >\r\n                    <label className=\"col-sm-2 col-form-label\">Name</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.pharmacy.name} name=\"name\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"Pharmacy name\" />\r\n                        { this.state.submitted && this.state.errors.pharmacy.name.length > 0 &&  <span className=\"text-danger\">{this.state.errors.pharmacy.name}</span>}\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"row\" style={({ marginTop: '1rem' })} >\r\n                    <label className=\"col-sm-2 col-form-label\">Street</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <Script type=\"text/javascript\"url=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBFrua9P_qHcmF253UAXnw1wHnIC7nD2DY&libraries=places\" onLoad={this.handleScriptLoad}/>\r\n                        <input type=\"text\" id=\"street\" placeholder=\"Enter Street\" value={this.query}/>\r\n\r\n\r\n                        { this.state.submitted && this.state.errors.pharmacy.address.street.length > 0 &&  <span className=\"text-danger\">{this.state.errors.pharmacy.address.street}</span>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\" style={({ marginTop: '1rem' })} >\r\n                    <label className=\"col-sm-2 col-form-label\">Description</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.pharmacy.description} name=\"description\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"Description\" />\r\n                        { this.state.submitted && this.state.errors.pharmacy.description.length > 0 &&  <span className=\"text-danger\">{this.state.errors.pharmacy.description}</span>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\" style={({ marginTop: '1rem' })} >\r\n                    <label className=\"col-sm-2 col-form-label\">Dermatologist</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <Select isMulti isSearchable placeholder=\"Choose...\" value={selectedOption}\r\n                            onChange={this.handleDermatologistChange}\r\n                            options={options}\r\n                        />\r\n                        { this.state.submitted && this.state.errors.pharmacy.description.length > 0 &&  <span className=\"text-danger\">{this.state.errors.pharmacy.description}</span>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\" style={({ marginTop: '1rem' })} >\r\n                    <label className=\"col-sm-2 col-form-label\">Pharmacist</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <Select isMulti isSearchable placeholder=\"Choose...\" value={selectedOption}\r\n                            onChange={this.handlePharmacistChange}\r\n                            options={options}\r\n                        />\r\n                        { this.state.submitted && this.state.errors.pharmacy.pharmacist.length > 0 &&  <span className=\"text-danger\">{this.state.errors.pharmacy.pharmacist}</span>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\" style={({ marginTop: '1rem' })} >\r\n                    <label className=\"col-sm-2 col-form-label\">Pharmacy admin</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <Select isMulti isSearchable placeholder=\"Choose...\" value={selectedOption}\r\n                                onChange={this.handleAdminChange}\r\n                            options={options}\r\n                        />\r\n                        { this.state.submitted && this.state.errors.pharmacy.pharmacyAdmin.length > 0 &&  <span className=\"text-danger\">{this.state.errors.pharmacy.pharmacyAdmin}</span>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\" style={({ marginTop: '1rem' })} >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-5 mb-2\">\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <Button variant=\"primary\" onClick={this.submitForm} >Done</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\AddNewMedication.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\DermatologistRegistration.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\PharmacyAdminRegistration.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\WorkingHoursCalendar.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PharmacyPage.js",["233","234","235","236","237","238","239","240","241"],"import React from 'react';\r\nimport Promotions from \"../components/pharmacy/Promotions\";\r\nimport PharmacyEmployees from \"../components/pharmacy/PharmacyEmployees\";\r\nimport PharmacyMedications from \"../components/pharmacy/PharmacyMedications\";\r\nimport PharmacyVacationsRequests from \"../components/pharmacy/PharmacyVacationsRequests\";\r\nimport PharmacyMedicationOrders from \"../components/pharmacy/PharmacyMedicationOrders\";\r\nimport PharmacyMedicationQueries from \"../components/pharmacy/PharmacyMedicationQueries\";\r\nimport PharmacyDescription from \"../components/pharmacy/PharmacyDescription\";\r\nimport PriceList from \"../components/pharmacy/PriceList\";\r\nimport PharmacyReports from \"../components/pharmacy/PharmacyReports\";\r\n\r\n\r\nexport default class PharmacyPage extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pharmacy : {\r\n                id : 0,\r\n                name : \"\",\r\n                address : {\r\n                    street : \"\",\r\n                    town : \"\",\r\n                    country : \"\",\r\n                    latitude : 51.507351,\r\n                    longitude : -0.127758\r\n                },\r\n                description : \"\",\r\n                dermatologist : [],\r\n                pharmacist : [],\r\n                medicationQuantity : [],\r\n                medicationReservation : [],\r\n                grade : 0\r\n            },\r\n            navbar : \"description\",\r\n            userType : \"pharmacyAdmin\"\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let pharmacy = {\r\n            id: 0,\r\n            name: \"Jankovic\",\r\n            grade : 3.89,\r\n            address: {\r\n                street: \"Gunduliceva 1A\",\r\n                town: \"Novi Sad\",\r\n                country: \"Serbia\",\r\n                longitude: -0.118092,\r\n                latitude: 51.509865\r\n            },\r\n            description: \"Apoteka za sve!\",\r\n            dermatologist: [\r\n                {\r\n                    id: 0,\r\n                    firstName: \"Marko\",\r\n                    lastName: \"Markovic\",\r\n                    userType: \"dermatologist\"\r\n                }\r\n            ],\r\n            pharmacist: [\r\n                {\r\n                    id: 0,\r\n                    firstName: \"Dragana\",\r\n                    lastName: \"Markovic\",\r\n                    userType: \"dermatologist\"\r\n                }\r\n            ],\r\n        }\r\n        this.setState({\r\n            pharmacy : pharmacy\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron jumbotron-fluid\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-4\">{this.state.pharmacy.name}</h1>\r\n                </div>\r\n                <br/>\r\n\r\n                <ul className=\"nav justify-content-center\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"description\" onClick={this.handleChange}>Description</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" href='#' onClick={this.handleChange} name=\"employees\">Dermatolozi & farmaceuti</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"medications\" onClick={this.handleChange}>Lekovi</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"vacationRequests\" onClick={this.handleChange} style={this.state.userType === 'pharmacyAdmin' ? {display : 'block'} : {display : 'none'}}>Godisnji odmori</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"promotions\" onClick={this.handleChange}>Akcije & promocije</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"medicationOrders\" onClick={this.handleChange} style={this.state.userType === 'pharmacyAdmin' ? {display : 'block'} : {display : 'none'}}>Narudzbenice & ponude</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"medicationQueries\" onClick={this.handleChange} style={this.state.userType === 'pharmacyAdmin' ? {display : 'block'} : {display : 'none'}}>Upiti nad lekovima</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"priceList\" onClick={this.handleChange} style={this.state.userType === 'pharmacyAdmin' ? {display : 'block'} : {display : 'none'}}>Price list</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"reports\" onClick={this.handleChange} style={this.state.userType === 'pharmacyAdmin' ? {display : 'block'} : {display : 'none'}}>Reports</a>\r\n                    </li>\r\n                </ul>\r\n                {this.renderNavbar()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            navbar : name\r\n        });\r\n    }\r\n\r\n    renderNavbar = () => {\r\n        if (this.state.navbar === \"promotions\")\r\n            return (\r\n                <Promotions/>\r\n            );\r\n        else if (this.state.navbar === 'description')\r\n            return (\r\n                <PharmacyDescription pharmacy = {this.state.pharmacy } />\r\n            )\r\n        else if (this.state.navbar === 'reports')\r\n            return (\r\n                <PharmacyReports pharmacy = {this.state.pharmacy } />\r\n            )\r\n        else if (this.state.navbar === 'priceList')\r\n            return (\r\n                <PriceList pharmacy = {this.state.pharmacy } />\r\n            )\r\n        else if (this.state.navbar === \"employees\")\r\n            return (\r\n                <PharmacyEmployees pharmacyId = {this.state.pharmacy.id}/>\r\n            );\r\n        else if (this.state.navbar === \"medications\")\r\n            return (\r\n                <PharmacyMedications/>\r\n            );\r\n        else if (this.state.navbar === 'vacationRequests')\r\n            return (\r\n              <PharmacyVacationsRequests />\r\n            );\r\n        else if (this.state.navbar === 'medicationOrders')\r\n            return (\r\n                <PharmacyMedicationOrders showContent = 'listOrders'/>\r\n            );\r\n        else if (this.state.navbar === 'medicationQueries')\r\n            return (\r\n                <PharmacyMedicationQueries />\r\n            );\r\n    }\r\n}\r\n","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\IndexPage.js",["242"],"import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\nimport UnregisteredLayout from \"../layout/UnregisteredLayout\"\r\nimport PharmacyListing from \"../components/pharmacy/PharmacyListing\"\r\nimport MedicationListing from \"../components/MedicationListing\"\r\n\r\nexport default class IndexPage extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            pharmacies : [],\r\n            medications : []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            pharmacies : [\r\n                {\r\n                    name : 'Jankovic',\r\n                    address : 'Narodnog Fronta 5, Novi Sad, Serbia',\r\n                    description : 'Fabulozna apoteka za svaciji ukus i svaku priliku :*'\r\n                },\r\n                {\r\n                    name : 'Biljana i Luka',\r\n                    address : 'Bulevar Oslobodjenja 5, Novi Sad, Serbia',\r\n                    description : 'Mi smo biljana i luka ;;;))))'\r\n                }\r\n            ],\r\n            medications : [\r\n                {\r\n                    name: \"Xanax\",\r\n                    type: \"antihistamine\",\r\n                    dose: 2,\r\n                    loyaltyPoints: 3,\r\n                    medicationShape: \"pill\",\r\n                    manufacturer: \"ABC\",\r\n                    medicationIssue: \"withPrescription\",\r\n                    note: \"take when hungry\",\r\n                    quantity : 10,\r\n                    price : 400.00,\r\n                    grade : 4,\r\n                    ingredient: [\r\n                        {\r\n                            name: \"brufen\"\r\n                        },\r\n                        {\r\n                            name: \"linex\"\r\n                        }\r\n    \r\n                    ],\r\n                    sideEffect: [\r\n                        {\r\n                            name: \"nausea\"\r\n                        },\r\n                        {\r\n                            name: \"blindness\"\r\n                        }\r\n                    ],\r\n                    alternatives: [\r\n                        {\r\n                            name: \"brufen\"\r\n                        },\r\n                        {\r\n                            name: \"linex\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"Linex\",\r\n                    type: \"antihistamine\",\r\n                    dose: 2,\r\n                    grade : 4,\r\n                    loyaltyPoints: 3,\r\n                    medicationShape: \"pill\",\r\n                    manufacturer: \"ABC\",\r\n                    quantity : 10,\r\n                    price : 1300,\r\n                    medicationIssue: \"withPrescription\",\r\n                    note: \"take when hungry\",\r\n                    ingredient: [\r\n                        {\r\n                            name: \"brufen\"\r\n                        },\r\n                        {\r\n                            name: \"linex\"\r\n                        }\r\n    \r\n                    ],\r\n                    sideEffect: [\r\n                        {\r\n                            name: \"nausea\"\r\n                        },\r\n                        {\r\n                            name: \"blindness\"\r\n                        }\r\n                    ],\r\n                    alternatives: [\r\n                        {\r\n                            name: \"brufen\"\r\n                        },\r\n                        {\r\n                            name: \"linex\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <UnregisteredLayout>\r\n                    <PharmacyListing pharmacies={this.state.pharmacies}/>\r\n                    <MedicationListing medications={this.state.medications}/>\r\n                </UnregisteredLayout>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyEmployees.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyMedicationOrders.js",["243","244","245","246"],"import React from 'react';\r\nimport {Button, Modal, FormControl, Navbar} from \"react-bootstrap\";\r\nimport MedicationOrdersList from \"./MedicationOrdersList\";\r\nimport MedicationOffers from \"./MedicationOffers\";\r\nimport CreateOrder from \"./CreateOrder\";\r\n\r\nexport default class PharmacyMedicationOrders extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userType : 'pharmacyAdmin',\r\n            medicationOrders : [],\r\n            showModal : false,\r\n            showContent : 'listOrders'\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (this.state.showContent === 'showOffers' && nextState.showContent === 'showOffers') //when clicking on navbar st default behaviour to listOrders\r\n            this.setState({\r\n                showContent : 'listOrders'\r\n            })\r\n        else if (this.state.showContent === 'showCreateOrder' && nextState.showContent === 'showCreateOrder') //when clicking on navbar st default behaviour to listOrders\r\n            this.setState({\r\n                showContent : 'listOrders'\r\n            })\r\n        return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        let medicationOrders = [\r\n            {\r\n                pharmacyAdmin : {\r\n                    firstName : 'Mirko',\r\n                    lastName : 'Mirkovic'\r\n                },\r\n                deadLine : '21.3.2021.',\r\n                medicationQuantity: {\r\n\r\n                },\r\n                status : 'pending',\r\n                medicationOffers : []\r\n            },\r\n            {\r\n                pharmacyAdmin : {\r\n                    firstName : 'Jelena',\r\n                    lastName : 'Rozga'\r\n                },\r\n                deadLine : '13.5.2021.',\r\n                medicationQuantity: {\r\n\r\n                },\r\n                status : 'processed',\r\n                medicationOffers : []\r\n            }\r\n        ];\r\n\r\n        this.setState({\r\n            medicationOrders : medicationOrders,\r\n            showContent : this.props.showContent\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br/><br/>\r\n                {this.handleContent()}\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n    handleContent = () => {\r\n        if (this.state.showContent === 'listOrders')\r\n            return (\r\n                <MedicationOrdersList showOffers={this.changeContent} showCreateOrder={this.changeContent}/>\r\n            );\r\n        else if (this.state.showContent === 'showOffers')\r\n            return (\r\n              <MedicationOffers order = {this.state.medicationOrders[0]}  />\r\n            );\r\n        else if (this.state.showContent === 'showCreateOrder')\r\n            return (\r\n              <CreateOrder />\r\n            );\r\n    }\r\n\r\n    changeContent = (content) => {\r\n        this.setState({\r\n            showContent : content\r\n        })\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyVacationsRequests.js",["247","248","249"],"import React from 'react';\r\nimport {Button, Form, FormControl, Modal, Navbar} from \"react-bootstrap\";\r\n\r\nexport default class PharmacyVacationsRequests extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            vacationRequests : [],\r\n            userType : 'pharmacyAdmin',\r\n            showModal : false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let vacationRequests = [\r\n            {\r\n                periodStart : '21.2.2021.',\r\n                periodEnd : '03.03.2021.',\r\n                vacationNote : 'Bahami',\r\n                employeeFirstName : 'Marko',\r\n                employeeLastName : 'Jugovic',\r\n                vacationRequestStatus : 'requested',\r\n                employeeType : 'pharmacist',\r\n                rejectionNote : ''\r\n            },\r\n            {\r\n                periodStart : '21.5.2021.',\r\n                periodEnd : '03.06.2021.',\r\n                vacationNote : 'Covid-19',\r\n                employeeFirstName : 'Dejan',\r\n                employeeLastName : 'Petrovic',\r\n                vacationRequestStatus : 'approved',\r\n                employeeType : 'dermatologist',\r\n                rejectionNote : ''\r\n            },\r\n            {\r\n                periodStart : '21.2.2021.',\r\n                periodEnd : '03.10.2021.',\r\n                vacationNote : 'Beba',\r\n                employeeFirstName : 'Dijana',\r\n                employeeLastName : 'Jankovic',\r\n                vacationRequestStatus : 'rejected',\r\n                employeeType : 'pharmacist',\r\n                rejectionNote : ''\r\n            }\r\n        ];\r\n\r\n        this.setState({\r\n            vacationRequests : vacationRequests\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div>\r\n                    <br/><br/>\r\n                    <h1>Trazena & odobrena odsustva</h1>\r\n\r\n                    <br/>\r\n\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Ime</th>\r\n                            <th scope=\"col\">Prezime</th>\r\n                            <th scope=\"col\">Tip radnika</th>\r\n                            <th scope=\"col\">Razlog</th>\r\n                            <th scope=\"col\">Pocetak odsustva</th>\r\n                            <th scope=\"col\">Kraj odsustva</th>\r\n                            <th scope=\"col\">Status</th>\r\n\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.state.vacationRequests.map((vacationRequest, index) => (\r\n                            <tr>\r\n                                <th scope=\"row\">{index+1}</th>\r\n                                <td>{vacationRequest.employeeFirstName}</td>\r\n                                <td>{vacationRequest.employeeLastName}</td>\r\n                                <td>{vacationRequest.employeeType}</td>\r\n                                <td>{vacationRequest.vacationNote}</td>\r\n                                <td>{vacationRequest.periodStart}</td>\r\n                                <td>{vacationRequest.periodEnd}</td>\r\n                                <td>{vacationRequest.vacationRequestStatus}</td>\r\n\r\n                                <td style={this.state.userType === 'pharmacyAdmin' && vacationRequest.vacationRequestStatus === 'requested' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                                    <Button variant=\"outline-success\" onClick={this.handleModal}>\r\n                                        Odobri\r\n                                    </Button>\r\n                                </td >\r\n                                <td style={this.state.userType === 'pharmacyAdmin' && vacationRequest.vacationRequestStatus === 'requested' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                                    <Button variant=\"outline-danger\" onClick={this.handleModal}>\r\n                                        Otkazi\r\n                                    </Button>\r\n                                </td >\r\n                                <td style={this.state.userType === 'pharmacyAdmin' && vacationRequest.vacationRequestStatus === 'rejected' ? {display : 'none'} : {}}>\r\n                                </td >\r\n                                <td style={this.state.userType === 'pharmacyAdmin' && vacationRequest.vacationRequestStatus === 'rejected' ? {display : 'none'} : {}}>\r\n                                </td >\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </table>\r\n\r\n\r\n\r\n                    <Modal show={this.state.showModal} onHide={this.handleModal}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Modal heading</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={this.handleModal}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={this.handleModal}>\r\n                                Save Changes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleModal = () => {\r\n        this.setState({\r\n            showModal : !this.state.showModal\r\n        });\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyMedicationQueries.js",["250"],"import React from 'react';\r\n\r\nexport default class PharmacyMedicationQueries extends React.Component{\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                a\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\Promotions.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyDescription.js",["251"],"import React from 'react';\r\nimport { Map, GoogleApiWrapper, InfoWindow, Marker} from 'google-maps-react';\r\nimport {PharmacyPage} from \"../../pages/PharmacyPage\";\r\n\r\nconst mapStyles = {\r\n    width: '50%',\r\n    height: '50%'\r\n};\r\n\r\n\r\nexport class PharmacyDescription extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userType : 'pharmacyAdmin',\r\n            pharmacy : this.props.pharmacy,\r\n            showingInfoWindow: false,  // Hides or shows the InfoWindow\r\n            activeMarker: {},          // Shows the active marker upon click\r\n            selectedPlace: {},\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"card\">\r\n                                <h5 className=\"card-header\">\r\n                                    {this.state.pharmacy.description}\r\n                                </h5>\r\n                                <div className=\"card-body\">\r\n                                    <p className=\"card-text\">\r\n                                        Address : {this.state.pharmacy.address.street} <br/>\r\n                                        Grade : {this.state.pharmacy.grade} <br/>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Map\r\n                    google={this.props.google}\r\n                    zoom={14}\r\n                    style={mapStyles}\r\n                    initialCenter={\r\n                        {\r\n                            lat: this.state.pharmacy.address.latitude,\r\n                            lng: this.state.pharmacy.address.longitude\r\n                        }\r\n                    }\r\n                >\r\n                    <Marker\r\n                        onClick={this.onMarkerClick}\r\n                        name={this.state.pharmacy.address.street}\r\n                    />\r\n                    <InfoWindow\r\n                        marker={this.state.activeMarker}\r\n                        visible={this.state.showingInfoWindow}\r\n                        onClose={this.onClose}\r\n                    >\r\n                        <div>\r\n                            <h4>{this.state.selectedPlace.name}</h4>\r\n                        </div>\r\n                    </InfoWindow>\r\n                </Map>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onMarkerClick = (props, marker, e) =>\r\n        this.setState({\r\n            selectedPlace: props,\r\n            activeMarker: marker,\r\n            showingInfoWindow: true\r\n        });\r\n\r\n    onClose = props => {\r\n        if (this.state.showingInfoWindow) {\r\n            this.setState({\r\n                showingInfoWindow: false,\r\n                activeMarker: null\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyBFrua9P_qHcmF253UAXnw1wHnIC7nD2DY'\r\n})(PharmacyDescription)","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyMedications.js",["252"],"import React from 'react';\r\nimport {Button, Form, FormControl, Modal, Navbar, Col} from \"react-bootstrap\";\r\nimport DropdownItem from \"react-bootstrap/DropdownItem\";\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\n\r\nconst options = [\r\n    'one', 'two', 'three'\r\n];\r\nconst defaultOption = options[0];\r\n\r\nexport default class PharmacyMedications extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            medications : [],\r\n            userType : \"\",\r\n            showModal : false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let medications = [\r\n            {\r\n                name: \"Xanax\",\r\n                type: \"antihistamine\",\r\n                dose: 2,\r\n                loyaltyPoints: 3,\r\n                medicationShape: \"pill\",\r\n                manufacturer: \"ABC\",\r\n                medicationIssue: \"withPrescription\",\r\n                note: \"take when hungry\",\r\n                quantity : 10,\r\n                price : 400.00,\r\n                grade : 4,\r\n                ingredient: [\r\n                    {\r\n                        name: \"brufen\"\r\n                    },\r\n                    {\r\n                        name: \"linex\"\r\n                    }\r\n\r\n                ],\r\n                sideEffect: [\r\n                    {\r\n                        name: \"nausea\"\r\n                    },\r\n                    {\r\n                        name: \"blindness\"\r\n                    }\r\n                ],\r\n                alternatives: [\r\n                    {\r\n                        name: \"brufen\"\r\n                    },\r\n                    {\r\n                        name: \"linex\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                name: \"Linex\",\r\n                type: \"antihistamine\",\r\n                dose: 2,\r\n                grade : 4,\r\n                loyaltyPoints: 3,\r\n                medicationShape: \"pill\",\r\n                manufacturer: \"ABC\",\r\n                quantity : 10,\r\n                price : 1300,\r\n                medicationIssue: \"withPrescription\",\r\n                note: \"take when hungry\",\r\n                ingredient: [\r\n                    {\r\n                        name: \"brufen\"\r\n                    },\r\n                    {\r\n                        name: \"linex\"\r\n                    }\r\n\r\n                ],\r\n                sideEffect: [\r\n                    {\r\n                        name: \"nausea\"\r\n                    },\r\n                    {\r\n                        name: \"blindness\"\r\n                    }\r\n                ],\r\n                alternatives: [\r\n                    {\r\n                        name: \"brufen\"\r\n                    },\r\n                    {\r\n                        name: \"linex\"\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n        this.setState({\r\n            medications : medications,\r\n            userType : \"pharmacyAdmin\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br/><br/>\r\n                <h1>Lekovi</h1>\r\n\r\n                <br/><br/>\r\n                <Button variant=\"success\" onClick={this.handleModal}>Dodaj lek</Button>\r\n                <Button variant=\"primary\">Proveri dostupnost preko eRecepta</Button>\r\n                <br/><br/>\r\n\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Form inline>\r\n                            <FormControl type=\"text\" placeholder=\"Search by name\" className=\"mr-sm-2\" />\r\n                            <Button variant=\"outline-success\">Search</Button>\r\n                        </Form>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Naziv</th>\r\n                        <th scope=\"col\">Tip</th>\r\n                        <th scope=\"col\">Ocena</th>\r\n                        <th scope=\"col\">Kolicina</th>\r\n                        <th scope=\"col\">Cena</th>\r\n                        <th scope=\"col\">Sastojci</th>\r\n                        <th scope=\"col\">Alternative</th>\r\n\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.medications.map((medication, index) => (\r\n                        <tr>\r\n                            <th scope=\"row\">{index+1}</th>\r\n                            <td>{medication.name}</td>\r\n                            <td>{medication.type}</td>\r\n                            <td>{medication.grade}</td>\r\n                            <td>{medication.quantity}</td>\r\n                            <td>{medication.price}</td>\r\n                            <td>\r\n                                <Dropdown options={options}  value={defaultOption} />\r\n                            </td>\r\n                            <td>\r\n                                <Dropdown options={options}  value={defaultOption} />\r\n                            </td>\r\n                            <td style={this.state.userType === 'patient' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                                <Button variant=\"primary\" onClick={this.handleModal}>\r\n                                    Rezervisi\r\n                                </Button>\r\n                            </td >\r\n\r\n                            <td style={this.state.userType === 'pharmacyAdmin' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                                <Button variant=\"danger\" onClick={this.handleModal}>\r\n                                    Delete\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n\r\n\r\n\r\n                <Modal show={this.state.showModal} onHide={this.handleModal}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Dodavanje leka</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Col>\r\n                                    <Form.Control placeholder=\"Medication\" as={\"select\"} >\r\n                                        <option disabled={true} selected=\"selected\">Choose...</option>\r\n                                        <option >...</option>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Control placeholder=\"Quantity\"  />\r\n                                </Col>\r\n                            </Form.Row>\r\n                        </Form>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleModal}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.handleModal}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n    handleModal = () => {\r\n        this.setState({\r\n            showModal : !this.state.showModal\r\n        });\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PriceList.js",["253"],"import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nexport default class PriceList extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userType : 'pharmacyAdmin'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div>\r\n                        <h3>\r\n                            Price List\r\n                        </h3>\r\n\r\n                        <button type=\"button\" class=\"btn btn-info\">Kreiraj promociju</button>\r\n                        <div className=\"row\">\r\n\r\n\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyReports.js",["254"],"import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nexport default class PharmacyReports extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userType : 'pharmacyAdmin'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div>\r\n                        <h3>\r\n                            Reports\r\n                        </h3>\r\n\r\n                        <button type=\"button\" class=\"btn btn-info\">Kreiraj promociju</button>\r\n                        <div className=\"row\">\r\n\r\n\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\MedicationListing.jsx",["255"],"import React from 'react'\r\nimport {Card, Col, Row} from \"react-bootstrap\";\r\n\r\nexport default class MedicationListing extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        const medications = this.props.medications.map((medication, index) => {\r\n            let ingredients = ''\r\n            medication.ingredient.forEach(i => ingredients += i.name)\r\n            return (\r\n                <Col xs={3} key={index}>\r\n                <Card \r\n                    bg={'dark'}\r\n                    key={index}\r\n                    text={'white'}\r\n                    style={{ width: '18rem', height: '18rem' }}\r\n                    className=\"mb-2\"\r\n                >\r\n                    <Card.Body>\r\n                    <Card.Title>{medication.name}</Card.Title>\r\n                        <Card.Subtitle className=\"mb-5 mt-2 text-muted\">{medication.manufacturer}</Card.Subtitle>\r\n                        <Card.Text>\r\n                        {ingredients}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                </Col>\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                <Row>\r\n                <h2 className={'mt-5 ml-3'} id=\"medications\">Medications</h2>\r\n                </Row>\r\n                <Row className={'mt-4'}>\r\n                    {medications}\r\n                </Row>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyListing.jsx",["256"],"import React from 'react';\r\nimport {Card, Col, Row} from \"react-bootstrap\";\r\n\r\nexport default class PharmacyListing extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const pharmacies = this.props.pharmacies.map((pharmacy, index) => {\r\n            return (\r\n                <Col xs={3} >\r\n                <Card \r\n                    bg={'dark'}\r\n                    key={index}\r\n                    text={'white'}\r\n                    style={{ width: '18rem', height: '18rem' }}\r\n                    className=\"mb-2\"\r\n                >\r\n                    <Card.Body>\r\n                    <Card.Title>{pharmacy.name}</Card.Title>\r\n                        <Card.Subtitle className=\"mb-5 mt-2 text-muted\">{pharmacy.address}</Card.Subtitle>\r\n                        <Card.Text>\r\n                        {pharmacy.description}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                </Col>\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                <Row>\r\n                <h2 className={'mt-5 ml-3'} id=\"pharmacies\">Pharmacies</h2>\r\n                </Row>\r\n                <Row className={'mt-4'}>\r\n                    {pharmacies}\r\n                </Row>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\layout\\UnregisteredLayout.jsx",["257","258"],"import React from 'react'\r\nimport { Container, Navbar, NavDropdown, Nav } from 'react-bootstrap';\r\nimport Login from \"../components/Login\";\r\n\r\nexport default class UnregisteredLayout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid style={{'background-color' : '#AEB6BF'}}>\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand href=\"/\">WebPharm</Navbar.Brand>\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"#pharmacies\">Pharmacies</Nav.Link>\r\n                            <Nav.Link href=\"#medications\">Medications</Nav.Link>\r\n                        </Nav>\r\n                        <Nav>\r\n                        <Login/>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                {this.props.children}\r\n            </Container>\r\n        )\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\MedicationOrdersList.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\MedicationOffers.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\CreateOrder.js",["259"],"import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nexport default class CreateOrder extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userType : 'pharmacyAdmin',\r\n            medications : [\r\n                {\r\n                    id : 1,\r\n                    name : \"Xantil\"\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name : \"Brufen\"\r\n                }\r\n            ],\r\n            inputOrder : {\r\n                medicationId : 0,\r\n                quantity : 0\r\n            },\r\n            numberOfRows : 1,\r\n            medicationOrder : {\r\n                deadLine : \"\",\r\n                medicationQuantity : []\r\n            },\r\n            date : \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\" style={({ marginLeft: '1rem' })}>\r\n                <div className=\"row\">\r\n                    <div>\r\n                        <h1>\r\n                            Create order\r\n                        </h1>\r\n                        <br/>\r\n                        Choose deadline for medication offers: <i/><i/><i/>\r\n                        <DatePicker  selected={this.state.medicationOrder.deadLine} minDate={new Date()} onChange={date => this.changeDatePicker(date)} />\r\n                        <table className=\"table table-hover\" >\r\n                            <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Medication</th>\r\n                                <th scope=\"col\">Quantity</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.renderInputRow(this.state.numberOfRows)}\r\n                                <Button variant={\"dark\"} onClick={this.handleSubmit}>Submit</Button>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    renderInputRow = (numberOfRows) => {\r\n        return Array.from({length: numberOfRows}, (v, i) => i).map((item, key) => {\r\n            let medicationId;\r\n            return (\r\n                <tr key={key}>\r\n                    <td>\r\n                        <select  name=\"medicationId\" onChange={this.handleInputChange}>\r\n                            <option disabled={true} selected=\"selected\">select</option>\r\n                            {this.state.medications.map((medication) => <option key={medication.id} value={medication.id}>{medication.name}</option>)}\r\n                        </select>\r\n                    </td>\r\n                    <td onChange={this.handleInputChange}>\r\n                        <input type=\"text\" className=\"in-text medium\"  name=\"quantity\" />\r\n                    </td>\r\n                    <td>\r\n                        <Button variant={\"outline-primary\"} onClick={this.incrementNumberOfRows}>+</Button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        });\r\n    }\r\n\r\n    incrementNumberOfRows = async () => {\r\n\r\n        if (this.state.inputOrder.medicationId === 0) {\r\n            alert('Please select medication!')\r\n            return;\r\n        }\r\n\r\n        console.log(this.state.inputOrder);\r\n        await this.setState({\r\n            numberOfRows : this.state.numberOfRows+1\r\n        })\r\n\r\n        await this.setState({\r\n            medicationOrder : {\r\n                ...this.state.medicationOrder,\r\n                medicationQuantity : this.state.medicationOrder.medicationQuantity.concat(this.state.inputOrder)\r\n            }\r\n        })\r\n\r\n        await this.setState({\r\n            inputOrder : {\r\n                medicationId : 0,\r\n                quantity : 0\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    changeDatePicker = (date) => {\r\n        this.setState({\r\n            medicationOrder : {\r\n                ...this.state.medicationOrder,\r\n                deadLine : date\r\n            }\r\n            }\r\n        );\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        let name = target.name;\r\n        let value = event.target.value;\r\n\r\n        this.setState({\r\n            inputOrder : {\r\n                ...this.state.inputOrder,\r\n                [name] : value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        console.log(this.state.medicationOrder);\r\n    }\r\n}",{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","severity":1,"message":"265","line":9,"column":8,"nodeType":"266","messageId":"267","endLine":9,"endColumn":29},{"ruleId":"264","severity":1,"message":"268","line":11,"column":8,"nodeType":"266","messageId":"267","endLine":11,"endColumn":30},{"ruleId":"269","severity":1,"message":"270","line":106,"column":66,"nodeType":"271","messageId":"272","endLine":106,"endColumn":68},{"ruleId":"264","severity":1,"message":"273","line":5,"column":10,"nodeType":"266","messageId":"267","endLine":5,"endColumn":25},{"ruleId":"269","severity":1,"message":"274","line":67,"column":32,"nodeType":"271","messageId":"272","endLine":67,"endColumn":34},{"ruleId":"269","severity":1,"message":"274","line":79,"column":32,"nodeType":"271","messageId":"272","endLine":79,"endColumn":34},{"ruleId":"269","severity":1,"message":"274","line":91,"column":32,"nodeType":"271","messageId":"272","endLine":91,"endColumn":34},{"ruleId":"264","severity":1,"message":"275","line":2,"column":17,"nodeType":"266","messageId":"267","endLine":2,"endColumn":21},{"ruleId":"264","severity":1,"message":"276","line":2,"column":17,"nodeType":"266","messageId":"267","endLine":2,"endColumn":28},{"ruleId":"264","severity":1,"message":"277","line":2,"column":9,"nodeType":"266","messageId":"267","endLine":2,"endColumn":18},{"ruleId":"264","severity":1,"message":"278","line":2,"column":20,"nodeType":"266","messageId":"267","endLine":2,"endColumn":23},{"ruleId":"264","severity":1,"message":"279","line":2,"column":25,"nodeType":"266","messageId":"267","endLine":2,"endColumn":28},{"ruleId":"264","severity":1,"message":"279","line":2,"column":9,"nodeType":"266","messageId":"267","endLine":2,"endColumn":12},{"ruleId":"264","severity":1,"message":"279","line":2,"column":17,"nodeType":"266","messageId":"267","endLine":2,"endColumn":20},{"ruleId":"264","severity":1,"message":"280","line":2,"column":22,"nodeType":"266","messageId":"267","endLine":2,"endColumn":26},{"ruleId":"264","severity":1,"message":"281","line":2,"column":28,"nodeType":"266","messageId":"267","endLine":2,"endColumn":33},{"ruleId":"264","severity":1,"message":"282","line":2,"column":35,"nodeType":"266","messageId":"267","endLine":2,"endColumn":40},{"ruleId":"264","severity":1,"message":"283","line":2,"column":42,"nodeType":"266","messageId":"267","endLine":2,"endColumn":46},{"ruleId":"264","severity":1,"message":"278","line":2,"column":61,"nodeType":"266","messageId":"267","endLine":2,"endColumn":64},{"ruleId":"264","severity":1,"message":"284","line":146,"column":15,"nodeType":"266","messageId":"267","endLine":146,"endColumn":19},{"ruleId":"285","severity":1,"message":"286","line":204,"column":73,"nodeType":"287","messageId":"288","endLine":204,"endColumn":74,"suggestions":"289"},{"ruleId":"264","severity":1,"message":"279","line":2,"column":17,"nodeType":"266","messageId":"267","endLine":2,"endColumn":20},{"ruleId":"260","replacedBy":"290"},{"ruleId":"262","replacedBy":"291"},{"ruleId":"292","severity":1,"message":"293","line":39,"column":25,"nodeType":"294","endLine":39,"endColumn":109},{"ruleId":"292","severity":1,"message":"293","line":42,"column":25,"nodeType":"294","endLine":42,"endColumn":107},{"ruleId":"292","severity":1,"message":"293","line":45,"column":25,"nodeType":"294","endLine":45,"endColumn":102},{"ruleId":"292","severity":1,"message":"293","line":48,"column":25,"nodeType":"294","endLine":48,"endColumn":104},{"ruleId":"292","severity":1,"message":"293","line":51,"column":25,"nodeType":"294","endLine":51,"endColumn":103},{"ruleId":"292","severity":1,"message":"293","line":54,"column":25,"nodeType":"294","endLine":54,"endColumn":101},{"ruleId":"292","severity":1,"message":"293","line":57,"column":25,"nodeType":"294","endLine":57,"endColumn":107},{"ruleId":"269","severity":1,"message":"274","line":82,"column":16,"nodeType":"271","messageId":"272","endLine":82,"endColumn":18},{"ruleId":"269","severity":1,"message":"274","line":84,"column":22,"nodeType":"271","messageId":"272","endLine":84,"endColumn":24},{"ruleId":"295","severity":1,"message":"296","line":133,"column":13,"nodeType":"297","endLine":133,"endColumn":32},{"ruleId":"292","severity":1,"message":"293","line":88,"column":25,"nodeType":"294","endLine":88,"endColumn":105},{"ruleId":"292","severity":1,"message":"293","line":91,"column":25,"nodeType":"294","endLine":91,"endColumn":110},{"ruleId":"292","severity":1,"message":"293","line":94,"column":25,"nodeType":"294","endLine":94,"endColumn":105},{"ruleId":"292","severity":1,"message":"293","line":97,"column":25,"nodeType":"294","endLine":97,"endColumn":201},{"ruleId":"292","severity":1,"message":"293","line":100,"column":25,"nodeType":"294","endLine":100,"endColumn":104},{"ruleId":"292","severity":1,"message":"293","line":103,"column":25,"nodeType":"294","endLine":103,"endColumn":201},{"ruleId":"292","severity":1,"message":"293","line":106,"column":25,"nodeType":"294","endLine":106,"endColumn":202},{"ruleId":"292","severity":1,"message":"293","line":109,"column":25,"nodeType":"294","endLine":109,"endColumn":194},{"ruleId":"292","severity":1,"message":"293","line":112,"column":25,"nodeType":"294","endLine":112,"endColumn":192},{"ruleId":"264","severity":1,"message":"298","line":2,"column":9,"nodeType":"266","messageId":"267","endLine":2,"endColumn":15},{"ruleId":"264","severity":1,"message":"298","line":2,"column":9,"nodeType":"266","messageId":"267","endLine":2,"endColumn":15},{"ruleId":"264","severity":1,"message":"281","line":2,"column":17,"nodeType":"266","messageId":"267","endLine":2,"endColumn":22},{"ruleId":"264","severity":1,"message":"276","line":2,"column":24,"nodeType":"266","messageId":"267","endLine":2,"endColumn":35},{"ruleId":"264","severity":1,"message":"299","line":2,"column":37,"nodeType":"266","messageId":"267","endLine":2,"endColumn":43},{"ruleId":"264","severity":1,"message":"280","line":2,"column":17,"nodeType":"266","messageId":"267","endLine":2,"endColumn":21},{"ruleId":"264","severity":1,"message":"276","line":2,"column":23,"nodeType":"266","messageId":"267","endLine":2,"endColumn":34},{"ruleId":"264","severity":1,"message":"299","line":2,"column":43,"nodeType":"266","messageId":"267","endLine":2,"endColumn":49},{"ruleId":"300","severity":1,"message":"301","line":4,"column":5,"nodeType":"302","messageId":"303","endLine":6,"endColumn":6},{"ruleId":"264","severity":1,"message":"304","line":3,"column":9,"nodeType":"266","messageId":"267","endLine":3,"endColumn":21},{"ruleId":"264","severity":1,"message":"305","line":3,"column":8,"nodeType":"266","messageId":"267","endLine":3,"endColumn":20},{"ruleId":"264","severity":1,"message":"298","line":2,"column":9,"nodeType":"266","messageId":"267","endLine":2,"endColumn":15},{"ruleId":"264","severity":1,"message":"298","line":2,"column":9,"nodeType":"266","messageId":"267","endLine":2,"endColumn":15},{"ruleId":"300","severity":1,"message":"301","line":5,"column":5,"nodeType":"302","messageId":"303","endLine":7,"endColumn":6},{"ruleId":"300","severity":1,"message":"301","line":5,"column":5,"nodeType":"302","messageId":"303","endLine":7,"endColumn":6},{"ruleId":"264","severity":1,"message":"306","line":2,"column":29,"nodeType":"266","messageId":"267","endLine":2,"endColumn":40},{"ruleId":"300","severity":1,"message":"301","line":6,"column":5,"nodeType":"302","messageId":"303","endLine":8,"endColumn":6},{"ruleId":"264","severity":1,"message":"307","line":68,"column":17,"nodeType":"266","messageId":"267","endLine":68,"endColumn":29},"no-native-reassign",["308"],"no-negated-in-lhs",["309"],"no-unused-vars","'PharmacistProfilePage' is defined but never used.","Identifier","unusedVar","'PharmacistWorkingHours' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'DateRangePicker' is defined but never used.","Expected '===' and instead saw '=='.","'Card' is defined but never used.","'FormControl' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","'Modal' is defined but never used.","'Table' is defined but never used.","'Grid' is defined but never used.","'user' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["310","311"],["308"],["309"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Button' is defined but never used.","'Navbar' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'PharmacyPage' is defined but never used.","'DropdownItem' is defined but never used.","'NavDropdown' is defined but never used.","'medicationId' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"312","fix":"313","desc":"314"},{"messageId":"315","fix":"316","desc":"317"},"removeEscape",{"range":"318","text":"319"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"320","text":"321"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[9370,9371],"",[9370,9370],"\\"]