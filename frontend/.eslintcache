[{"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\index.js":"1","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\App.js":"2","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\IndexPage.js":"3","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\PharmacyPage.js":"4","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\ReviewedClients.js":"5","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\Registration.js":"6","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\VacationRequest.js":"7","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\AllergyPatientListing.js":"8","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\UserInfo.js":"9","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\AddAllergy.js":"10","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\Login.js":"11","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\ChangePassword.js":"12","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\WorkingHoursCalendar.js":"13","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyVacationsRequests.js":"14","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyMedicationQueries.js":"15","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyMedications.js":"16","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\Promotions.js":"17","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyEmployees.js":"18","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyMedicationOrders.js":"19","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyDescription.js":"20","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\MedicationOrdersList.js":"21","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\MedicationOffers.js":"22","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PriceList.js":"23","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyReports.js":"24","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\CreateOrder.js":"25","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyListing.jsx":"26","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\layout\\UnregisteredLayout.jsx":"27","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\MedicationListing.jsx":"28","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\CreatePharmacist.js":"29","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\AddMedicationQuantity.js":"30","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\OrderQuantityListing.js":"31","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacySearch.jsx":"32","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\AutoCompleteInput.jsx":"33","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\layout\\PatientLayout.jsx":"34","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\ScheduleByDateTime.js":"35","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\ChooseTherapy.js":"36","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\PharmacyAdminProfilePage.js":"37","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\layout\\PharmacyAdminLayout.js":"38","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\ScheduledAppointments.js":"39","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\Appointment.js":"40","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\patient\\PatientProfilePage.js":"41","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\patient\\PatientHomePage.jsx":"42","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\patient\\PatientCounselScheduling.jsx":"43","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\ScheduleCounsel.js":"44","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\DateTime.jsx":"45","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\ISAdminHomePage.js":"46","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\Dermatologist\\DermatologistHomePage.js":"47","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\Pharmacist\\PharmacistHomePage.js":"48","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\Pharmacist\\PharmacistProfilePage.js":"49","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\Pharmacist\\PharmacistWorkingHours.js":"50","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\DermatologistRegistration.js":"51","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\Dermatologist\\DermatologistAppointmentStart.js":"52","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\PharmacyRegistration.js":"53","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\LoyaltyProgram.js":"54","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\Dermatologist\\DermatologistWorkingHours.js":"55","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\Dermatologist\\DermatologistsProfilePage.js":"56","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\SupplierRegistration.js":"57","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\PharmacyAdminRegistration.js":"58","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\Pharmacist\\PharmacistGiveMedicine.js":"59","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\Pharmacist\\PharmacistConsultationStart.js":"60","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\AddNewMedication.js":"61","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\Complaints.js":"62"},{"size":457,"mtime":1610638960804,"results":"63","hashOfConfig":"64"},{"size":2887,"mtime":1611761391027,"results":"65","hashOfConfig":"64"},{"size":651,"mtime":1610977435446,"results":"66","hashOfConfig":"64"},{"size":6760,"mtime":1610845299123,"results":"67","hashOfConfig":"64"},{"size":4443,"mtime":1610977435678,"results":"68","hashOfConfig":"64"},{"size":12884,"mtime":1611761122352,"results":"69","hashOfConfig":"64"},{"size":3091,"mtime":1611761122352,"results":"70","hashOfConfig":"64"},{"size":1099,"mtime":1610844823324,"results":"71","hashOfConfig":"64"},{"size":2889,"mtime":1610995649093,"results":"72","hashOfConfig":"64"},{"size":1582,"mtime":1610895629248,"results":"73","hashOfConfig":"64"},{"size":4277,"mtime":1610804060100,"results":"74","hashOfConfig":"64"},{"size":2157,"mtime":1610759701698,"results":"75","hashOfConfig":"64"},{"size":2396,"mtime":1610820378236,"results":"76","hashOfConfig":"64"},{"size":8220,"mtime":1611761122227,"results":"77","hashOfConfig":"64"},{"size":291,"mtime":1610820378579,"results":"78","hashOfConfig":"64"},{"size":7821,"mtime":1610904859767,"results":"79","hashOfConfig":"64"},{"size":2791,"mtime":1610904334558,"results":"80","hashOfConfig":"64"},{"size":14413,"mtime":1611761122227,"results":"81","hashOfConfig":"64"},{"size":2917,"mtime":1610845298564,"results":"82","hashOfConfig":"64"},{"size":3157,"mtime":1610820378251,"results":"83","hashOfConfig":"64"},{"size":5638,"mtime":1610904859730,"results":"84","hashOfConfig":"64"},{"size":5237,"mtime":1610845296203,"results":"85","hashOfConfig":"64"},{"size":813,"mtime":1610845299116,"results":"86","hashOfConfig":"64"},{"size":816,"mtime":1610845299071,"results":"87","hashOfConfig":"64"},{"size":3192,"mtime":1610904859701,"results":"88","hashOfConfig":"64"},{"size":2545,"mtime":1611582261852,"results":"89","hashOfConfig":"64"},{"size":1025,"mtime":1610995649177,"results":"90","hashOfConfig":"64"},{"size":1913,"mtime":1611582261820,"results":"91","hashOfConfig":"64"},{"size":13176,"mtime":1611619952039,"results":"92","hashOfConfig":"64"},{"size":2536,"mtime":1610904859696,"results":"93","hashOfConfig":"64"},{"size":1172,"mtime":1610904859740,"results":"94","hashOfConfig":"64"},{"size":2602,"mtime":1610977435415,"results":"95","hashOfConfig":"64"},{"size":1929,"mtime":1610977435321,"results":"96","hashOfConfig":"64"},{"size":2842,"mtime":1611677872508,"results":"97","hashOfConfig":"64"},{"size":1072,"mtime":1611063472484,"results":"98","hashOfConfig":"64"},{"size":4755,"mtime":1610995665545,"results":"99","hashOfConfig":"64"},{"size":6640,"mtime":1611063472500,"results":"100","hashOfConfig":"64"},{"size":1398,"mtime":1611063472484,"results":"101","hashOfConfig":"64"},{"size":2067,"mtime":1611063472625,"results":"102","hashOfConfig":"64"},{"size":5224,"mtime":1611063472641,"results":"103","hashOfConfig":"64"},{"size":7799,"mtime":1611761123164,"results":"104","hashOfConfig":"64"},{"size":359,"mtime":1611761065905,"results":"105","hashOfConfig":"64"},{"size":1539,"mtime":1611761065905,"results":"106","hashOfConfig":"64"},{"size":1864,"mtime":1611761065562,"results":"107","hashOfConfig":"64"},{"size":1887,"mtime":1611761065452,"results":"108","hashOfConfig":"64"},{"size":4021,"mtime":1611761122336,"results":"109","hashOfConfig":"64"},{"size":3413,"mtime":1611761123321,"results":"110","hashOfConfig":"64"},{"size":3823,"mtime":1611761123274,"results":"111","hashOfConfig":"64"},{"size":6898,"mtime":1611761123258,"results":"112","hashOfConfig":"64"},{"size":1188,"mtime":1611761123243,"results":"113","hashOfConfig":"64"},{"size":12916,"mtime":1611761122211,"results":"114","hashOfConfig":"64"},{"size":2289,"mtime":1611761123336,"results":"115","hashOfConfig":"64"},{"size":10287,"mtime":1611761122211,"results":"116","hashOfConfig":"64"},{"size":340,"mtime":1611761122211,"results":"117","hashOfConfig":"64"},{"size":1169,"mtime":1611761123305,"results":"118","hashOfConfig":"64"},{"size":6853,"mtime":1611761123289,"results":"119","hashOfConfig":"64"},{"size":12645,"mtime":1611761122227,"results":"120","hashOfConfig":"64"},{"size":12707,"mtime":1611761122211,"results":"121","hashOfConfig":"64"},{"size":3978,"mtime":1611761122336,"results":"122","hashOfConfig":"64"},{"size":2329,"mtime":1611761123289,"results":"123","hashOfConfig":"64"},{"size":11861,"mtime":1611761121930,"results":"124","hashOfConfig":"64"},{"size":327,"mtime":1611761122211,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"120gbu7",{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"128"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"128"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"128"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"128"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"128"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"128"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"128"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"128"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"128"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"128"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"128"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"128"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"128"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"128"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"128"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"128"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"128"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"128"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"128"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"128"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"128"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"128"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"128"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"128"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"128"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"128"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"128"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"128"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"128"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"128"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"128"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"128"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"128"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\index.js",[],["284","285"],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\App.js",["286","287"],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\IndexPage.js",["288","289"],"import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\nimport UnregisteredLayout from \"../layout/UnregisteredLayout\"\r\nimport PharmacyListing from \"../components/pharmacy/PharmacyListing\"\r\nimport MedicationListing from \"../components/MedicationListing\"\r\n\r\nexport default class IndexPage extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <UnregisteredLayout>\r\n                    <PharmacyListing/>\r\n                    <MedicationListing/>\r\n                </UnregisteredLayout>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\PharmacyPage.js",["290","291","292","293","294","295","296"],"import React from 'react';\r\nimport Promotions from \"../components/pharmacy/Promotions\";\r\nimport PharmacyEmployees from \"../components/pharmacy/PharmacyEmployees\";\r\nimport PharmacyMedications from \"../components/pharmacy/PharmacyMedications\";\r\nimport PharmacyVacationsRequests from \"../components/pharmacy/PharmacyVacationsRequests\";\r\nimport PharmacyMedicationOrders from \"../components/pharmacy/PharmacyMedicationOrders\";\r\nimport PharmacyMedicationQueries from \"../components/pharmacy/PharmacyMedicationQueries\";\r\nimport PharmacyDescription from \"../components/pharmacy/PharmacyDescription\";\r\n\r\n\r\nexport default class PharmacyPage extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pharmacy : {\r\n                id : 0,\r\n                name : \"\",\r\n                address : {\r\n                    street : \"\",\r\n                    town : \"\",\r\n                    country : \"\",\r\n                    latitude : 51.507351,\r\n                    longitude : -0.127758\r\n                },\r\n                description : \"\",\r\n                dermatologist : [],\r\n                pharmacist : [],\r\n                medicationQuantity : [],\r\n                medicationReservation : [],\r\n                grade : 0\r\n            },\r\n            navbar : \"description\",\r\n            userType : \"pharmacyAdmin\"\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let pharmacy = {\r\n            id: 0,\r\n            name: \"Jankovic\",\r\n            grade : 3.89,\r\n            address: {\r\n                street: \"Gunduliceva 1A\",\r\n                town: \"Novi Sad\",\r\n                country: \"Serbia\",\r\n                longitude: -0.118092,\r\n                latitude: 51.509865\r\n            },\r\n            description: \"Apoteka za sve!\",\r\n            dermatologist: [\r\n                {\r\n                    id: 0,\r\n                    firstName: \"Marko\",\r\n                    lastName: \"Markovic\",\r\n                    userType: \"dermatologist\"\r\n                }\r\n            ],\r\n            pharmacist: [\r\n                {\r\n                    id: 0,\r\n                    firstName: \"Dragana\",\r\n                    lastName: \"Markovic\",\r\n                    userType: \"dermatologist\"\r\n                }\r\n            ],\r\n        }\r\n        this.setState({\r\n            pharmacy : pharmacy\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron jumbotron-fluid\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-4\">{this.state.pharmacy.name}</h1>\r\n                    <p className=\"lead\">{this.state.pharmacy.description}</p>\r\n                    <p className=\"lead\">{'ocena apoteke : '+ this.state.pharmacy.grade}</p>\r\n                </div>\r\n\r\n\r\n                <ul className=\"nav justify-content-center\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"description\" onClick={this.handleChange}>Description</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" href='#' onClick={this.handleChange} name=\"employees\">Dermatolozi & farmaceuti</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"medications\" onClick={this.handleChange}>Lekovi</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"vacationRequests\" onClick={this.handleChange} style={this.state.userType === 'pharmacyAdmin' ? {display : 'block'} : {display : 'none'}}>Godisnji odmori</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"promotions\" onClick={this.handleChange}>Akcije & promocije</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"medicationOrders\" onClick={this.handleChange} style={this.state.userType === 'pharmacyAdmin' ? {display : 'block'} : {display : 'none'}}>Narudzbenice & ponude</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"medicationQueries\" onClick={this.handleChange} style={this.state.userType === 'pharmacyAdmin' ? {display : 'block'} : {display : 'none'}}>Upiti nad lekovima</a>\r\n                    </li>\r\n                </ul>\r\n                {this.renderNavbar()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            navbar : name\r\n        });\r\n    }\r\n\r\n    renderNavbar = () => {\r\n        if (this.state.navbar === \"promotions\")\r\n            return (\r\n                <Promotions/>\r\n            );\r\n        else if (this.state.navbar === 'description')\r\n            return (\r\n                <PharmacyDescription pharmacy = {this.state.pharmacy } />\r\n            )\r\n        else if (this.state.navbar === \"employees\")\r\n            return (\r\n                <PharmacyEmployees pharmacyId = {this.state.pharmacy.id}/>\r\n            );\r\n        else if (this.state.navbar === \"medications\")\r\n            return (\r\n                <PharmacyMedications/>\r\n            );\r\n        else if (this.state.navbar === 'vacationRequests')\r\n            return (\r\n              <PharmacyVacationsRequests />\r\n            );\r\n        else if (this.state.navbar === 'medicationOrders')\r\n            return (\r\n                <PharmacyMedicationOrders showContent = 'listOrders'/>\r\n            );\r\n        else if (this.state.navbar === 'medicationQueries')\r\n            return (\r\n                <PharmacyMedicationQueries />\r\n            );\r\n    }\r\n}\r\n","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\ReviewedClients.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\Registration.js",["297","298","299","300","301","302","303","304"],"import React from \"react\";\r\nimport {Button, Col, Form, Modal, Table, Grid, FormControl, Row} from \"react-bootstrap\";\r\nimport \"../App.css\";\r\n\r\n\r\nexport default class Registration extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                'email': '',\r\n                'password': '',\r\n                'firstName': '',\r\n                'lastName': '',\r\n                'country': '',\r\n                'city': '',\r\n                'telephone': '',\r\n                'rePassword' : ''\r\n            },\r\n            errors:{\r\n                user: {\r\n                    'email': 'Enter email',\r\n                    'password': 'Enter password',\r\n                    'firstName': 'Enter First name',\r\n                    'lastName': 'Enter Last name',\r\n                    'country': 'Enter Country',\r\n                    'city': 'Enter City',\r\n                    'telephone': 'Enter Telephone',\r\n                    'rePassword' : 'Repeat password'\r\n                }\r\n            },\r\n            validForm: false,\r\n            submitted: false,\r\n\r\n\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.isValidPassword = this.isValidPassword.bind(this);\r\n\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        const user = this.state.user;\r\n        user[name] = value;\r\n\r\n        this.setState({ user });\r\n        this.validationErrorMessage(event);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rightPanel\">\r\n                <header>User - Registration</header>\r\n\r\n                <div className=\"row\">\r\n                    <label className=\"col-sm-2 col-form-label\">Name</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.firstName} name=\"firstName\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"First Name\" />\r\n                        { this.state.submitted && this.state.errors.user.firstName.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.firstName}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.lastName} name=\"lastName\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"Last Name\" />\r\n                        { this.state.submitted && this.state.errors.user.lastName.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.lastName}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Email</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"email\" value={this.state.user.email} name=\"email\" onChange={(e) => { this.handleInputChange(e)} }className=\"form-control\" id=\"email\" placeholder=\"example@gmail.com\" />\r\n                        { this.state.submitted && this.state.errors.user.email.length > 0 && <span className=\"text-danger\">{this.state.errors.user.email}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Tel</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.telephone} name=\"telephone\" onChange={(e) => { this.handleInputChange(e)} }  className=\"form-control\" id=\"telephone\" placeholder=\"+3810640333489\" />\r\n                        { this.state.submitted && this.state.errors.user.telephone.length > 0 && <span className=\"text-danger\">{this.state.errors.user.telephone}</span>}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Country</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.country} name=\"country\" onChange={(e) => { this.handleInputChange(e)} }  className=\"form-control\" id=\"country\" placeholder=\"Enter country\" />\r\n                        { this.state.submitted && this.state.errors.user.country.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.country}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">City</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.city} name=\"city\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" id=\"city\" placeholder=\"Enter city\" />\r\n                        { this.state.submitted && this.state.errors.user.city.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.city}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label className=\"col-sm-2 col-form-label\">Password</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <FormControl name=\"password\" type=\"password\" placeholder=\"Password\"  value={this.state.user.password} onChange={(e) => { this.handleInputChange(e)} }/>\r\n                        { this.state.submitted && this.state.errors.user.password.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.password}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Repeat password</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <FormControl name=\"rePassword\" type=\"password\" placeholder=\"Repeat new Password\" value={this.state.user.rePassword} onChange={(e) => { this.handleInputChange(e)} }/>\r\n                        { this.state.submitted && this.state.errors.user.rePassword.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.rePassword}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-5 mb-2\">\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <Button variant=\"primary\" onClick={this.submitForm} >Submit</Button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    submitForm = async (event) => {\r\n        this.setState({ submitted: true });\r\n        const user = this.state.user;\r\n        event.preventDefault();\r\n        if (this.validateForm(this.state.errors)) {\r\n            console.info('Valid Form')\r\n        } else {\r\n            console.log('Invalid Form')\r\n        }\r\n    }\r\n\r\n    validationErrorMessage = (event) => {\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n\r\n        switch (name) {\r\n            case 'firstName':\r\n                errors.user.firstName = value.length < 1 ? 'Enter First Name' : '';\r\n                break;\r\n            case 'lastName':\r\n                errors.user.lastName = value.length < 1 ? 'Enter Last Name' : '';\r\n                break;\r\n            case 'email':\r\n                errors.user.email = this.isValidEmail(value) ? '' : 'Email is not valid!';\r\n                break;\r\n            case 'telephone':\r\n                errors.user.telephone = this.isValidTelephone(value) ? 'Enter valid telephone number' : '';\r\n                break;\r\n            case 'country':\r\n                errors.user.country = value.length < 1 ?  'Enter Country' : '';\r\n                break;\r\n            case 'city':\r\n                errors.user.city = value.length < 1 ?  'Enter City' : '';\r\n                break;\r\n            case 'password':\r\n                errors.user.password = value.length < 1 ? 'Enter Password' : '';\r\n                break;\r\n            case 'rePassword':\r\n                errors.user.rePassword = this.isValidPassword(value) ? '' : 'This password must match the previous';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({ errors });\r\n    }\r\n\r\n    validateForm = (errors) => {\r\n        let valid = true;\r\n        Object.entries(errors.user).forEach(item => {\r\n            console.log(item)\r\n            item && item[1].length > 0 && (valid = false)\r\n        })\r\n        return valid;\r\n    }\r\n    isValidEmail = (value) => {\r\n        return !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,64}$/i.test(value))\r\n    }\r\n\r\n    isValidTelephone = (value) => {\r\n        return !(value && /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[0-9]{2,3}[-\\s\\./0-9]*$/i.test(value))\r\n    }\r\n\r\n    isValidPassword = (value) => {\r\n            if(this.state.user.password !== this.state.user.rePassword) {\r\n                return false;\r\n            }else{\r\n                return  true\r\n            }\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\VacationRequest.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\AllergyPatientListing.js",["305"],"import React from \"react\";\r\nimport {Button, Card, Col, Row} from \"react-bootstrap\";\r\n\r\nclass AllergyPatientListing extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.removeAllergy = this.removeAllergy.bind(this);\r\n    }\r\n\r\n    removeAllergy(allergy) {\r\n        this.props.removeAllergy(allergy)\r\n    }\r\n\r\n    render() {\r\n        \r\n        const allergies = this.props.allergies.map((allergy, index) => {\r\n            return (\r\n                <Col xs={3}>\r\n                    <div className=\"m-2 bg-primary p-2\" style={{ height: '3rem' }}>\r\n                        {this.props.edit && <Button variant=\"primary\" className=\"mr-3 p-0\" style={{width: '1rem'}}\r\n                                 onClick={this.removeAllergy.bind(this, allergy.id)}>X</Button>}\r\n                        <label className='text-light'>{allergy.name}</label>\r\n                    </div>\r\n                </Col>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <Row>\r\n                {allergies}\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllergyPatientListing;","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\UserInfo.js",["306","307","308"],"import React from \"react\";\r\nimport {Container, Row, Col, Table, FormControl} from \"react-bootstrap\";\r\n\r\nclass UserInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        this.props.onChange(event)\r\n    }\r\n\r\n    render() {\r\n        let {user, edit} = this.props;\r\n\r\n        return (\r\n            <Table striped hover variant={'dark'}>\r\n                <tbody>\r\n                <tr>\r\n                    <td>First Name</td>\r\n                    {edit\r\n                        ? <FormControl name=\"firstName\" className=\"mt-2 mb-2\" value={user.firstName}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.firstName}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Last Name</td>\r\n                    {edit\r\n                        ? <FormControl name=\"lastName\" className=\"mt-2 mb-2\" value={user.lastName}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.lastName}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Email</td>\r\n                    <td>{user.email}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Address</td>\r\n                    {edit\r\n                        ? <FormControl name=\"address\" className=\"mt-2 mb-2\" value={user.address}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.address}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Town</td>\r\n                    {edit\r\n                        ? <FormControl name=\"town\" className=\"mt-2 mb-2\" value={user.town}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.town}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Country</td>\r\n                    {edit\r\n                        ? <FormControl name=\"country\" className=\"mt-2 mb-2\" value={user.country}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.country}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Phone Number</td>\r\n                    {edit\r\n                        ? <FormControl name=\"phoneNumber\" className=\"mt-2 mb-2\" value={user.phoneNumber}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.phoneNumber}</td>\r\n                    }\r\n                </tr>\r\n                </tbody>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserInfo;","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\AddAllergy.js",["309"],"import React from \"react\";\r\nimport {Button, FormControl} from \"react-bootstrap\";\r\nimport axios from 'axios';\r\n\r\nclass AddAllergy extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'allergy' : 'Add allergy',\r\n            'allergies' : []\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addAllergy = this.addAllergy.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await axios\r\n            .get('http://localhost:8080/api/ingredients')\r\n            .then(res => {\r\n                this.setState({\r\n                    'allergies' : res.data\r\n                })\r\n            });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({allergy: event.target.value});\r\n    }\r\n\r\n    addAllergy() {\r\n        this.props.addAllergy(this.state.allergies.filter(a => a.name === this.state.allergy)[0])\r\n    }\r\n\r\n    render() {\r\n        const allergies = this.state.allergies.map((allergy, index) => {\r\n            return <option value={allergy.name} key={index}>{allergy.name}</option>\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <select value={this.state.allergy} style={{width: '15rem'}} className=\"mr-2\"\r\n                        onChange={this.handleChange}>\r\n                    <option disabled>Add allergy</option>\r\n                    {allergies}\r\n                </select>\r\n                <Button variant=\"success\" className=\"mb-3\" onClick={this.addAllergy}>Add</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AddAllergy;","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\Login.js",["310"],"import React from \"react\";\r\nimport {Button, Col, Form, Modal} from \"react-bootstrap\";\r\n\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'password': '',\r\n            'email': '',\r\n            errors: {\r\n                'email': 'Enter Email.',\r\n                'password': 'Enter Password.'\r\n            },\r\n            submitted: false\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        alert('A name was submitted: ' + this.state.value);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n        this.validationErrorMessage(event);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Button type=\"button\" className=\"btn btn-secondary\"  onClick={this.handleModal}>Login</Button>\r\n\r\n                <Modal show={this.state.showModal} onHide={this.handleModal}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Login</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group size=\"lg\" controlId=\"email\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control autoFocus name=\"email\" placeholder=\"email\"  type=\"email\" value={this.state.email} onChange={(e) => { this.handleInputChange(e)} } />\r\n                                { this.state.submitted && this.state.errors.email.length > 0 &&  <span className=\"text-danger\">{this.state.errors.email}</span>}\r\n                            </Form.Group>\r\n                            <Form.Group size=\"lg\" controlId=\"password\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\"  name=\"password\" placeholder=\"password\"  value={this.state.password} onChange={(e) => { this.handleInputChange(e)} } />\r\n                                { this.state.submitted && this.state.errors.password.length > 0 &&  <span className=\"text-danger\">{this.state.errors.password}</span>}\r\n\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleModal}  >\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.loginForm}>\r\n                            Ok\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n    handleModal = () => {\r\n        this.setState({\r\n            showModal : !this.state.showModal,\r\n            password: '',\r\n            'email': '',\r\n        });\r\n    }\r\n    validationErrorMessage = (event) => {\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n        switch (name) {\r\n            case 'email':\r\n                errors.email = this.isValidEmail(value) ? '' : 'Wrong email format. Please check and try again.';\r\n                break;\r\n            case 'password':\r\n                errors.password = value.length < 1 ? 'Enter Password' : '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({ errors });\r\n    }\r\n\r\n    validateForm = (errors) => {\r\n        let valid = true;\r\n        Object.entries(errors).forEach(item => {\r\n            console.log(item)\r\n            item && item[1].length > 0 && (valid = false)\r\n        })\r\n        return valid;\r\n    }\r\n    isValidEmail = (value) => {\r\n        return !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,64}$/i.test(value))\r\n    }\r\n\r\n    loginForm = async (event) => {\r\n        this.setState({ submitted: true });\r\n        event.preventDefault();\r\n        if (this.validateForm(this.state.errors)) {\r\n            console.log('Valid Form')\r\n        } else {\r\n            console.log('Invalid Form')\r\n        }\r\n    }\r\n\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\ChangePassword.js",["311"],"import React from \"react\";\r\nimport {Col, Container, FormControl, Row} from \"react-bootstrap\";\r\n\r\nclass ChangePassword extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'repErr' : ''\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.validatePassword = this.validatePassword.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        this.props.onChange(event);\r\n        this.validatePassword(event);\r\n    }\r\n\r\n    validatePassword(event) {\r\n        let repErr = ''\r\n        let val = event.target.value;\r\n        let newPass = this.props.pass[1]\r\n\r\n        if (event.target.name === 'repPass')\r\n            if(val !== newPass.substr(0, Math.min(val.length, newPass.length)) ||\r\n                (val.trim() === '' && newPass.trim() !== '')) {\r\n                repErr = 'This password must match the previous';\r\n                this.props.disable(true);\r\n            }\r\n            else\r\n                this.props.disable(false);\r\n\r\n        this.setState({\r\n            'repErr': repErr\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h2 className=\"pt-4 pb-3\">Change Password</h2>\r\n                <Row className=\"m-2\">\r\n                    <FormControl name=\"oldPass\" type=\"password\" placeholder=\"Password\"\r\n                                 value={this.props.pass[0]} onChange={this.handleInputChange}/>\r\n                </Row>\r\n                <Row className=\"m-2\">\r\n                    <FormControl name=\"newPass\" type=\"password\" placeholder=\"New Password\"\r\n                                 value={this.props.pass[1]} onChange={this.handleInputChange}/>\r\n                </Row>\r\n                <Row className=\"m-2\">\r\n                    <FormControl name=\"repPass\" type=\"password\" placeholder=\"Repeat new Password\"\r\n                                 value={this.props.pass[2]} onChange={this.handleInputChange}/>\r\n                    <label className=\"text-danger\">{this.state.repErr}</label>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChangePassword;","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\WorkingHoursCalendar.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyVacationsRequests.js",["312","313"],"import React from 'react';\r\nimport {Button, Form, FormControl, Modal, Navbar} from \"react-bootstrap\";\r\n\r\nexport default class PharmacyVacationsRequests extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            vacationRequests : [],\r\n            userType : 'pharmacyAdmin',\r\n            showModal : false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let vacationRequests = [\r\n            {\r\n                periodStart : '21.2.2021.',\r\n                periodEnd : '03.03.2021.',\r\n                vacationNote : 'Bahami',\r\n                employeeFirstName : 'Marko',\r\n                employeeLastName : 'Jugovic',\r\n                vacationRequestStatus : 'requested',\r\n                employeeType : 'pharmacist',\r\n                rejectionNote : ''\r\n            },\r\n            {\r\n                periodStart : '21.5.2021.',\r\n                periodEnd : '03.06.2021.',\r\n                vacationNote : 'Covid-19',\r\n                employeeFirstName : 'Dejan',\r\n                employeeLastName : 'Petrovic',\r\n                vacationRequestStatus : 'approved',\r\n                employeeType : 'dermatologist',\r\n                rejectionNote : ''\r\n            },\r\n            {\r\n                periodStart : '21.2.2021.',\r\n                periodEnd : '03.10.2021.',\r\n                vacationNote : 'Beba',\r\n                employeeFirstName : 'Dijana',\r\n                employeeLastName : 'Jankovic',\r\n                vacationRequestStatus : 'rejected',\r\n                employeeType : 'pharmacist',\r\n                rejectionNote : ''\r\n            }\r\n        ];\r\n\r\n        this.setState({\r\n            vacationRequests : vacationRequests\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div>\r\n                    <br/><br/>\r\n                    <h1>Trazena & odobrena odsustva</h1>\r\n\r\n                    <br/>\r\n\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Ime</th>\r\n                            <th scope=\"col\">Prezime</th>\r\n                            <th scope=\"col\">Tip radnika</th>\r\n                            <th scope=\"col\">Razlog</th>\r\n                            <th scope=\"col\">Pocetak odsustva</th>\r\n                            <th scope=\"col\">Kraj odsustva</th>\r\n                            <th scope=\"col\">Status</th>\r\n\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.state.vacationRequests.map((vacationRequest, index) => (\r\n                            <tr>\r\n                                <th scope=\"row\">{index+1}</th>\r\n                                <td>{vacationRequest.employeeFirstName}</td>\r\n                                <td>{vacationRequest.employeeLastName}</td>\r\n                                <td>{vacationRequest.employeeType}</td>\r\n                                <td>{vacationRequest.vacationNote}</td>\r\n                                <td>{vacationRequest.periodStart}</td>\r\n                                <td>{vacationRequest.periodEnd}</td>\r\n                                <td>{vacationRequest.vacationRequestStatus}</td>\r\n\r\n                                <td style={this.state.userType === 'pharmacyAdmin' && vacationRequest.vacationRequestStatus === 'requested' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                                    <Button variant=\"outline-success\" onClick={() => this.acceptVacationRequest(vacationRequest)}>\r\n                                        Accept\r\n                                    </Button>\r\n                                </td >\r\n                                <td style={this.state.userType === 'pharmacyAdmin' && vacationRequest.vacationRequestStatus === 'requested' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                                    <Button variant=\"outline-danger\" onClick={this.handleModal}>\r\n                                        Reject\r\n                                    </Button>\r\n                                </td >\r\n                                <td style={this.state.userType === 'pharmacyAdmin' && vacationRequest.vacationRequestStatus === 'rejected' ? {display : 'none'} : {}}>\r\n                                </td >\r\n                                <td style={this.state.userType === 'pharmacyAdmin' && vacationRequest.vacationRequestStatus === 'rejected' ? {display : 'none'} : {}}>\r\n                                </td >\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </table>\r\n\r\n\r\n\r\n                    <Modal show={this.state.showModal} onHide={this.handleModal}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Modal heading</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                <Form.Label>Please enter a reason of declining the vacation request</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows={3} />\r\n                            </Form.Group>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={this.handleModal}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={this.handleModal}>\r\n                                Confirm\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleModal = () => {\r\n        this.setState({\r\n            showModal : !this.state.showModal\r\n        });\r\n    }\r\n\r\n    acceptVacationRequest = (vacationRequest) => {\r\n        window.confirm('Are you sure you want to accept the vacation request from ' + vacationRequest.employeeFirstName + '?');\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyMedicationQueries.js",["314"],"import React from 'react';\r\n\r\nexport default class PharmacyMedicationQueries extends React.Component{\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                a\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyMedications.js",["315","316"],"import React from 'react';\r\nimport {Button, Form, FormControl, Modal, Navbar, Col} from \"react-bootstrap\";\r\nimport DropdownItem from \"react-bootstrap/DropdownItem\";\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\n\r\nconst options = [\r\n    'one', 'two', 'three'\r\n];\r\nconst defaultOption = options[0];\r\n\r\nexport default class PharmacyMedications extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            medications : [],\r\n            userType : \"\",\r\n            showModal : false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let medications = [\r\n            {\r\n                name: \"Xanax\",\r\n                type: \"antihistamine\",\r\n                dose: 2,\r\n                loyaltyPoints: 3,\r\n                medicationShape: \"pill\",\r\n                manufacturer: \"ABC\",\r\n                medicationIssue: \"withPrescription\",\r\n                note: \"take when hungry\",\r\n                quantity : 10,\r\n                price : 400.00,\r\n                grade : 4,\r\n                ingredient: [\r\n                    {\r\n                        name: \"brufen\"\r\n                    },\r\n                    {\r\n                        name: \"linex\"\r\n                    }\r\n\r\n                ],\r\n                sideEffect: [\r\n                    {\r\n                        name: \"nausea\"\r\n                    },\r\n                    {\r\n                        name: \"blindness\"\r\n                    }\r\n                ],\r\n                alternatives: [\r\n                    {\r\n                        name: \"brufen\"\r\n                    },\r\n                    {\r\n                        name: \"linex\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                name: \"Linex\",\r\n                type: \"antihistamine\",\r\n                dose: 2,\r\n                grade : 4,\r\n                loyaltyPoints: 3,\r\n                medicationShape: \"pill\",\r\n                manufacturer: \"ABC\",\r\n                quantity : 10,\r\n                price : 1300,\r\n                medicationIssue: \"withPrescription\",\r\n                note: \"take when hungry\",\r\n                ingredient: [\r\n                    {\r\n                        name: \"brufen\"\r\n                    },\r\n                    {\r\n                        name: \"linex\"\r\n                    }\r\n\r\n                ],\r\n                sideEffect: [\r\n                    {\r\n                        name: \"nausea\"\r\n                    },\r\n                    {\r\n                        name: \"blindness\"\r\n                    }\r\n                ],\r\n                alternatives: [\r\n                    {\r\n                        name: \"brufen\"\r\n                    },\r\n                    {\r\n                        name: \"linex\"\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n        this.setState({\r\n            medications : medications,\r\n            userType : \"pharmacyAdmin\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={({ marginLeft: '1rem' })}>\r\n                <br/><br/>\r\n                <h1>Lekovi</h1>\r\n\r\n\r\n                <Button variant=\"success\" onClick={this.handleModal} >Dodaj lek</Button>\r\n                <Button variant=\"primary\" style={({ marginLeft: '1rem' })}>Proveri dostupnost preko eRecepta</Button>\r\n                <br/><br/>\r\n\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Form inline>\r\n                            <FormControl type=\"text\" placeholder=\"Search by name\" className=\"mr-sm-2\" />\r\n                            <Button variant=\"outline-success\">Search</Button>\r\n                        </Form>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Naziv</th>\r\n                        <th scope=\"col\">Tip</th>\r\n                        <th scope=\"col\">Ocena</th>\r\n                        <th scope=\"col\">Kolicina</th>\r\n                        <th scope=\"col\">Cena</th>\r\n                        <th scope=\"col\">Sastojci</th>\r\n                        <th scope=\"col\">Alternative</th>\r\n\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.medications.map((medication, index) => (\r\n                        <tr>\r\n                            <th scope=\"row\">{index+1}</th>\r\n                            <td>{medication.name}</td>\r\n                            <td>{medication.type}</td>\r\n                            <td>{medication.grade}</td>\r\n                            <td>{medication.quantity}</td>\r\n                            <td>{medication.price}</td>\r\n                            <td>\r\n                                <Dropdown options={options}  value={defaultOption} />\r\n                            </td>\r\n                            <td>\r\n                                <Dropdown options={options}  value={defaultOption} />\r\n                            </td>\r\n                            <td style={this.state.userType === 'patient' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                                <Button variant=\"primary\" onClick={this.handleModal}>\r\n                                    Rezervisi\r\n                                </Button>\r\n                            </td >\r\n\r\n                            <td style={this.state.userType === 'pharmacyAdmin' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                                <Button variant=\"danger\" onClick={() => this.deleteMedication(medication)}>\r\n                                    Delete\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n\r\n\r\n\r\n                <Modal show={this.state.showModal} onHide={this.handleModal}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Dodavanje leka</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Col>\r\n                                    <Form.Control placeholder=\"Medication\" as={\"select\"} >\r\n                                        <option disabled={true} selected=\"selected\">Choose...</option>\r\n                                        <option >...</option>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Control placeholder=\"Quantity\"  />\r\n                                </Col>\r\n                            </Form.Row>\r\n                        </Form>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleModal}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.handleModal}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n    handleModal = () => {\r\n        this.setState({\r\n            showModal : !this.state.showModal\r\n        });\r\n    }\r\n\r\n    deleteMedication = (medication) => {\r\n        let isBoss = window.confirm('Are you sure you want to delete ' + medication.name + ' from your medications list?');\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\Promotions.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyEmployees.js",["317","318","319","320","321","322"],"import React from 'react';\r\nimport {Button, Col} from \"react-bootstrap\";\r\nimport {Modal} from \"react-bootstrap\";\r\nimport {Navbar} from \"react-bootstrap\";\r\nimport {Form} from \"react-bootstrap\";\r\nimport {FormControl, Row} from \"react-bootstrap\";\r\nimport moment from 'moment';\r\nimport TimePicker from 'react-time-picker';\r\nimport Registration from \"../../pages/Registration\";\r\nimport CreatePharmacist from \"./CreatePharmacist\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\n\r\nexport default class PharmacyEmployees extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dermatologists: [],\r\n            pharmacists: [],\r\n            showModalAddDermatologist : false,\r\n            showModalCreatePharmacist : false,\r\n            userType : \"pharmacyAdmin\",\r\n            searchPharmacist : {\r\n                firstName : '',\r\n                lastName : ''\r\n            },\r\n            backupPharmacists : []\r\n        }\r\n    }\r\n// definise slobodne termine,pretražuje, kreira i uklanja farmaceute/dermatologe\r\n    async componentDidMount() {\r\n        let dermatologists = [\r\n            {\r\n                firstName : \"Mirko\",\r\n                lastName : \"Jugovic\",\r\n                grade : 5,\r\n            },\r\n            {\r\n                firstName : \"Maja\",\r\n                lastName : \"Jugovic\",\r\n                grade : 3,\r\n            }\r\n        ];\r\n        let pharmacists = [\r\n            {\r\n                firstName : \"Jelena\",\r\n                lastName : \"Matic\",\r\n                grade : 3.25,\r\n            },\r\n            {\r\n                firstName : \"Maja\",\r\n                lastName : \"Berovic\",\r\n                grade : 4.1,\r\n            }\r\n        ];\r\n\r\n        await axios\r\n            .get('http://localhost:8080/api/pharmacist/getByPharmacy/1')\r\n            .then(res => {\r\n                this.setState({\r\n                    pharmacists : res.data,\r\n                    backupPharmacists : res.data\r\n                })\r\n            });\r\n\r\n        console.log(this.state.pharmacists);\r\n        // this.setState({\r\n        //     dermatologists : dermatologists,\r\n        //     pharmacists : pharmacists\r\n        // });\r\n    }\r\n\r\n    render() {\r\n        const format = \"HH:mm\"\r\n        return (\r\n           <div style={({ marginLeft: '1rem' })}>\r\n               <br/><br/>\r\n               <h1>Dermatolozi</h1>\r\n               \r\n               <Button variant=\"success\" onClick={this.handleModalAddDermatologist}>Dodaj dermatologa</Button>\r\n               <br/><br/>\r\n\r\n               <Navbar bg=\"light\" expand=\"lg\">\r\n                   <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                   <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                       <Form inline>\r\n                           <FormControl type=\"text\" placeholder=\"Search by first name\" className=\"mr-sm-2\" />\r\n                           <FormControl type=\"text\" placeholder=\"Search by last name\" className=\"mr-sm-2\" />\r\n                           <Button variant=\"outline-success\">Search</Button>\r\n                       </Form>\r\n                   </Navbar.Collapse>\r\n               </Navbar>\r\n\r\n               <table className=\"table table-hover\">\r\n                   <thead>\r\n                   <tr>\r\n                       <th scope=\"col\">#</th>\r\n                       <th scope=\"col\">Ime</th>\r\n                       <th scope=\"col\">Prezime</th>\r\n                       <th scope=\"col\">Ocena</th>\r\n                   </tr>\r\n                   </thead>\r\n                   <tbody>\r\n               {this.state.dermatologists.map((dermatologist, index) => (\r\n                   <tr>\r\n                       <th scope=\"row\">{index+1}</th>\r\n                       <td>{dermatologist.firstName}</td>\r\n                       <td>{dermatologist.lastName}</td>\r\n                       <td>{dermatologist.grade}</td>\r\n                       <td style={this.state.userType === 'patient' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                           <Button variant=\"primary\" onClick={this.handleModalAddDermatologist}>\r\n                                Zakazi pregled\r\n                           </Button>\r\n                       </td >\r\n                       <td style={this.state.userType === 'pharmacyAdmin' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                           <Button variant=\"warning\" onClick={this.handleModalAddDermatologist}>\r\n                               Definisi slobodne termine\r\n                           </Button>\r\n                       </td>\r\n                       <td style={this.state.userType === 'pharmacyAdmin' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                           <Button variant=\"danger\" onClick={() => this.deleteDermatologist(dermatologist)}>\r\n                               Izbrisi dermatologa\r\n                           </Button>\r\n                       </td>\r\n                   </tr>\r\n               ))}\r\n                   </tbody>\r\n               </table>\r\n\r\n\r\n               <br/><br/>\r\n               <h1>Farmaceuti</h1>\r\n               <Button variant=\"success\" onClick={this.handleModalCreatePharmacist}>Kreiraj farmaceuta</Button>\r\n               <br/><br/>\r\n               <Navbar bg=\"light\" expand=\"lg\">\r\n                   <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                   <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                       <Form inline>\r\n                           <FormControl type=\"text\" placeholder=\"Search by first name\" className=\"mr-sm-2\" name={'firstName'} value={this.state.searchPharmacist.firstName} onChange={this.changeSearchPharmacist}/>\r\n                           <FormControl type=\"text\" placeholder=\"Search by last name\" className=\"mr-sm-2\" name={'lastName'} value={this.state.searchPharmacist.lastName} onChange={this.changeSearchPharmacist}/>\r\n                           <Button variant=\"outline-success\" onClick={this.searchPharmacist}>Search</Button>\r\n                           <Button variant=\"outline-info\" onClick={this.resetSearchPharmacist}>Reset</Button>\r\n\r\n                       </Form>\r\n                   </Navbar.Collapse>\r\n               </Navbar>\r\n               <table className=\"table table-hover\">\r\n                   <thead>\r\n                   <tr>\r\n                       <th scope=\"col\">#</th>\r\n                       <th scope=\"col\">Ime</th>\r\n                       <th scope=\"col\">Prezime</th>\r\n                       <th scope=\"col\">Ocena</th>\r\n                       <th scope=\"col\">Pocetak smene</th>\r\n                       <th scope=\"col\">Kraj smene</th>\r\n\r\n                   </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                   {this.state.pharmacists.map((pharmacist, index) => (\r\n                       <tr>\r\n                           <th scope=\"row\">{index+1}</th>\r\n                           <td>{pharmacist.firstName}</td>\r\n                           <td>{pharmacist.lastName}</td>\r\n                           <td>{pharmacist.grade}</td>\r\n                           <td>{pharmacist.workingHours[0].period.periodStart}</td>\r\n                           <td>{pharmacist.workingHours[0].period.periodEnd}</td>\r\n                           <td style={this.state.userType === 'patient' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                               <Button variant=\"primary\" onClick={this.handleModalAddDermatologist}>\r\n                                   Zakazi savetovanje\r\n                               </Button>\r\n                           </td >\r\n                           <td style={this.state.userType === 'pharmacyAdmin' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                               <Button variant=\"warning\" onClick={this.handleModalAddDermatologist}>\r\n                                   Definisi slobodne termine\r\n                               </Button>\r\n                           </td>\r\n                           <td style={this.state.userType === 'pharmacyAdmin' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                               <Button variant=\"danger\" onClick={() => this.deletePharmacist(pharmacist)}>\r\n                                   Izbrisi farmaceuta\r\n                               </Button>\r\n                           </td>\r\n                       </tr>\r\n                   ))}\r\n                   </tbody>\r\n               </table>\r\n\r\n               {this.renderModalAddDermatologist()}\r\n               {this.renderModalCreatePharmacist()}\r\n\r\n           </div>\r\n        );\r\n    }\r\n\r\n    renderModalAddDermatologist = () => {\r\n        return (\r\n            <Modal show={this.state.showModalAddDermatologist} onHide={this.handleModalAddDermatologist}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add Dermatologist</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Row>\r\n                            <Col>\r\n                                <Form.Control placeholder=\"Medication\" as={\"select\"} >\r\n                                    <option disabled={true} selected=\"selected\">Choose...</option>\r\n                                    <option >...</option>\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <br/>\r\n                        <Form.Row>\r\n                            <div style={({ marginLeft: '1rem' })}>\r\n                                <label style={({ marginRight: '1rem' })}>Select start of work time : </label>\r\n                                <TimePicker />\r\n\r\n                            </div>\r\n                        </Form.Row>\r\n                        <br/>\r\n                        <Form.Row>\r\n                            <div style={({ marginLeft: '1rem' })}>\r\n                                <label style={({ marginRight: '1rem' })}>Select end of work time : </label>\r\n                                <TimePicker/>\r\n                            </div>\r\n                        </Form.Row>\r\n\r\n                        <br/>\r\n                        <h3>Work time in other pharmacies</h3>\r\n                        <table class=\"table table-sm\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Start</th>\r\n                                <th scope=\"col\">End</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <tr>\r\n                                <td>1</td>\r\n                                <td>{\"11:00\"}</td>\r\n                                <td>{\"13:00\"}</td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.handleModalAddDermatologist}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={this.handleModalAddDermatologist}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    renderModalCreatePharmacist = () => {\r\n        return (\r\n            <Modal show={this.state.showModalCreatePharmacist} onHide={this.handleModalCreatePharmacist}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Create Pharmacist</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <CreatePharmacist closeModal = {this.handleModalCreatePharmacist} fetchPharmacists = {this.fetchPharmacists}/>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    handleModalAddDermatologist = () => {\r\n        this.setState({\r\n            showModalAddDermatologist : !this.state.showModalAddDermatologist\r\n        });\r\n    }\r\n\r\n    handleModalCreatePharmacist = () => {\r\n        this.setState({\r\n            showModalCreatePharmacist : !this.state.showModalCreatePharmacist\r\n        });\r\n    }\r\n\r\n    deleteDermatologist = (dermatologist) => {\r\n        let isBoss = window.confirm('Are you sure you want to delete ' + dermatologist.firstName + ' ' + dermatologist.lastName + ' from your employees list?');\r\n        alert( isBoss ); // true if OK is pressed\r\n    }\r\n\r\n    deletePharmacist = (dermatologist) => {\r\n        let isBoss = window.confirm('Are you sure you want to delete ' + dermatologist.firstName + ' ' + dermatologist.lastName + ' from your employees list?');\r\n        alert( isBoss ); // true if OK is pressed\r\n    }\r\n\r\n    fetchPharmacists = async () => {\r\n        axios\r\n            .get('http://localhost:8080/api/pharmacist/getByPharmacy/1')\r\n            .then(res => {\r\n                this.setState({\r\n                    pharmacists : res.data\r\n                })\r\n            });\r\n    }\r\n\r\n    changeSearchPharmacist = (event) => {\r\n        const { name, value } = event.target;\r\n        const searchPharmacist = this.state.searchPharmacist;\r\n        searchPharmacist[name] = value;\r\n\r\n        this.setState({ searchPharmacist });\r\n    }\r\n    resetSearchPharmacist = () => {\r\n        this.setState({\r\n            searchPharmacist : {\r\n                firstName : '',\r\n                lastName : ''\r\n            },\r\n            pharmacists : this.state.backupPharmacists\r\n        })\r\n    }\r\n\r\n    searchPharmacist = async () => {\r\n        let filterPharmacists = await this.state.pharmacists.filter(pharmacist => {\r\n            if (this.state.searchPharmacist.firstName !== '' && this.state.searchPharmacist.lastName !== '')\r\n                return pharmacist.firstName.includes(this.state.searchPharmacist.firstName) && pharmacist.lastName.includes(this.state.searchPharmacist.lastName);\r\n            else if (this.state.searchPharmacist.firstName !== '')\r\n                return pharmacist.firstName.includes(this.state.searchPharmacist.firstName);\r\n            else if (this.state.searchPharmacist.lastName !== '')\r\n                return pharmacist.lastName.includes(this.state.searchPharmacist.lastName);\r\n            return true;\r\n        });\r\n        this.setState({\r\n            pharmacists : filterPharmacists\r\n        })\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyMedicationOrders.js",["323","324","325","326"],"import React from 'react';\r\nimport {Button, Modal, FormControl, Navbar} from \"react-bootstrap\";\r\nimport MedicationOrdersList from \"./MedicationOrdersList\";\r\nimport MedicationOffers from \"./MedicationOffers\";\r\n\r\nexport default class PharmacyMedicationOrders extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userType : 'pharmacyAdmin',\r\n            medicationOrders : [],\r\n            showModal : false,\r\n            showContent : 'listOrders'\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (this.state.showContent === 'showOffers' && nextState.showContent === 'showOffers') //when clicking on navbar st default behaviour to listOrders\r\n            this.setState({\r\n                showContent : 'listOrders'\r\n            })\r\n        return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        let medicationOrders = [\r\n            {\r\n                pharmacyAdmin : {\r\n                    firstName : 'Mirko',\r\n                    lastName : 'Mirkovic'\r\n                },\r\n                deadLine : '21.3.2021.',\r\n                medicationQuantity: {\r\n\r\n                },\r\n                status : 'pending',\r\n                medicationOffers : []\r\n            },\r\n            {\r\n                pharmacyAdmin : {\r\n                    firstName : 'Jelena',\r\n                    lastName : 'Rozga'\r\n                },\r\n                deadLine : '13.5.2021.',\r\n                medicationQuantity: {\r\n\r\n                },\r\n                status : 'processed',\r\n                medicationOffers : []\r\n            }\r\n        ];\r\n\r\n        this.setState({\r\n            medicationOrders : medicationOrders,\r\n            showContent : this.props.showContent\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br/><br/>\r\n                {this.handleContent()}\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n    handleContent = () => {\r\n        if (this.state.showContent === 'listOrders')\r\n            return (\r\n                <MedicationOrdersList showOffers={this.changeContent} />\r\n            );\r\n        else if (this.state.showContent === 'showOffers')\r\n            return (\r\n              <MedicationOffers order = {this.state.medicationOrders[0]}  />\r\n            );\r\n    }\r\n\r\n    changeContent = (content) => {\r\n        this.setState({\r\n            showContent : content\r\n        })\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyDescription.js",["327"],"import React from 'react';\r\nimport { Map, GoogleApiWrapper, InfoWindow, Marker} from 'google-maps-react';\r\nimport {PharmacyPage} from \"../../pages/PharmacyPage\";\r\n\r\nconst mapStyles = {\r\n    width: '50%',\r\n    height: '50%'\r\n};\r\n\r\n\r\nexport class PharmacyDescription extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userType : 'pharmacyAdmin',\r\n            pharmacy : this.props.pharmacy,\r\n            showingInfoWindow: false,  // Hides or shows the InfoWindow\r\n            activeMarker: {},          // Shows the active marker upon click\r\n            selectedPlace: {},\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"card\">\r\n                                <h5 className=\"card-header\">\r\n                                    {this.state.pharmacy.description}\r\n                                </h5>\r\n                                <div className=\"card-body\">\r\n                                    <p className=\"card-text\">\r\n                                        Address : {this.state.pharmacy.address.street} <br/>\r\n                                        Grade : {this.state.pharmacy.grade} <br/>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Map\r\n                    google={this.props.google}\r\n                    zoom={14}\r\n                    style={mapStyles}\r\n                    initialCenter={\r\n                        {\r\n                            lat: this.state.pharmacy.address.latitude,\r\n                            lng: this.state.pharmacy.address.longitude\r\n                        }\r\n                    }\r\n                >\r\n                    <Marker\r\n                        onClick={this.onMarkerClick}\r\n                        name={this.state.pharmacy.address.street}\r\n                    />\r\n                    <InfoWindow\r\n                        marker={this.state.activeMarker}\r\n                        visible={this.state.showingInfoWindow}\r\n                        onClose={this.onClose}\r\n                    >\r\n                        <div>\r\n                            <h4>{this.state.selectedPlace.name}</h4>\r\n                        </div>\r\n                    </InfoWindow>\r\n                </Map>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onMarkerClick = (props, marker, e) =>\r\n        this.setState({\r\n            selectedPlace: props,\r\n            activeMarker: marker,\r\n            showingInfoWindow: true\r\n        });\r\n\r\n    onClose = props => {\r\n        if (this.state.showingInfoWindow) {\r\n            this.setState({\r\n                showingInfoWindow: false,\r\n                activeMarker: null\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyBFrua9P_qHcmF253UAXnw1wHnIC7nD2DY'\r\n})(PharmacyDescription)","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\MedicationOrdersList.js",["328"],"import React from \"react\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport {ButtonGroup, Input} from \"rsuite\";\r\nimport Dropdown from \"react-dropdown\";\r\n\r\nconst options = [\r\n    'Xanax | 3', 'Brufen | 4', 'Linex | 100'\r\n];\r\nconst defaultOption = options[0];\r\n\r\nexport default class MedicationOrdersList extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userType : 'pharmacyAdmin',\r\n            medicationOrders : [],\r\n            showModal : false,\r\n            showContent : 'listOrders',\r\n            radioAll : '1',\r\n            radioPending : '2',\r\n            radioProcessed : '3'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let medicationOrders = [\r\n            {\r\n                pharmacyAdmin : {\r\n                    firstName : 'Mirko',\r\n                    lastName : 'Mirkovic'\r\n                },\r\n                deadLine : '21.3.2021.',\r\n                medicationQuantity: {\r\n\r\n                },\r\n                status : 'pending',\r\n                medicationOffers : []\r\n            },\r\n            {\r\n                pharmacyAdmin : {\r\n                    firstName : 'Jelena',\r\n                    lastName : 'Rozga'\r\n                },\r\n                deadLine : '13.5.2021.',\r\n                medicationQuantity: {\r\n\r\n                },\r\n                status : 'processed',\r\n                medicationOffers : []\r\n            }\r\n        ];\r\n\r\n        this.setState({\r\n            medicationOrders : medicationOrders\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n\r\n                <h1>Narudzbenice</h1>\r\n\r\n                <br/>\r\n                <Button variant=\"success\" onClick={this.createOrder}>Create order</Button>\r\n                <br/><br/>\r\n\r\n                <b>Filter by :</b>\r\n                <ButtonGroup>\r\n                    <Button>All\r\n                        <Input ref=\"input1\" type=\"radio\" name=\"radioButtonSet\" value='input1' standalone defaultChecked/>\r\n                    </Button>\r\n                    <Button>Pending\r\n                        <Input ref=\"input2\" type=\"radio\" name=\"radioButtonSet\" value='input2' standalone/>\r\n                    </Button>\r\n                    <Button>Processed\r\n                        <Input ref=\"input2\" type=\"radio\" name=\"radioButtonSet\" value='input2' standalone/>\r\n                    </Button>\r\n                </ButtonGroup>\r\n                <br/>\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Kreirao</th>\r\n                        <th scope=\"col\">Rok</th>\r\n                        <th scope=\"col\">Lista lekova</th>\r\n                        <th scope=\"col\">Status</th>\r\n                        <th scope=\"col\">Ponude</th>\r\n\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.medicationOrders.map((medicationOrder, index) => (\r\n                        <tr>\r\n                            <th scope=\"row\">{index+1}</th>\r\n                            <td>{medicationOrder.pharmacyAdmin.firstName + ' ' + medicationOrder.pharmacyAdmin.lastName}</td>\r\n                            <td>{medicationOrder.deadLine}</td>\r\n                            <td>\r\n                                <Dropdown options={options}  value={defaultOption} />\r\n                            </td>\r\n                            <td>{medicationOrder.status}</td>\r\n                            <td>\r\n                                <Button variant=\"primary\" onClick={this.showOffersButtonClick}>\r\n                                    Pregledaj ponude\r\n                                </Button>\r\n                            </td>\r\n                            <td>\r\n                                <Button variant=\"info\" >\r\n                                    Izmeni\r\n                                </Button>\r\n                            </td>\r\n                            <td>\r\n                                <Button variant=\"danger\" onClick={() => this.deleteOrder(medicationOrder)}>\r\n                                    Obrisi\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n\r\n                <Modal show={this.state.showModal} onHide={this.handleModal}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Modal heading</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleModal}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.handleModal}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleModal = () => {\r\n        this.setState({\r\n            showModal : !this.state.showModal\r\n        });\r\n    }\r\n\r\n    showOffersButtonClick = () => {\r\n        this.props.showOffers('showOffers');\r\n    }\r\n\r\n    createOrder = () => {\r\n        this.props.showOffers('showCreateOrder');\r\n    }\r\n\r\n    deleteOrder = (order) => {\r\n        let isBoss = window.confirm('Are you sure you want to delete the order from your order list?');\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\MedicationOffers.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PriceList.js",["329"],"import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nexport default class PriceList extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userType : 'pharmacyAdmin'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div>\r\n                        <h3>\r\n                            Price List\r\n                        </h3>\r\n\r\n                        <button type=\"button\" class=\"btn btn-info\">Kreiraj promociju</button>\r\n                        <div className=\"row\">\r\n\r\n\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyReports.js",["330"],"import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nexport default class PharmacyReports extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userType : 'pharmacyAdmin'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div>\r\n                        <h3>\r\n                            Reports\r\n                        </h3>\r\n\r\n                        <button type=\"button\" class=\"btn btn-info\">Kreiraj promociju</button>\r\n                        <div className=\"row\">\r\n\r\n\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\CreateOrder.js",["331"],"import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport AddMedicationQuantity from \"./AddMedicationQuantity\";\r\nimport AllergyPatientListing from \"../AllergyPatientListing\";\r\nimport OrderQuantityListing from \"./OrderQuantityListing\";\r\n\r\nexport default class CreateOrder extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userType : 'pharmacyAdmin',\r\n            medications : [\r\n                {\r\n                    id : 1,\r\n                    name : \"Xantil\"\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name : \"Brufen\"\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name : \"Linex\"\r\n                },\r\n                {\r\n                    id: 4,\r\n                    name : \"Vitamin C\"\r\n                }\r\n            ],\r\n            medicationOrder : {\r\n                deadLine : \"\",\r\n                medicationQuantity : []\r\n            },\r\n            quantities : []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\" style={({ marginLeft: '1rem' })}>\r\n                <div className=\"row\">\r\n                    <div>\r\n                        <h1>\r\n                            Create order\r\n                        </h1>\r\n                        <br/>\r\n                        Choose deadline for medication offers: <i/><i/><i/>\r\n                        <DatePicker  selected={this.state.medicationOrder.deadLine} minDate={new Date()} onChange={date => this.changeDatePicker(date)} />\r\n\r\n                        <AddMedicationQuantity addQuantity={this.addQuantity} medications = {this.state.medications} />\r\n\r\n                        <OrderQuantityListing quantities={this.state.quantities} removeQuantity ={this.removeQuantity}/>\r\n\r\n\r\n                        <Button variant={\"dark\"} onClick={this.handleSubmit}>Submit</Button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    addQuantity = async (quantity) => {\r\n        if(!this.state.quantities.map(a => a.medication).includes(quantity.medication))\r\n            await this.setState({\r\n                quantities : this.state.quantities.concat(quantity)\r\n            })\r\n        console.log(this.state.quantities);\r\n    }\r\n\r\n    removeQuantity = (quantity) => { //in this context quantity is medication name!\r\n        this.setState({\r\n            quantities : this.state.quantities.filter(a => a.medication !== quantity)\r\n        })\r\n    }\r\n\r\n\r\n    changeDatePicker = (date) => {\r\n        this.setState({\r\n            medicationOrder : {\r\n                ...this.state.medicationOrder,\r\n                deadLine : date\r\n            }\r\n            }\r\n        );\r\n    }\r\n\r\n    handleSubmit = async () => {\r\n        await this.setState({\r\n                medicationOrder : {\r\n                    ...this.state.medicationOrder,\r\n                    medicationQuantity : this.state.quantities\r\n                }\r\n            }\r\n        );\r\n        console.log(this.state.medicationOrder);\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyListing.jsx",["332"],"import React from 'react';\r\nimport {Card, Col, Row, Badge} from \"react-bootstrap\";\r\nimport PharmacySearch from './PharmacySearch';\r\nimport axios from 'axios';\r\n\r\nexport default class PharmacyListing extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            pharmacies : [],\r\n        }\r\n        this.search = this.search.bind(this)\r\n        this.cancel = this.cancel.bind(this)\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await axios\r\n        .get('http://localhost:8080/api/pharmacy')\r\n        .then((res) => {\r\n            this.setState({\r\n                pharmacies : res.data\r\n            })\r\n        })\r\n\r\n        this.pharmaciesBackup = [...this.state.pharmacies]\r\n    }\r\n\r\n    cancel() {\r\n        console.log(this.pharmaciesBackup)\r\n        this.setState({\r\n            pharmacies : this.pharmaciesBackup\r\n        })\r\n    }\r\n\r\n    search({name, location}) {\r\n        console.log(name, location)\r\n        axios\r\n        .post('http://localhost:8080/api/pharmacy/search', {\r\n            'name' : name,\r\n            'street' : location.street,\r\n            'town' : location.town,\r\n            'country': location.country\r\n        })\r\n        .then((res) => {\r\n            this.setState({\r\n                pharmacies : res.data\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const pharmacies = this.state.pharmacies.map((pharmacy, index) => {\r\n            const address = pharmacy.address.street + ', ' + pharmacy.address.town + ', ' + pharmacy.address.country \r\n            return (\r\n                <Col xs={4} >\r\n                <Card bg={'dark'} key={index} text={'white'} style={{ width: '25rem', height: '20rem' }} className=\"mb-2\">\r\n                    <Card.Body>\r\n                    <Card.Title>{pharmacy.name}</Card.Title>\r\n                        <Card.Subtitle className=\"mb-5 mt-2 text-muted\">{address}</Card.Subtitle>\r\n                        <Card.Text>\r\n                        {pharmacy.description}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                </Col>\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                <Row >    \r\n                        <h2 className={'mt-5 ml-3'} id=\"pharmacies\">Pharmacies</h2> \r\n                </Row>\r\n                <PharmacySearch search={this.search} cancel={this.cancel}/>\r\n                <Row className={'mt-4'}>\r\n                    {pharmacies}\r\n                </Row>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\layout\\UnregisteredLayout.jsx",["333","334"],"import React from 'react'\r\nimport { Container, Navbar, NavDropdown, Nav } from 'react-bootstrap';\r\nimport Login from \"../components/Login\";\r\n\r\nexport default class UnregisteredLayout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid style={{'background-color' : '#AEB6BF'}}>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"/\">WebPharm</Navbar.Brand>\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"#pharmacies\">Pharmacies</Nav.Link>\r\n                        <Nav.Link href=\"#medications\">Medications</Nav.Link>\r\n                    </Nav>\r\n                    <Nav>\r\n                    <Login/>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            {this.props.children}\r\n        </Container>\r\n        )\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\MedicationListing.jsx",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\CreatePharmacist.js",["335","336","337","338","339","340","341","342"],"import React from \"react\";\r\nimport {Button, Col, Form, Modal, Table, Grid, FormControl, Row} from \"react-bootstrap\";\r\nimport \"../../App.css\";\r\nimport TimePicker from \"react-time-picker\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nexport default class CreatePharmacist extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                'email': '',\r\n                'password': '',\r\n                'firstName': '',\r\n                'lastName': '',\r\n                'country': '',\r\n                'city': '',\r\n                'street' : '',\r\n                'telephone': '',\r\n                'rePassword' : '',\r\n                'startShift' : '',\r\n                'endShift' : ''\r\n            },\r\n            errors:{\r\n                user: {\r\n                    'email': 'Enter email',\r\n                    'password': 'Enter password',\r\n                    'firstName': 'Enter First name',\r\n                    'lastName': 'Enter Last name',\r\n                    'country': 'Enter Country',\r\n                    'city': 'Enter City',\r\n                    'street' : 'Enter Street',\r\n                    'telephone': 'Enter Telephone',\r\n                    'rePassword' : 'Repeat password'\r\n                }\r\n            },\r\n            validForm: false,\r\n            submitted: false,\r\n\r\n\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.isValidPassword = this.isValidPassword.bind(this);\r\n\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        const user = this.state.user;\r\n        user[name] = value;\r\n\r\n        this.setState({ user });\r\n        this.validationErrorMessage(event);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <div className=\"row\">\r\n                    <label className=\"col-sm-2 col-form-label\">Name</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.firstName} name=\"firstName\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"First Name\" />\r\n                        { this.state.submitted && this.state.errors.user.firstName.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.firstName}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.lastName} name=\"lastName\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"Last Name\" />\r\n                        { this.state.submitted && this.state.errors.user.lastName.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.lastName}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Email</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"email\" value={this.state.user.email} name=\"email\" onChange={(e) => { this.handleInputChange(e)} }className=\"form-control\" id=\"email\" placeholder=\"example@gmail.com\" />\r\n                        { this.state.submitted && this.state.errors.user.email.length > 0 && <span className=\"text-danger\">{this.state.errors.user.email}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Tel</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.telephone} name=\"telephone\" onChange={(e) => { this.handleInputChange(e)} }  className=\"form-control\" id=\"telephone\" placeholder=\"+3810640333489\" />\r\n                        { this.state.submitted && this.state.errors.user.telephone.length > 0 && <span className=\"text-danger\">{this.state.errors.user.telephone}</span>}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Street</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.street} name=\"street\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" id=\"street\" placeholder=\"Enter street\" />\r\n                        { this.state.submitted && this.state.errors.user.street.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.street}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">City</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.city} name=\"city\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" id=\"city\" placeholder=\"Enter city\" />\r\n                        { this.state.submitted && this.state.errors.user.city.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.city}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Country</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.country} name=\"country\" onChange={(e) => { this.handleInputChange(e)} }  className=\"form-control\" id=\"country\" placeholder=\"Enter country\" />\r\n                        { this.state.submitted && this.state.errors.user.country.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.country}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row\">\r\n                    <label className=\"col-sm-2 col-form-label\">Password</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <FormControl name=\"password\" type=\"password\" placeholder=\"Password\"  value={this.state.user.password} onChange={(e) => { this.handleInputChange(e)} }/>\r\n                        { this.state.submitted && this.state.errors.user.password.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.password}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Repeat password</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <FormControl name=\"rePassword\" type=\"password\" placeholder=\"Repeat new Password\" value={this.state.user.rePassword} onChange={(e) => { this.handleInputChange(e)} }/>\r\n                        { this.state.submitted && this.state.errors.user.rePassword.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.rePassword}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <hr className=\"mt-2 mb-3\"/>\r\n\r\n                <div className=\"row\">\r\n                    <div style={({ marginLeft: '1rem' })}>\r\n                        <label style={({ marginRight: '1rem' })}>Select start of work time : </label>\r\n                        <TimePicker  name=\"startShift\" value={this.state.user.startShift} onChange={this.setStartShift}/>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div style={({ marginLeft: '1rem' })}>\r\n                        <label style={({ marginRight: '1rem' })}>Select end of work time : </label>\r\n                        <TimePicker  name=\"endShift\" value={this.state.user.endShift} onChange={this.setEndShift}/>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <hr className=\"mt-2 mb-3\"/>\r\n\r\n                <br/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-5 mb-2\">\r\n                    </div>\r\n                    <div >\r\n                        <Button variant=\"primary\" onClick={this.submitForm} style={({ marginRight: '1rem' })}>Submit</Button>\r\n                        <Button variant=\"secondary\" onClick={this.closeModal} >Close</Button>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    submitForm = async (event) => {\r\n        this.setState({ submitted: true });\r\n        const user = this.state.user;\r\n        event.preventDefault();\r\n        if (this.validateForm(this.state.errors)) {\r\n            console.info('Valid Form');\r\n            console.log(this.state.user);\r\n\r\n            await axios.post('http://localhost:8080/api/pharmacist', {\r\n                firstName: this.state.user.firstName,\r\n                lastName: this.state.user.lastName,\r\n                userType : 0,\r\n                credentials: {\r\n                    email: this.state.user.email,\r\n                    password: this.state.user.password\r\n                },\r\n                contact: {\r\n                    phoneNumber: this.state.user.telephone,\r\n                    address: {\r\n                        town: this.state.user.city,\r\n                        street: this.state.user.street,\r\n                        country: this.state.user.country,\r\n                        latitude: 42,\r\n                        longitude: 34\r\n                    }\r\n                },\r\n                workingHours: [\r\n                    {\r\n                        period: {\r\n                            periodStart: '2017-01-13T' + this.state.user.startShift,\r\n                            periodEnd: '2017-01-13T' + this.state.user.endShift\r\n                        },\r\n                        pharmacy : {\r\n                            id : 1\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n\r\n            this.closeModal();\r\n            this.props.fetchPharmacists();\r\n        } else {\r\n            console.log('Invalid Form')\r\n        }\r\n    }\r\n\r\n    validationErrorMessage = (event) => {\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n\r\n        switch (name) {\r\n            case 'firstName':\r\n                errors.user.firstName = value.length < 1 ? 'Enter First Name' : '';\r\n                break;\r\n            case 'lastName':\r\n                errors.user.lastName = value.length < 1 ? 'Enter Last Name' : '';\r\n                break;\r\n            case 'email':\r\n                errors.user.email = this.isValidEmail(value) ? '' : 'Email is not valid!';\r\n                break;\r\n            case 'telephone':\r\n                errors.user.telephone = this.isValidTelephone(value) ? 'Enter valid telephone number' : '';\r\n                break;\r\n            case 'country':\r\n                errors.user.country = value.length < 1 ?  'Enter Country' : '';\r\n                break;\r\n            case 'city':\r\n                errors.user.city = value.length < 1 ?  'Enter City' : '';\r\n                break;\r\n            case 'street':\r\n                errors.user.street = value.length < 1 ?  'Enter Street' : '';\r\n                break;\r\n            case 'password':\r\n                errors.user.password = value.length < 1 ? 'Enter Password' : '';\r\n                break;\r\n            case 'rePassword':\r\n                errors.user.rePassword = this.isValidPassword(value) ? '' : 'This password must match the previous';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({ errors });\r\n    }\r\n\r\n    validateForm = (errors) => {\r\n        let valid = true;\r\n        Object.entries(errors.user).forEach(item => {\r\n            console.log(item)\r\n            item && item[1].length > 0 && (valid = false)\r\n        })\r\n        return valid;\r\n    }\r\n    isValidEmail = (value) => {\r\n        return !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,64}$/i.test(value))\r\n    }\r\n\r\n    isValidTelephone = (value) => {\r\n        return !(value && /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[0-9]{2,3}[-\\s\\./0-9]*$/i.test(value))\r\n    }\r\n\r\n    isValidPassword = (value) => {\r\n        return this.state.user.password === this.state.user.rePassword;\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.props.closeModal();\r\n    }\r\n\r\n    setStartShift =(date) => {\r\n        const user = this.state.user;\r\n        user['startShift'] = date;\r\n        this.setState({ user });\r\n    }\r\n\r\n    setEndShift =(date) => {\r\n        const user = this.state.user;\r\n        user['endShift'] = date;\r\n        this.setState({ user });\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\AddMedicationQuantity.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\OrderQuantityListing.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacySearch.jsx",["343"],"import React from 'react'\r\nimport { Row, Button, FormControl, Col, Container } from 'react-bootstrap'\r\nimport SearchLocationInput from '../AutoCompleteInput'\r\n\r\nclass PharmacySearch extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name : '',\r\n            street : '',\r\n            town : '',\r\n            country : ''\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.getLocation = this.getLocation.bind(this)\r\n        this.search = this.search.bind(this)\r\n        this.cancel = this.cancel.bind(this)\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target\r\n        this.setState({\r\n            [target.name] : target.value\r\n        })\r\n    }\r\n\r\n    getLocation({address_components}) {\r\n        let street, town, country\r\n        address_components.forEach(component => {\r\n            if (component.types.includes('route'))\r\n                street = component.long_name\r\n            else if (component.types.includes('locality'))\r\n                town = component.long_name\r\n            else if (component.types.includes('country'))\r\n                country = component.long_name\r\n        })\r\n\r\n        this.setState({\r\n            street: street || '',\r\n            town : town || '',\r\n            country : country || ''\r\n        })\r\n    }\r\n\r\n    search() {\r\n        this.props.search({\r\n            name : this.state.name,\r\n            location : {\r\n                street : this.state.street,\r\n                town : this.state.town,\r\n                country : this.state.country\r\n            }\r\n        })\r\n    }\r\n\r\n    cancel() {\r\n        this.props.cancel()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col xs={{ span: 2.5}} className={'ml-3'}>\r\n                    <FormControl name=\"name\" className=\"mt-2 mb-2\" value={this.state.name}\r\n                            placeholder={'Pharmacy Name'} onChange={this.handleInputChange}/>\r\n                </Col>\r\n                <Col className={'pt-2'} xs={{ span: 2.5 }}>\r\n                    <SearchLocationInput getLocation={this.getLocation}/>\r\n                </Col>\r\n                <Col className={'pt-2'} xs={{ span: 0.5  }}>\r\n                    <Button variant={'outline-dark'} onClick={this.cancel}>Cancel</Button>\r\n                </Col>\r\n                <Col className={'pt-2'} xs={{ span: 0.5 }}>\r\n                    <Button variant={'dark'} onClick={this.search}>Go</Button>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PharmacySearch","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\AutoCompleteInput.jsx",["344"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { FormControl } from 'react-bootstrap'\r\n\r\n\r\nlet autoComplete;\r\n\r\nconst loadScript = (url, callback) => {\r\n  let script = document.createElement(\"script\");\r\n  script.type = \"text/javascript\";\r\n\r\n  if (script.readyState) {\r\n    script.onreadystatechange = function() {\r\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\r\n        script.onreadystatechange = null;\r\n        callback();\r\n      }\r\n    };\r\n  } else {\r\n    script.onload = () => callback();\r\n  }\r\n\r\n  script.src = url;\r\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\r\n};\r\n\r\nfunction handleScriptLoad(updateQuery, autoCompleteRef, props) {\r\n  autoComplete = new window.google.maps.places.Autocomplete(\r\n    autoCompleteRef.current,\r\n    { types: [\"geocode\"] }\r\n  );\r\n  autoComplete.setFields([\"address_components\", \"formatted_address\"]);\r\n  autoComplete.addListener(\"place_changed\", () =>\r\n    handlePlaceSelect(updateQuery, props)\r\n  );\r\n}\r\n\r\nasync function handlePlaceSelect(updateQuery, props) {\r\n  const addressObject = autoComplete.getPlace();\r\n  const query = addressObject.formatted_address;\r\n  updateQuery(query);\r\n  props.getLocation(addressObject)\r\n  // console.log(addressObject);\r\n\r\n}\r\n\r\nfunction SearchLocationInput(props) {\r\n  const [query, setQuery] = useState(\"\");\r\n  const autoCompleteRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    loadScript(\r\n      `https://maps.googleapis.com/maps/api/js?key=AIzaSyBFrua9P_qHcmF253UAXnw1wHnIC7nD2DY&libraries=places`,\r\n      () => handleScriptLoad(setQuery, autoCompleteRef, props)\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"search-location-input\">\r\n      <FormControl\r\n        ref={autoCompleteRef}\r\n        onChange={event => setQuery(event.target.value)}\r\n        placeholder=\"Pharmacy Address\"\r\n        value={query}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchLocationInput;","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\layout\\PatientLayout.jsx",["345","346","347","348","349","350","351","352","353","354","355","356"],"import React from 'react'\r\nimport { Container, Navbar, NavDropdown, Nav } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass PatientLayout extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid style={{'background-color' : '#AEB6BF'}}>\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand as={NavLink} to=\"/\">WebPharm</Navbar.Brand>\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                        <NavDropdown title=\"Pharmacies\" id=\"collasible-nav-dropdow\">\r\n                                <NavDropdown.Item href=\"javascript:;\">All Pharmacies</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"javascript:;\">Promotions</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Schedule\" id=\"collasible-nav-dropdow\">\r\n                                <NavDropdown.Item href=\"javascript:;\">Dermatologist Examination</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"javascript:;\">Pharmacist Counceling</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"javascript:;\">All Schedules</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Medications\" id=\"collasible-nav-dropdow\">\r\n                                <NavDropdown.Item href=\"javascript:;\">Reservations</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"javascript:;\">Pick Up</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"ePrescription\" id=\"collasible-nav-dropdow\">\r\n                                <NavDropdown.Item href=\"javascript:;\">Prescriptions History</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"javascript:;\">Medication History</NavDropdown.Item>\r\n                            </NavDropdown>    \r\n                        </Nav>\r\n                        <Nav>\r\n                            <NavDropdown title=\"Account\" id=\"collasible-nav-dropdow\">\r\n                                <NavDropdown.Item href=\"javascript:;\">My Account</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"javascript:;\">Penalties</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <Nav.Link as={NavLink} to='/patient-profile'>File a Complaint</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                {this.props.children}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PatientLayout","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\ScheduleByDateTime.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\ChooseTherapy.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\PharmacyAdminProfilePage.js",["357","358","359"],"import React from \"react\";\r\nimport {Col, Container, Nav, Row, Button, Toast} from \"react-bootstrap\";\r\nimport UserInfo from \"../components/UserInfo\";\r\nimport ChangePassword from \"../components/ChangePassword\";\r\nimport axios from \"axios\"\r\nimport PatientLayout from \"../layout/PatientLayout\";\r\nimport PharmacyAdminLayout from \"../layout/PharmacyAdminLayout\";\r\n\r\nexport default class PharmacyAdminProfilePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'firstName' : '',\r\n            'lastName' : '',\r\n            'email' : '',\r\n            'address' : '',\r\n            'town' : '',\r\n            'country' : '',\r\n            'phoneNumber' : '',\r\n            'oldPass' : '',\r\n            'newPass' : '',\r\n            'repPass' : '',\r\n            'editMode' : false,\r\n            'saveDisabled' : false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        await axios\r\n            .get('http://localhost:8080/api/pharmacyAdmin/1')\r\n            .then(res => {\r\n                let pharmacyAdmin = res.data;\r\n                console.log(pharmacyAdmin)\r\n                this.setState({\r\n                    'id' : pharmacyAdmin.id,\r\n                    'firstName' : pharmacyAdmin.firstName,\r\n                    'lastName' : pharmacyAdmin.lastName,\r\n                    'email' : pharmacyAdmin.email,\r\n                    'userType' : pharmacyAdmin.userType,\r\n                    'editMode' : false,\r\n                    'changePasswordMode' : false,\r\n                    'address' : pharmacyAdmin.contact.address.street,\r\n                    'town' : pharmacyAdmin.contact.address.town,\r\n                    'country' : pharmacyAdmin.contact.address.country,\r\n                    'phoneNumber' : pharmacyAdmin.contact.phoneNumber\r\n                })\r\n            });\r\n\r\n        this.createBackupUser();\r\n    }\r\n\r\n    createBackupUser = () => {\r\n        this.user = {\r\n            'firstName' : this.state.firstName,\r\n            'lastName' : this.state.lastName,\r\n            'email' : this.state.email,\r\n            'address' : this.state.address,\r\n            'town' : this.state.town,\r\n            'country' : this.state.country,\r\n            'phoneNumber' : this.state.phoneNumber,\r\n        }\r\n\r\n        this.setState({\r\n            'editMode' : false,\r\n            'changePasswordMode' : false\r\n        })\r\n    }\r\n\r\n    activateUpdateMode = () => {\r\n        this.resetData();\r\n        this.setState({\r\n            editMode : !this.state.editMode,\r\n            changePasswordMode : false\r\n        })\r\n    }\r\n\r\n    activateChangePasswordMode = () => {\r\n        this.setState({\r\n            'saveDisabled' : !this.state.changePasswordMode,\r\n            'changePasswordMode' : !this.state.changePasswordMode,\r\n            'oldPass' : '',\r\n            'newPass' : '',\r\n            'repPass' : ''\r\n        })\r\n    }\r\n\r\n    changePass = () => {\r\n        axios\r\n            .put('http://localhost:8080/api/pharmacyAdmin/pass', {\r\n                'userId' : this.state.id,\r\n                'oldPassword' : this.state.oldPass,\r\n                'newPassword' : this.state.newPass,\r\n                'repeatedPassword' : this.state.repPass\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    'password' : this.state.newPass\r\n                })\r\n            })\r\n            .catch(e => alert('Nisam pijana i nece moci!!!'));\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        this.setState({\r\n            [target.name] : target.value,\r\n        })\r\n    }\r\n\r\n    resetData = () => {\r\n        this.setState({\r\n            'firstName' : this.user.firstName,\r\n            'lastName' : this.user.lastName,\r\n            'address' : this.user.address,\r\n            'town' : this.user.town,\r\n            'country' : this.user.country,\r\n            'phoneNumber' : this.user.phoneNumber,\r\n        })\r\n    }\r\n\r\n    disableSave = (disable) => {\r\n        this.setState({\r\n            'saveDisabled' : disable\r\n        })\r\n    }\r\n\r\n\r\n\r\n    save = () => {\r\n        axios\r\n            .put('http://localhost:8080/api/pharmacyAdmin', {\r\n                'id' : this.state.id,\r\n                'firstName' : this.state.firstName,\r\n                'lastName' : this.state.lastName,\r\n                'userType' : this.state.userType,\r\n                'credentials' : {\r\n                    'email' : this.state.email,\r\n                    'password' : this.state.password\r\n                },\r\n                'contact' : {\r\n                    'phoneNumber' : this.state.phoneNumber,\r\n                    'address' : {\r\n                        'street' : this.state.address,\r\n                        'town' : this.state.town,\r\n                        'country' : this.state.country\r\n                    }\r\n                }\r\n            })\r\n            .then(res => {\r\n                if(this.state.changePasswordMode)\r\n                    this.changePass();\r\n                this.createBackupUser();\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {oldPass, newPass, repPass} = this.state;\r\n        const passwords = [oldPass, newPass, repPass]\r\n\r\n        return (\r\n            <PharmacyAdminLayout>\r\n                <Row className=\"pt-5\">\r\n                    <Col xs={2}>\r\n                        <Nav defaultActiveKey=\"/home\" className=\"flex-column\">\r\n                            {!this.state.editMode\r\n                                ? <Button variant=\"dark\" onClick={this.activateUpdateMode}>Edit</Button>\r\n                                : <Button variant=\"outline-secondary\" onClick={this.activateUpdateMode}>Cancel</Button>\r\n                            }\r\n                            {this.state.editMode && <Button variant=\"primary mt-2\"\r\n                                                            onClick={this.activateChangePasswordMode}>\r\n                                Change Password</Button>}\r\n                            {this.state.editMode && <Button variant=\"success mt-2\"\r\n                                                            disabled={this.state.saveDisabled} onClick={this.save}>Save</Button>}\r\n                        </Nav>\r\n                    </Col>\r\n                    <Col>\r\n                        <UserInfo user={this.state} edit={this.state.editMode} onChange={this.handleInputChange}/>\r\n\r\n                        {this.state.changePasswordMode && <ChangePassword pass={passwords} onChange={this.handleInputChange} disable={this.disableSave}/>}\r\n                    </Col>\r\n                </Row>\r\n            </PharmacyAdminLayout>\r\n        );\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\layout\\PharmacyAdminLayout.js",["360"],"import React from 'react'\r\nimport { Container, Navbar, NavDropdown, Nav } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass PharmacyAdminLayout extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid style={{'background-color' : '#AEB6BF'}}>\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand as={NavLink} to=\"/\">WebPharm</Navbar.Brand>\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavDropdown title=\"Pharmacies\" id=\"collasible-nav-dropdow\">\r\n                                <NavDropdown.Item href=\"/pharmacy\">My pharmacy</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                        <Nav>\r\n                            <NavDropdown title=\"Account\" id=\"collasible-nav-dropdow\">\r\n                                <NavDropdown.Item href=\"/pharmacy-admin-profile\">My Account</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                {this.props.children}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PharmacyAdminLayout","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\ScheduledAppointments.js",["361"],"import React from \"react\";\r\nimport moment from \"moment\";\r\nimport {Button, Container, Table} from \"react-bootstrap\";\r\n\r\nexport default class ScheduledAppointments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderAll()}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    renderAll = () => {\r\n        const Events = this.props.events.map((appointment, key) =>\r\n            <tr>\r\n                <td>{appointment.patient.firstName}</td>\r\n                <td>{appointment.patient.lastName}</td>\r\n                <td>{moment(appointment.period.periodStart).format('DD.MM.YYYY hh:mm')}</td>\r\n                <td>{moment(appointment.period.periodEnd).format('DD.MM.YYYY hh:mm')}</td>\r\n                <td> <Button onClick={() => this.handleClickStart(appointment)}> Start </Button> </td>\r\n                <td> <Button onClick={() => this.handleClickCancel(appointment)} > Did not show up </Button> </td>\r\n            </tr>)\r\n        return (\r\n            <Container >\r\n                <br/>\r\n                <Table style={{\"borderWidth\":\"1px\", 'borderColor':\"#aaaaaa\", 'borderStyle':'solid'}} striped hover>\r\n                    <tbody>\r\n                    <tr>\r\n                        <th>First name</th>\r\n                        <th>Last name</th>\r\n                        <th>Start of appointment</th>\r\n                        <th>End of appointment</th>\r\n                        <th>Start</th>\r\n                        <th>Cancel</th>\r\n                    </tr>\r\n                    {Events}\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    handleClickCancel = (appointment) => {\r\n        alert(appointment.patient.firstName);\r\n    }\r\n\r\n    handleClickStart = (appointment) => {\r\n        localStorage.setItem(\"appointment\", JSON.stringify(appointment));\r\n        localStorage.setItem(\"startedConsultation\", JSON.stringify(true));\r\n        this.props.renderParent(true);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\Appointment.js",["362"],"import React from \"react\";\r\nimport {Button, Col, Container, FormControl, Row} from \"react-bootstrap\";\r\nimport ChooseTherapy from \"./ChooseTherapy\";\r\nimport ScheduleByDateTime from \"./ScheduleByDateTime\";\r\n\r\nexport default class Appointment extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            scheduleNewAppointment : false,\r\n            report : \"\",\r\n            medication : { name :  \"Choose medication ...\" },\r\n            dateStartTherapy : \"\",\r\n            dateEndTherapy : \"\",\r\n            medications : [{\r\n                Id: 0,\r\n                name: \"aspirin\",\r\n                type: \"antibiotic\",\r\n                dose: 20,\r\n                medicationShape: \"capsule\",\r\n                manufacturer: \"hemofarm\",\r\n                medicationIssue: \"withPrescription\",\r\n                note: \"Be careful\",\r\n                ingredient: [{\r\n                    Id: 0,\r\n                    name: \"paracetamol\"\r\n                },\r\n                    {\r\n                        Id: 1,\r\n                        name: \"pera\"\r\n                    }],\r\n                sideEffect: [{\r\n                    Id: 0,\r\n                    name: \"osip\"\r\n                }]\r\n            },\r\n                {\r\n                Id : 0,\r\n                name : \"BS\",\r\n                type : \"probotic\",\r\n                dose : 20,\r\n                medicationShape : \"capsule\",\r\n                manufacturer : \"hemofarm\",\r\n                medicationIssue : \"withPrescription\",\r\n                note : \"Be careful\",\r\n                ingredient :[ {\r\n                    Id : 0,\r\n                    name : \"paracetamol\"\r\n                },\r\n                    {\r\n                        Id : 1,\r\n                        name : \"pera\"\r\n                    }],\r\n                sideEffect : [{\r\n                    Id : 0,\r\n                    name : \"osip\"\r\n                }]\r\n\r\n            }]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const ButtonSchedule = \"Schedule new appointment\";\r\n        return (\r\n          <Container>\r\n              <br/>\r\n\r\n              <Row >\r\n                <Col>\r\n                  {this.getPatientsInfo()}\r\n                </Col>\r\n                <Col>\r\n                    <Button variant=\"primary\" onClick={this.showScheduling} style={{ height : 40, marginTop : 10, float : \"right\"}} > {ButtonSchedule} </Button> <br/>\r\n                    <br/>\r\n                      {this.state.scheduleNewAppointment && <ScheduleByDateTime appointment={this.props.appointment}/>}\r\n                </Col>\r\n              </Row>\r\n\r\n              <br/>\r\n              <label  style={{fontSize : 20, marginLeft : 55, textDecoration : \"underline\"}}> Report </label>\r\n              <textarea className=\"form-control\"  rows=\"5\" cols=\"10\" placeholder={\"Type report...\"} name=\"report\" onChange={this.handleInputChange} value={this.state.report} />\r\n              <br/>\r\n              <label style={{fontSize : 20, marginLeft : 55, textDecoration : \"underline\"}}> Choose therapy </label>\r\n\r\n              {<ChooseTherapy dateEndTherapy={this.state.dateEndTherapy} dateStartTherapy={this.state.dateStartTherapy}  setStartDate={this.setStartDate} setEndDate={this.setEndDate} medications={this.state.medications} medication={this.state.medication} chooseMedication={this.chooseMedication} removeMedication={this.removeMedication}/>}\r\n\r\n              <Button onClick={() => this.finishAppointment()}> Finish appointment </Button>\r\n          </Container>\r\n        );\r\n    }\r\n\r\n    getPatientsInfo = () => {\r\n        return (\r\n            <div>\r\n                <label style={{fontSize : 20, marginLeft : 55, textDecoration : \"underline\"}} > Information about patient :  </label>\r\n                <Row>\r\n                    <label style={{fontSize : 20}} >  <b> First name: </b></label>\r\n                    <label style={{fontSize : 20 , marginLeft: 40}} > {this.props.appointment.patient.firstName} </label>\r\n                </Row>\r\n                <Row>\r\n                    <label style={{fontSize : 20}} >  <b> Last name: </b></label>\r\n                    <label style={{fontSize : 20, marginLeft: 40}} > {this.props.appointment.patient.lastName} </label>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    showScheduling =() => {\r\n        this.setState({\r\n            scheduleNewAppointment : !this.state.scheduleNewAppointment\r\n        })\r\n    }\r\n\r\n    setStartDate = (date) => {\r\n        this.setState({\r\n            dateStartTherapy : date\r\n        })\r\n    }\r\n    setEndDate = (date) => {\r\n        this.setState({\r\n            dateEndTherapy : date\r\n        })\r\n    }\r\n\r\n    chooseMedication = (event) => {\r\n        this.setState({\r\n            medication: this.state.medications.filter(m => m.name === event.target.value)[0]\r\n        })\r\n    }\r\n\r\n    removeMedication = () => {\r\n        this.setState({\r\n            medication : {}\r\n        })\r\n    }\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        this.setState({\r\n            [target.name] : target.value\r\n        })\r\n    }\r\n\r\n\r\n\r\n    finishAppointment = () => {\r\n        this.props.renderParent(false);\r\n        localStorage.clear();\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\patient\\PatientProfilePage.js",["363","364","365"],"import React from \"react\";\r\nimport {Col, Container, Nav, Row, Button, Toast} from \"react-bootstrap\";\r\nimport UserInfo from \"../../components/UserInfo\";\r\nimport AllergyPatientListing from \"../../components/AllergyPatientListing\";\r\nimport AddAllergy from \"../../components/AddAllergy\";\r\nimport ChangePassword from \"../../components/ChangePassword\";\r\nimport axios from \"axios\"\r\nimport PatientLayout from \"../../layout/PatientLayout\";\r\n\r\nexport default class PatientProfilePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'firstName' : '',\r\n            'lastName' : '',\r\n            'email' : '',\r\n            'address' : '',\r\n            'town' : '',\r\n            'country' : '',\r\n            'phoneNumber' : '',\r\n            'oldPass' : '',\r\n            'newPass' : '',\r\n            'repPass' : '',\r\n            'allergies' : [],\r\n            'editMode' : false,\r\n            'saveDisabled' : false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        await axios\r\n            .get('http://localhost:8080/api/patients/1')\r\n            .then(res => {\r\n                let patient = res.data;\r\n                console.log(patient)\r\n                this.setState({\r\n                    'id' : patient.id,\r\n                    'firstName' : patient.firstName,\r\n                    'lastName' : patient.lastName,\r\n                    'email' : patient.credentials.email,\r\n                    'password' : patient.credentials.password,\r\n                    'penaltyCount' : patient.penaltyCount,\r\n                    'userType' : patient.userType,\r\n                    'editMode' : false,\r\n                    'changePasswordMode' : false,\r\n                    'address' : patient.contact.address.street,\r\n                    'town' : patient.contact.address.town,\r\n                    'country' : patient.contact.address.country,\r\n                    'phoneNumber' : patient.contact.phoneNumber\r\n                })\r\n            });\r\n\r\n        await axios\r\n            .get('http://localhost:8080/api/patients/allergies/1')\r\n            .then(res => {\r\n                this.setState({\r\n                    'allergies' : res.data\r\n                })\r\n            });\r\n\r\n        this.createBackupUser();\r\n    }\r\n\r\n    createBackupUser = () => {\r\n        this.user = {\r\n            'firstName' : this.state.firstName,\r\n            'lastName' : this.state.lastName,\r\n            'email' : this.state.email,\r\n            'address' : this.state.address,\r\n            'town' : this.state.town,\r\n            'country' : this.state.country,\r\n            'phoneNumber' : this.state.phoneNumber,\r\n            'allergies' : [...this.state.allergies]\r\n        }\r\n\r\n        this.setState({\r\n            'editMode' : false,\r\n            'changePasswordMode' : false\r\n        })\r\n    }\r\n\r\n    activateUpdateMode = () => {\r\n        this.resetData();\r\n        this.setState({\r\n            editMode : !this.state.editMode,\r\n            changePasswordMode : false\r\n        })\r\n    }\r\n\r\n    activateChangePasswordMode = () => {\r\n        this.setState({\r\n            'saveDisabled' : !this.state.changePasswordMode,\r\n            'changePasswordMode' : !this.state.changePasswordMode,\r\n            'oldPass' : '',\r\n            'newPass' : '',\r\n            'repPass' : ''\r\n        })\r\n    }\r\n\r\n    changePass = () => {\r\n        axios\r\n        .put('http://localhost:8080/api/patients/pass', {\r\n            'userId' : this.state.id,\r\n            'oldPassword' : this.state.oldPass,\r\n            'newPassword' : this.state.newPass,\r\n            'repeatedPassword' : this.state.repPass\r\n        })\r\n        .then(res => {\r\n            this.setState({\r\n                'password' : this.state.newPass\r\n            })\r\n        })\r\n        .catch(e => alert('Nisam pijana i nece moci!!!'));\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        this.setState({\r\n            [target.name] : target.value,\r\n        })\r\n    }\r\n\r\n    resetData = () => {\r\n        this.setState({\r\n            'firstName' : this.user.firstName,\r\n            'lastName' : this.user.lastName,\r\n            'address' : this.user.address,\r\n            'town' : this.user.town,\r\n            'country' : this.user.country,\r\n            'phoneNumber' : this.user.phoneNumber,\r\n            'allergies' : this.user.allergies\r\n        })\r\n    }\r\n\r\n    disableSave = (disable) => {\r\n        this.setState({\r\n            'saveDisabled' : disable\r\n        })\r\n    }\r\n\r\n    addAllergy = (allergy) => {\r\n        if(!this.state.allergies.map(a => a.id).includes(allergy.id))\r\n            this.setState({\r\n                'allergies' : [...this.state.allergies, allergy]\r\n            })\r\n    }\r\n\r\n    removeAllergy = (allergy) => {\r\n        this.setState({\r\n            'allergies' : [...this.state.allergies.filter(a => a.id != allergy)]\r\n        })\r\n    }\r\n\r\n    save = () => {\r\n        axios\r\n        .put('http://localhost:8080/api/patients', {\r\n            'id' : this.state.id,\r\n            'firstName' : this.state.firstName,\r\n            'lastName' : this.state.lastName,\r\n            'userType' : this.state.userType,\r\n            'allergies' : this.state.allergies,\r\n            'credentials' : {\r\n                'email' : this.state.email,\r\n                'password' : this.state.password\r\n            },\r\n            'penaltyCount' : this.state.penaltyCount,\r\n            'contact' : {\r\n                'phoneNumber' : this.state.phoneNumber,\r\n                'address' : {\r\n                    'street' : this.state.address,\r\n                    'town' : this.state.town,\r\n                    'country' : this.state.country\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            if(this.state.changePasswordMode)\r\n                this.changePass();\r\n            this.createBackupUser();\r\n        });\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        const {oldPass, newPass, repPass} = this.state;\r\n        const passwords = [oldPass, newPass, repPass]\r\n\r\n        return (\r\n            <PatientLayout>\r\n                <Row className=\"pt-5\">\r\n                    <Col xs={2}>\r\n                        <Nav defaultActiveKey=\"/home\" className=\"flex-column\">\r\n                            {!this.state.editMode\r\n                                ? <Button variant=\"dark\" onClick={this.activateUpdateMode}>Edit</Button>\r\n                                : <Button variant=\"outline-secondary\" onClick={this.activateUpdateMode}>Cancel</Button>\r\n                            }\r\n                            {this.state.editMode && <Button variant=\"primary mt-2\"\r\n                                                            onClick={this.activateChangePasswordMode}>\r\n                                Change Password</Button>}\r\n                            {this.state.editMode && <Button variant=\"success mt-2\" \r\n                            disabled={this.state.saveDisabled} onClick={this.save}>Save</Button>}\r\n                        </Nav>\r\n                    </Col>\r\n                    <Col>\r\n                        <UserInfo user={this.state} edit={this.state.editMode} onChange={this.handleInputChange}/>\r\n                        <h2 className=\"pt-4 pb-3\">Allergies</h2>\r\n                        {this.state.editMode && <AddAllergy addAllergy={this.addAllergy}/>}\r\n                        <AllergyPatientListing edit={this.state.editMode}\r\n                            allergies={this.state.allergies} removeAllergy={this.removeAllergy}/>\r\n                        {this.state.changePasswordMode &&\r\n                        <ChangePassword pass={passwords} onChange={this.handleInputChange} disable={this.disableSave}/>}\r\n                    </Col>\r\n                </Row>\r\n            </PatientLayout>\r\n        );\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\patient\\PatientHomePage.jsx",["366"],"import React from 'react'\r\nimport PatientLayout from '../../layout/PatientLayout'\r\n\r\nclass PatientHomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <PatientLayout>\r\n                Lepo\r\n            </PatientLayout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PatientHomePage","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\patient\\PatientCounselScheduling.jsx",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\ScheduleCounsel.js",["367"],"import React from 'react'\r\nimport {Accordion, Card, Col, ListGroup, Row} from \"react-bootstrap\";\r\n\r\nexport default class ScheduleCounsel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const pharmacies = this.props.data.map((pharmacy, index) => {\r\n            const address = pharmacy.address.street + ', ' + pharmacy.address.town + ', ' + pharmacy.address.country\r\n            const pharmacists = this.props.pharmacists.filter(p => p.workingHours.pharmacy.id === pharmacy.id)\r\n                .map((pharmacist, index) => {\r\n                return(\r\n                    <ListGroup.Item key={index}>{pharmacist.firstName + ' ' + pharmacist.lastName}</ListGroup.Item>\r\n                )\r\n            })\r\n            return (\r\n                <Col>\r\n                <Accordion defaultActiveKey=\"1\" className={'mt-3 mb-3'}>\r\n                    <Card bg={'dark'} text={'white'}>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                            <Row className={'pl-3'}><b>{pharmacy.name}</b></Row>\r\n                            <Row className={'pl-3'}> {address} </Row>\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                            <Card text={'dark'}>\r\n                            <Card.Body>\r\n                                <ListGroup>\r\n                                    {pharmacists}\r\n                                </ListGroup>\r\n                            </Card.Body>\r\n                            </Card>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                </Accordion>\r\n                </Col>\r\n            )\r\n        })\r\n        return (\r\n            <Row className={'mt-4'}>\r\n                {pharmacies}\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\DateTime.jsx",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\ISAdminHomePage.js",["368","369","370","371","372","373","374"],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\Dermatologist\\DermatologistHomePage.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\Pharmacist\\PharmacistHomePage.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\Pharmacist\\PharmacistProfilePage.js",["375"],"import React from \"react\";\r\nimport {Container, Row, Col, Nav, Button} from \"react-bootstrap\";\r\nimport UserInfo from \"../../components/UserInfo\";\r\nimport ChangePassword from \"../../components/ChangePassword\";\r\nimport axios from \"axios\";\r\n\r\n//TODO Za sada namerno postoje dve iste stranice za profil dermatologa i farmaceuta, u toku rada uvideti da li je to zaista potrebno\r\nexport default class PharmacistProfilePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'firstName' : '',\r\n            'lastName' : '',\r\n            'email' : '',\r\n            'address' : '',\r\n            'town' : '',\r\n            'country' : '',\r\n            'phoneNumber' : '',\r\n            'longitude' : '',\r\n            'latitude' : '',\r\n            'oldPass' : '',\r\n            'newPass' : '',\r\n            'repPass' : '',\r\n            'editMode' : false,\r\n            'saveDisabled' : false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        await axios\r\n            .get('http://localhost:8080/api/pharmacist/1')\r\n            .then(res => {\r\n                let patient = res.data;\r\n                console.log(patient)\r\n                this.setState({\r\n                    'id' : patient.id,\r\n                    'firstName' : patient.firstName,\r\n                    'lastName' : patient.lastName,\r\n                    'email' : patient.credentials.email,\r\n                    'password' : patient.credentials.password,\r\n                    'userType' : patient.userType,\r\n                    'editMode' : false,\r\n                    'changePasswordMode' : false,\r\n                    'address' : patient.contact.address.street,\r\n                    'longitude' : patient.contact.address.longitude,\r\n                    'latitude' : patient.contact.address.latitude,\r\n                    'town' : patient.contact.address.town,\r\n                    'country' : patient.contact.address.country,\r\n                    'phoneNumber' : patient.contact.phoneNumber\r\n                })\r\n            });\r\n\r\n        this.createBackupUser();\r\n    }\r\n\r\n    createBackupUser = () => {\r\n        this.user = {\r\n            'firstName' : this.state.firstName,\r\n            'lastName' : this.state.lastName,\r\n            'email' : this.state.email,\r\n            'address' : this.state.address,\r\n            'town' : this.state.town,\r\n            'country' : this.state.country,\r\n            'phoneNumber' : this.state.phoneNumber\r\n        }\r\n\r\n        this.setState({\r\n            'editMode' : false,\r\n            'changePasswordMode' : false\r\n        })\r\n    }\r\n\r\n    activateUpdateMode = () => {\r\n        this.resetData();\r\n        this.setState({\r\n            editMode : !this.state.editMode,\r\n            changePasswordMode : false\r\n        })\r\n    }\r\n\r\n    activateChangePasswordMode = () => {\r\n        this.setState({\r\n            'saveDisabled' : !this.state.changePasswordMode,\r\n            'changePasswordMode' : !this.state.changePasswordMode,\r\n            'oldPass' : '',\r\n            'newPass' : '',\r\n            'repPass' : ''\r\n        })\r\n    }\r\n\r\n    changePass = () => {\r\n        axios\r\n            .put('http://localhost:8080/api/pharmacist/pass', {\r\n                'userId' : this.state.id,\r\n                'oldPassword' : this.state.oldPass,\r\n                'newPassword' : this.state.newPass,\r\n                'repeatedPassword' : this.state.repPass\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    'password' : this.state.newPass\r\n                })\r\n            })\r\n            .catch(e => alert('Nisam pijana i nece moci!!!'));\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        this.setState({\r\n            [target.name] : target.value,\r\n        })\r\n    }\r\n\r\n    resetData = () => {\r\n        this.setState({\r\n            'firstName' : this.user.firstName,\r\n            'lastName' : this.user.lastName,\r\n            'address' : this.user.address,\r\n            'town' : this.user.town,\r\n            'country' : this.user.country,\r\n            'phoneNumber' : this.user.phoneNumber\r\n        })\r\n    }\r\n\r\n    disableSave = (disable) => {\r\n        this.setState({\r\n            'saveDisabled' : disable\r\n        })\r\n    }\r\n\r\n\r\n    save = () => {\r\n        axios\r\n            .put('http://localhost:8080/api/pharmacist', {\r\n                'id' : this.state.id,\r\n                'firstName' : this.state.firstName,\r\n                'lastName' : this.state.lastName,\r\n                'userType' : this.state.userType,\r\n                'credentials' : {\r\n                    'email' : this.state.email,\r\n                    'password' : this.state.password\r\n                },\r\n                'penaltyCount' : this.state.penaltyCount,\r\n                'contact' : {\r\n                    'phoneNumber' : this.state.phoneNumber,\r\n                    'address' : {\r\n                        'street' : this.state.address,\r\n                        'town' : this.state.town,\r\n                        'country' : this.state.country,\r\n                        'latitude' : this.state.latitude,\r\n                        'longitude' : this.state.longitude\r\n                    }\r\n                }\r\n            })\r\n            .then(res => {\r\n                if(this.state.changePasswordMode)\r\n                    this.changePass();\r\n                this.createBackupUser();\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {oldPass, newPass, repPass} = this.state;\r\n        const passwords = [oldPass, newPass, repPass]\r\n\r\n        return (\r\n            <Row className=\"pt-5\">\r\n                <Col xs={2}>\r\n                    <Nav defaultActiveKey=\"/home\" className=\"flex-column\">\r\n                        {!this.state.editMode\r\n                            ? <Button variant=\"dark\" onClick={this.activateUpdateMode}>Edit</Button>\r\n                            : <Button variant=\"outline-secondary\" onClick={this.activateUpdateMode}>Cancel</Button>\r\n                        }\r\n                        {this.state.editMode && <Button variant=\"primary mt-2\"\r\n                                                        onClick={this.activateChangePasswordMode}>\r\n                            Change Password</Button>}\r\n                        {this.state.editMode && <Button variant=\"success mt-2\"\r\n                                                        disabled={this.state.saveDisabled} onClick={this.save}>Save</Button>}\r\n                    </Nav>\r\n                </Col>\r\n                <Col>\r\n                    <UserInfo user={this.state} edit={this.state.editMode} onChange={this.handleInputChange}/>\r\n                    {this.state.changePasswordMode &&\r\n                    <ChangePassword pass={passwords} onChange={this.handleInputChange} disable={this.disableSave}/>}\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\Pharmacist\\PharmacistWorkingHours.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\DermatologistRegistration.js",["376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395"],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\Dermatologist\\DermatologistAppointmentStart.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\PharmacyRegistration.js",["396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413"],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\LoyaltyProgram.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\Dermatologist\\DermatologistWorkingHours.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\Dermatologist\\DermatologistsProfilePage.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\SupplierRegistration.js",["414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432"],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\PharmacyAdminRegistration.js",["433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452"],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\Pharmacist\\PharmacistGiveMedicine.js",["453","454"],"import React from \"react\";\r\nimport {Button, Col, FormControl, FormGroup, Row, Table} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nexport default class PharmacistGiveMedicine extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            medicineCode : \"\",\r\n            reservation : \"samo cisto da probam\",\r\n            reservationFound : false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br/>\r\n                <Row>\r\n                    <label style={{fontSize : 20, marginLeft : 55, marginTop : 10}}> Insert medicine code: </label>\r\n                    <FormControl className=\"mt-2 mb-2\" style={{width : 200, marginLeft : 20, marginBottom : 50}} value={this.state.medicineCode} placeholder={\"Insert here...\"} onChange={this.handleInputChange} />\r\n                    <Button onClick={this.getReservation} style={{height : 40, margin : 8}}  type=\"button\" className=\"btn btn-primary\"> Search </Button>\r\n                </Row>\r\n                <hr className=\"mt-2 mb-3\"/>\r\n                {this.state.reservationFound && this.showReservation()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    showReservation = () => {\r\n        return (\r\n            <div>\r\n                <Table style={{\"borderWidth\":\"1px\", 'borderColor':\"#aaaaaa\", 'borderStyle':'solid'}} striped hover>\r\n                    <tbody>\r\n                    <tr>\r\n                        <th>Patient full name</th>\r\n                        <th>Medication</th>\r\n                        <th>Quantity</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>{this.state.reservation.patient.firstName}</td>\r\n                        <td>{this.state.reservation.medicationQuantity.medication.name}</td>\r\n                        <td>{this.state.reservation.medicationQuantity.quantity}</td>\r\n                        <td> <Button onClick={this.giveMedicine}> Give medication </Button> </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    giveMedicine = () => {\r\n        axios\r\n            .put( process.env.REACT_APP_BACKEND_ADDRESS ?? 'http://localhost:8080/api/medicationReservation/giveMedicine', {\r\n                id : this.state.reservation.id,\r\n                patient : this.state.reservation.patient,\r\n                status : this.state.reservation.status,\r\n                pickUpDate : this.state.reservation.pickUpDate,\r\n                medicationQuantity : this.state.reservation.medicationQuantity\r\n            })\r\n            .then(res => {\r\n                    this.setState({\r\n                        reservationFound : false,\r\n                        reservation : \"\"\r\n                    });\r\n                    alert(\"Successful medication approval!\")\r\n                }\r\n            )\r\n            .catch(e => {\r\n                    alert(\"Reservation is not valid!\")\r\n                }\r\n            );\r\n    }\r\n\r\n\r\n    handleInputChange = (event) => {\r\n        this.setState({\r\n            medicineCode : event.target.value\r\n        })\r\n    }\r\n\r\n    getReservation = () => {\r\n        axios\r\n            .post( process.env.REACT_APP_BACKEND_ADDRESS ?? 'http://localhost:8080/api/medicationReservation/getMedicationReservation', {\r\n                pharmacistId : \"2\",\r\n                medicationId : this.state.medicineCode\r\n            })\r\n            .then(res => {\r\n               let reservation = res.data;\r\n               if(res.data.id !== undefined) {\r\n                   this.setState({\r\n                       reservation: reservation,\r\n                       reservationFound: true\r\n                   })\r\n               }\r\n            })\r\n            .catch(e => {\r\n                    this.setState({\r\n                        reservationFound: false\r\n                    });\r\n                    alert(\"Reservation is not valid!\")\r\n                }\r\n            );\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\Pharmacist\\PharmacistConsultationStart.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\AddNewMedication.js",["455","456","457","458","459","460","461","462","463"],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\Complaints.js",[],{"ruleId":"464","replacedBy":"465"},{"ruleId":"466","replacedBy":"467"},{"ruleId":"468","severity":1,"message":"469","line":10,"column":8,"nodeType":"470","messageId":"471","endLine":10,"endColumn":29},{"ruleId":"468","severity":1,"message":"472","line":12,"column":8,"nodeType":"470","messageId":"471","endLine":12,"endColumn":30},{"ruleId":"468","severity":1,"message":"473","line":2,"column":9,"nodeType":"470","messageId":"471","endLine":2,"endColumn":15},{"ruleId":"474","severity":1,"message":"475","line":8,"column":5,"nodeType":"476","messageId":"477","endLine":10,"endColumn":6},{"ruleId":"478","severity":1,"message":"479","line":88,"column":25,"nodeType":"480","endLine":88,"endColumn":105},{"ruleId":"478","severity":1,"message":"479","line":91,"column":25,"nodeType":"480","endLine":91,"endColumn":110},{"ruleId":"478","severity":1,"message":"479","line":94,"column":25,"nodeType":"480","endLine":94,"endColumn":105},{"ruleId":"478","severity":1,"message":"479","line":97,"column":25,"nodeType":"480","endLine":97,"endColumn":201},{"ruleId":"478","severity":1,"message":"479","line":100,"column":25,"nodeType":"480","endLine":100,"endColumn":104},{"ruleId":"478","severity":1,"message":"479","line":103,"column":25,"nodeType":"480","endLine":103,"endColumn":201},{"ruleId":"478","severity":1,"message":"479","line":106,"column":25,"nodeType":"480","endLine":106,"endColumn":202},{"ruleId":"468","severity":1,"message":"481","line":2,"column":17,"nodeType":"470","messageId":"471","endLine":2,"endColumn":20},{"ruleId":"468","severity":1,"message":"482","line":2,"column":22,"nodeType":"470","messageId":"471","endLine":2,"endColumn":26},{"ruleId":"468","severity":1,"message":"483","line":2,"column":28,"nodeType":"470","messageId":"471","endLine":2,"endColumn":33},{"ruleId":"468","severity":1,"message":"484","line":2,"column":35,"nodeType":"470","messageId":"471","endLine":2,"endColumn":40},{"ruleId":"468","severity":1,"message":"485","line":2,"column":42,"nodeType":"470","messageId":"471","endLine":2,"endColumn":46},{"ruleId":"468","severity":1,"message":"486","line":2,"column":61,"nodeType":"470","messageId":"471","endLine":2,"endColumn":64},{"ruleId":"468","severity":1,"message":"487","line":146,"column":15,"nodeType":"470","messageId":"471","endLine":146,"endColumn":19},{"ruleId":"488","severity":1,"message":"489","line":204,"column":73,"nodeType":"490","messageId":"491","endLine":204,"endColumn":74,"suggestions":"492"},{"ruleId":"468","severity":1,"message":"493","line":2,"column":17,"nodeType":"470","messageId":"471","endLine":2,"endColumn":21},{"ruleId":"468","severity":1,"message":"494","line":2,"column":9,"nodeType":"470","messageId":"471","endLine":2,"endColumn":18},{"ruleId":"468","severity":1,"message":"486","line":2,"column":20,"nodeType":"470","messageId":"471","endLine":2,"endColumn":23},{"ruleId":"468","severity":1,"message":"481","line":2,"column":25,"nodeType":"470","messageId":"471","endLine":2,"endColumn":28},{"ruleId":"468","severity":1,"message":"495","line":2,"column":17,"nodeType":"470","messageId":"471","endLine":2,"endColumn":28},{"ruleId":"468","severity":1,"message":"481","line":2,"column":17,"nodeType":"470","messageId":"471","endLine":2,"endColumn":20},{"ruleId":"468","severity":1,"message":"481","line":2,"column":9,"nodeType":"470","messageId":"471","endLine":2,"endColumn":12},{"ruleId":"468","severity":1,"message":"495","line":2,"column":23,"nodeType":"470","messageId":"471","endLine":2,"endColumn":34},{"ruleId":"468","severity":1,"message":"496","line":2,"column":43,"nodeType":"470","messageId":"471","endLine":2,"endColumn":49},{"ruleId":"474","severity":1,"message":"475","line":4,"column":5,"nodeType":"476","messageId":"477","endLine":6,"endColumn":6},{"ruleId":"468","severity":1,"message":"497","line":3,"column":8,"nodeType":"470","messageId":"471","endLine":3,"endColumn":20},{"ruleId":"468","severity":1,"message":"498","line":214,"column":13,"nodeType":"470","messageId":"471","endLine":214,"endColumn":19},{"ruleId":"468","severity":1,"message":"486","line":6,"column":22,"nodeType":"470","messageId":"471","endLine":6,"endColumn":25},{"ruleId":"468","severity":1,"message":"499","line":7,"column":8,"nodeType":"470","messageId":"471","endLine":7,"endColumn":14},{"ruleId":"468","severity":1,"message":"500","line":9,"column":8,"nodeType":"470","messageId":"471","endLine":9,"endColumn":20},{"ruleId":"468","severity":1,"message":"501","line":34,"column":13,"nodeType":"470","messageId":"471","endLine":34,"endColumn":27},{"ruleId":"468","severity":1,"message":"502","line":46,"column":13,"nodeType":"470","messageId":"471","endLine":46,"endColumn":24},{"ruleId":"468","severity":1,"message":"503","line":76,"column":15,"nodeType":"470","messageId":"471","endLine":76,"endColumn":21},{"ruleId":"468","severity":1,"message":"473","line":2,"column":9,"nodeType":"470","messageId":"471","endLine":2,"endColumn":15},{"ruleId":"468","severity":1,"message":"483","line":2,"column":17,"nodeType":"470","messageId":"471","endLine":2,"endColumn":22},{"ruleId":"468","severity":1,"message":"495","line":2,"column":24,"nodeType":"470","messageId":"471","endLine":2,"endColumn":35},{"ruleId":"468","severity":1,"message":"496","line":2,"column":37,"nodeType":"470","messageId":"471","endLine":2,"endColumn":43},{"ruleId":"468","severity":1,"message":"504","line":3,"column":9,"nodeType":"470","messageId":"471","endLine":3,"endColumn":21},{"ruleId":"468","severity":1,"message":"498","line":157,"column":13,"nodeType":"470","messageId":"471","endLine":157,"endColumn":19},{"ruleId":"468","severity":1,"message":"473","line":2,"column":9,"nodeType":"470","messageId":"471","endLine":2,"endColumn":15},{"ruleId":"468","severity":1,"message":"473","line":2,"column":9,"nodeType":"470","messageId":"471","endLine":2,"endColumn":15},{"ruleId":"468","severity":1,"message":"505","line":5,"column":8,"nodeType":"470","messageId":"471","endLine":5,"endColumn":29},{"ruleId":"468","severity":1,"message":"506","line":2,"column":25,"nodeType":"470","messageId":"471","endLine":2,"endColumn":30},{"ruleId":"468","severity":1,"message":"507","line":2,"column":29,"nodeType":"470","messageId":"471","endLine":2,"endColumn":40},{"ruleId":"474","severity":1,"message":"475","line":6,"column":5,"nodeType":"476","messageId":"477","endLine":8,"endColumn":6},{"ruleId":"468","severity":1,"message":"481","line":2,"column":17,"nodeType":"470","messageId":"471","endLine":2,"endColumn":20},{"ruleId":"468","severity":1,"message":"482","line":2,"column":22,"nodeType":"470","messageId":"471","endLine":2,"endColumn":26},{"ruleId":"468","severity":1,"message":"483","line":2,"column":28,"nodeType":"470","messageId":"471","endLine":2,"endColumn":33},{"ruleId":"468","severity":1,"message":"484","line":2,"column":35,"nodeType":"470","messageId":"471","endLine":2,"endColumn":40},{"ruleId":"468","severity":1,"message":"485","line":2,"column":42,"nodeType":"470","messageId":"471","endLine":2,"endColumn":46},{"ruleId":"468","severity":1,"message":"486","line":2,"column":61,"nodeType":"470","messageId":"471","endLine":2,"endColumn":64},{"ruleId":"468","severity":1,"message":"487","line":185,"column":15,"nodeType":"470","messageId":"471","endLine":185,"endColumn":19},{"ruleId":"488","severity":1,"message":"489","line":281,"column":73,"nodeType":"490","messageId":"491","endLine":281,"endColumn":74,"suggestions":"508"},{"ruleId":"468","severity":1,"message":"494","line":2,"column":41,"nodeType":"470","messageId":"471","endLine":2,"endColumn":50},{"ruleId":"509","severity":1,"message":"510","line":55,"column":6,"nodeType":"511","endLine":55,"endColumn":8,"suggestions":"512"},{"ruleId":"474","severity":1,"message":"475","line":6,"column":5,"nodeType":"476","messageId":"477","endLine":8,"endColumn":6},{"ruleId":"513","severity":1,"message":"514","line":18,"column":56,"nodeType":"490","messageId":"515","endLine":18,"endColumn":70},{"ruleId":"513","severity":1,"message":"514","line":19,"column":56,"nodeType":"490","messageId":"515","endLine":19,"endColumn":70},{"ruleId":"513","severity":1,"message":"514","line":22,"column":56,"nodeType":"490","messageId":"515","endLine":22,"endColumn":70},{"ruleId":"513","severity":1,"message":"514","line":23,"column":56,"nodeType":"490","messageId":"515","endLine":23,"endColumn":70},{"ruleId":"513","severity":1,"message":"514","line":24,"column":56,"nodeType":"490","messageId":"515","endLine":24,"endColumn":70},{"ruleId":"513","severity":1,"message":"514","line":27,"column":56,"nodeType":"490","messageId":"515","endLine":27,"endColumn":70},{"ruleId":"513","severity":1,"message":"514","line":28,"column":56,"nodeType":"490","messageId":"515","endLine":28,"endColumn":70},{"ruleId":"513","severity":1,"message":"514","line":31,"column":56,"nodeType":"490","messageId":"515","endLine":31,"endColumn":70},{"ruleId":"513","severity":1,"message":"514","line":32,"column":56,"nodeType":"490","messageId":"515","endLine":32,"endColumn":70},{"ruleId":"513","severity":1,"message":"514","line":37,"column":56,"nodeType":"490","messageId":"515","endLine":37,"endColumn":70},{"ruleId":"513","severity":1,"message":"514","line":38,"column":56,"nodeType":"490","messageId":"515","endLine":38,"endColumn":70},{"ruleId":"468","severity":1,"message":"494","line":2,"column":14,"nodeType":"470","messageId":"471","endLine":2,"endColumn":23},{"ruleId":"468","severity":1,"message":"516","line":2,"column":43,"nodeType":"470","messageId":"471","endLine":2,"endColumn":48},{"ruleId":"468","severity":1,"message":"517","line":6,"column":8,"nodeType":"470","messageId":"471","endLine":6,"endColumn":21},{"ruleId":"474","severity":1,"message":"475","line":6,"column":5,"nodeType":"476","messageId":"477","endLine":8,"endColumn":6},{"ruleId":"474","severity":1,"message":"475","line":6,"column":5,"nodeType":"476","messageId":"477","endLine":8,"endColumn":6},{"ruleId":"468","severity":1,"message":"495","line":2,"column":33,"nodeType":"470","messageId":"471","endLine":2,"endColumn":44},{"ruleId":"468","severity":1,"message":"494","line":2,"column":14,"nodeType":"470","messageId":"471","endLine":2,"endColumn":23},{"ruleId":"468","severity":1,"message":"516","line":2,"column":43,"nodeType":"470","messageId":"471","endLine":2,"endColumn":48},{"ruleId":"518","severity":1,"message":"519","line":151,"column":69,"nodeType":"520","messageId":"521","endLine":151,"endColumn":71},{"ruleId":"474","severity":1,"message":"475","line":5,"column":5,"nodeType":"476","messageId":"477","endLine":7,"endColumn":6},{"ruleId":"474","severity":1,"message":"475","line":5,"column":5,"nodeType":"476","messageId":"477","endLine":7,"endColumn":6},{"ruleId":"478","severity":1,"message":"479","line":39,"column":25,"nodeType":"480","endLine":39,"endColumn":109},{"ruleId":"478","severity":1,"message":"479","line":42,"column":25,"nodeType":"480","endLine":42,"endColumn":107},{"ruleId":"478","severity":1,"message":"479","line":45,"column":25,"nodeType":"480","endLine":45,"endColumn":102},{"ruleId":"478","severity":1,"message":"479","line":48,"column":25,"nodeType":"480","endLine":48,"endColumn":104},{"ruleId":"478","severity":1,"message":"479","line":51,"column":25,"nodeType":"480","endLine":51,"endColumn":103},{"ruleId":"478","severity":1,"message":"479","line":54,"column":25,"nodeType":"480","endLine":54,"endColumn":101},{"ruleId":"478","severity":1,"message":"479","line":57,"column":25,"nodeType":"480","endLine":57,"endColumn":107},{"ruleId":"468","severity":1,"message":"494","line":2,"column":9,"nodeType":"470","messageId":"471","endLine":2,"endColumn":18},{"ruleId":"468","severity":1,"message":"494","line":2,"column":17,"nodeType":"470","messageId":"471","endLine":2,"endColumn":26},{"ruleId":"518","severity":1,"message":"522","line":93,"column":34,"nodeType":"520","messageId":"521","endLine":93,"endColumn":36},{"ruleId":"518","severity":1,"message":"522","line":95,"column":41,"nodeType":"520","messageId":"521","endLine":95,"endColumn":43},{"ruleId":"518","severity":1,"message":"522","line":97,"column":44,"nodeType":"520","messageId":"521","endLine":97,"endColumn":46},{"ruleId":"518","severity":1,"message":"522","line":99,"column":44,"nodeType":"520","messageId":"521","endLine":99,"endColumn":46},{"ruleId":"468","severity":1,"message":"523","line":103,"column":9,"nodeType":"470","messageId":"471","endLine":103,"endColumn":24},{"ruleId":"518","severity":1,"message":"522","line":105,"column":20,"nodeType":"520","messageId":"521","endLine":105,"endColumn":22},{"ruleId":"518","severity":1,"message":"522","line":105,"column":43,"nodeType":"520","messageId":"521","endLine":105,"endColumn":45},{"ruleId":"518","severity":1,"message":"522","line":105,"column":57,"nodeType":"520","messageId":"521","endLine":105,"endColumn":59},{"ruleId":"518","severity":1,"message":"522","line":105,"column":78,"nodeType":"520","messageId":"521","endLine":105,"endColumn":80},{"ruleId":"518","severity":1,"message":"522","line":105,"column":95,"nodeType":"520","messageId":"521","endLine":105,"endColumn":97},{"ruleId":"518","severity":1,"message":"522","line":105,"column":119,"nodeType":"520","messageId":"521","endLine":105,"endColumn":121},{"ruleId":"524","severity":1,"message":"525","line":110,"column":13,"nodeType":"526","endLine":110,"endColumn":23},{"ruleId":"524","severity":1,"message":"525","line":111,"column":13,"nodeType":"526","endLine":111,"endColumn":23},{"ruleId":"518","severity":1,"message":"522","line":112,"column":24,"nodeType":"520","messageId":"521","endLine":112,"endColumn":26},{"ruleId":"524","severity":1,"message":"525","line":113,"column":17,"nodeType":"526","endLine":113,"endColumn":27},{"ruleId":"524","severity":1,"message":"525","line":115,"column":17,"nodeType":"526","endLine":115,"endColumn":27},{"ruleId":"518","severity":1,"message":"522","line":122,"column":18,"nodeType":"520","messageId":"521","endLine":122,"endColumn":20},{"ruleId":"468","severity":1,"message":"527","line":223,"column":15,"nodeType":"470","messageId":"471","endLine":223,"endColumn":28},{"ruleId":"488","severity":1,"message":"489","line":275,"column":73,"nodeType":"490","messageId":"491","endLine":275,"endColumn":74,"suggestions":"528"},{"ruleId":"518","severity":1,"message":"522","line":111,"column":34,"nodeType":"520","messageId":"521","endLine":111,"endColumn":36},{"ruleId":"518","severity":1,"message":"522","line":113,"column":41,"nodeType":"520","messageId":"521","endLine":113,"endColumn":43},{"ruleId":"518","severity":1,"message":"522","line":115,"column":44,"nodeType":"520","messageId":"521","endLine":115,"endColumn":46},{"ruleId":"518","severity":1,"message":"522","line":117,"column":44,"nodeType":"520","messageId":"521","endLine":117,"endColumn":46},{"ruleId":"468","severity":1,"message":"523","line":121,"column":9,"nodeType":"470","messageId":"471","endLine":121,"endColumn":24},{"ruleId":"518","severity":1,"message":"522","line":123,"column":20,"nodeType":"520","messageId":"521","endLine":123,"endColumn":22},{"ruleId":"518","severity":1,"message":"522","line":123,"column":43,"nodeType":"520","messageId":"521","endLine":123,"endColumn":45},{"ruleId":"518","severity":1,"message":"522","line":123,"column":57,"nodeType":"520","messageId":"521","endLine":123,"endColumn":59},{"ruleId":"518","severity":1,"message":"522","line":123,"column":78,"nodeType":"520","messageId":"521","endLine":123,"endColumn":80},{"ruleId":"518","severity":1,"message":"522","line":123,"column":95,"nodeType":"520","messageId":"521","endLine":123,"endColumn":97},{"ruleId":"518","severity":1,"message":"522","line":123,"column":119,"nodeType":"520","messageId":"521","endLine":123,"endColumn":121},{"ruleId":"524","severity":1,"message":"525","line":128,"column":13,"nodeType":"526","endLine":128,"endColumn":23},{"ruleId":"524","severity":1,"message":"525","line":129,"column":13,"nodeType":"526","endLine":129,"endColumn":23},{"ruleId":"518","severity":1,"message":"522","line":130,"column":24,"nodeType":"520","messageId":"521","endLine":130,"endColumn":26},{"ruleId":"524","severity":1,"message":"525","line":131,"column":17,"nodeType":"526","endLine":131,"endColumn":27},{"ruleId":"524","severity":1,"message":"525","line":133,"column":17,"nodeType":"526","endLine":133,"endColumn":27},{"ruleId":"518","severity":1,"message":"522","line":144,"column":18,"nodeType":"520","messageId":"521","endLine":144,"endColumn":20},{"ruleId":"468","severity":1,"message":"529","line":173,"column":15,"nodeType":"470","messageId":"471","endLine":173,"endColumn":23},{"ruleId":"518","severity":1,"message":"522","line":91,"column":34,"nodeType":"520","messageId":"521","endLine":91,"endColumn":36},{"ruleId":"518","severity":1,"message":"522","line":93,"column":41,"nodeType":"520","messageId":"521","endLine":93,"endColumn":43},{"ruleId":"518","severity":1,"message":"522","line":95,"column":44,"nodeType":"520","messageId":"521","endLine":95,"endColumn":46},{"ruleId":"518","severity":1,"message":"522","line":97,"column":44,"nodeType":"520","messageId":"521","endLine":97,"endColumn":46},{"ruleId":"468","severity":1,"message":"523","line":101,"column":9,"nodeType":"470","messageId":"471","endLine":101,"endColumn":24},{"ruleId":"518","severity":1,"message":"522","line":103,"column":20,"nodeType":"520","messageId":"521","endLine":103,"endColumn":22},{"ruleId":"518","severity":1,"message":"522","line":103,"column":43,"nodeType":"520","messageId":"521","endLine":103,"endColumn":45},{"ruleId":"518","severity":1,"message":"522","line":103,"column":57,"nodeType":"520","messageId":"521","endLine":103,"endColumn":59},{"ruleId":"518","severity":1,"message":"522","line":103,"column":78,"nodeType":"520","messageId":"521","endLine":103,"endColumn":80},{"ruleId":"518","severity":1,"message":"522","line":103,"column":95,"nodeType":"520","messageId":"521","endLine":103,"endColumn":97},{"ruleId":"518","severity":1,"message":"522","line":103,"column":119,"nodeType":"520","messageId":"521","endLine":103,"endColumn":121},{"ruleId":"524","severity":1,"message":"525","line":108,"column":13,"nodeType":"526","endLine":108,"endColumn":23},{"ruleId":"524","severity":1,"message":"525","line":109,"column":13,"nodeType":"526","endLine":109,"endColumn":23},{"ruleId":"518","severity":1,"message":"522","line":110,"column":24,"nodeType":"520","messageId":"521","endLine":110,"endColumn":26},{"ruleId":"524","severity":1,"message":"525","line":111,"column":17,"nodeType":"526","endLine":111,"endColumn":27},{"ruleId":"524","severity":1,"message":"525","line":113,"column":17,"nodeType":"526","endLine":113,"endColumn":27},{"ruleId":"518","severity":1,"message":"522","line":120,"column":18,"nodeType":"520","messageId":"521","endLine":120,"endColumn":20},{"ruleId":"468","severity":1,"message":"530","line":223,"column":15,"nodeType":"470","messageId":"471","endLine":223,"endColumn":23},{"ruleId":"488","severity":1,"message":"489","line":275,"column":73,"nodeType":"490","messageId":"491","endLine":275,"endColumn":74,"suggestions":"531"},{"ruleId":"468","severity":1,"message":"494","line":2,"column":17,"nodeType":"470","messageId":"471","endLine":2,"endColumn":26},{"ruleId":"518","severity":1,"message":"522","line":94,"column":34,"nodeType":"520","messageId":"521","endLine":94,"endColumn":36},{"ruleId":"518","severity":1,"message":"522","line":96,"column":41,"nodeType":"520","messageId":"521","endLine":96,"endColumn":43},{"ruleId":"518","severity":1,"message":"522","line":98,"column":44,"nodeType":"520","messageId":"521","endLine":98,"endColumn":46},{"ruleId":"518","severity":1,"message":"522","line":100,"column":44,"nodeType":"520","messageId":"521","endLine":100,"endColumn":46},{"ruleId":"468","severity":1,"message":"523","line":104,"column":9,"nodeType":"470","messageId":"471","endLine":104,"endColumn":24},{"ruleId":"518","severity":1,"message":"522","line":106,"column":20,"nodeType":"520","messageId":"521","endLine":106,"endColumn":22},{"ruleId":"518","severity":1,"message":"522","line":106,"column":43,"nodeType":"520","messageId":"521","endLine":106,"endColumn":45},{"ruleId":"518","severity":1,"message":"522","line":106,"column":57,"nodeType":"520","messageId":"521","endLine":106,"endColumn":59},{"ruleId":"518","severity":1,"message":"522","line":106,"column":78,"nodeType":"520","messageId":"521","endLine":106,"endColumn":80},{"ruleId":"518","severity":1,"message":"522","line":106,"column":95,"nodeType":"520","messageId":"521","endLine":106,"endColumn":97},{"ruleId":"518","severity":1,"message":"522","line":106,"column":119,"nodeType":"520","messageId":"521","endLine":106,"endColumn":121},{"ruleId":"524","severity":1,"message":"525","line":111,"column":13,"nodeType":"526","endLine":111,"endColumn":23},{"ruleId":"524","severity":1,"message":"525","line":112,"column":13,"nodeType":"526","endLine":112,"endColumn":23},{"ruleId":"518","severity":1,"message":"522","line":113,"column":24,"nodeType":"520","messageId":"521","endLine":113,"endColumn":26},{"ruleId":"524","severity":1,"message":"525","line":114,"column":17,"nodeType":"526","endLine":114,"endColumn":27},{"ruleId":"524","severity":1,"message":"525","line":116,"column":17,"nodeType":"526","endLine":116,"endColumn":27},{"ruleId":"518","severity":1,"message":"522","line":123,"column":18,"nodeType":"520","messageId":"521","endLine":123,"endColumn":20},{"ruleId":"468","severity":1,"message":"487","line":221,"column":15,"nodeType":"470","messageId":"471","endLine":221,"endColumn":19},{"ruleId":"488","severity":1,"message":"489","line":279,"column":73,"nodeType":"490","messageId":"491","endLine":279,"endColumn":74,"suggestions":"532"},{"ruleId":"468","severity":1,"message":"481","line":2,"column":17,"nodeType":"470","messageId":"471","endLine":2,"endColumn":20},{"ruleId":"468","severity":1,"message":"533","line":2,"column":35,"nodeType":"470","messageId":"471","endLine":2,"endColumn":44},{"ruleId":"468","severity":1,"message":"534","line":2,"column":8,"nodeType":"470","messageId":"471","endLine":2,"endColumn":14},{"ruleId":"468","severity":1,"message":"495","line":3,"column":17,"nodeType":"470","messageId":"471","endLine":3,"endColumn":28},{"ruleId":"518","severity":1,"message":"522","line":56,"column":29,"nodeType":"520","messageId":"521","endLine":56,"endColumn":31},{"ruleId":"518","severity":1,"message":"522","line":58,"column":35,"nodeType":"520","messageId":"521","endLine":58,"endColumn":37},{"ruleId":"518","severity":1,"message":"522","line":60,"column":30,"nodeType":"520","messageId":"521","endLine":60,"endColumn":32},{"ruleId":"468","severity":1,"message":"535","line":71,"column":15,"nodeType":"470","messageId":"471","endLine":71,"endColumn":21},{"ruleId":"518","severity":1,"message":"522","line":75,"column":29,"nodeType":"520","messageId":"521","endLine":75,"endColumn":31},{"ruleId":"518","severity":1,"message":"522","line":77,"column":36,"nodeType":"520","messageId":"521","endLine":77,"endColumn":38},{"ruleId":"468","severity":1,"message":"536","line":100,"column":15,"nodeType":"470","messageId":"471","endLine":100,"endColumn":25},"no-native-reassign",["537"],"no-negated-in-lhs",["538"],"no-unused-vars","'PharmacistProfilePage' is defined but never used.","Identifier","unusedVar","'PharmacistWorkingHours' is defined but never used.","'Button' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Col' is defined but never used.","'Form' is defined but never used.","'Modal' is defined but never used.","'Table' is defined but never used.","'Grid' is defined but never used.","'Row' is defined but never used.","'user' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["539","540"],"'Card' is defined but never used.","'Container' is defined but never used.","'FormControl' is defined but never used.","'Navbar' is defined but never used.","'DropdownItem' is defined but never used.","'isBoss' is assigned a value but never used.","'moment' is defined but never used.","'Registration' is defined but never used.","'dermatologists' is assigned a value but never used.","'pharmacists' is assigned a value but never used.","'format' is assigned a value but never used.","'PharmacyPage' is defined but never used.","'AllergyPatientListing' is defined but never used.","'Badge' is defined but never used.","'NavDropdown' is defined but never used.",["541","542"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["543"],"no-script-url","Script URL is a form of eval.","unexpectedScriptURL","'Toast' is defined but never used.","'PatientLayout' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'completeAddress' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'dermatologist' is assigned a value but never used.",["544","545"],"'pharmacy' is assigned a value but never used.","'supplier' is assigned a value but never used.",["546","547"],["548","549"],"'FormGroup' is defined but never used.","'Script' is defined but never used.","'target' is assigned a value but never used.","'medication' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"550","fix":"551","desc":"552"},{"messageId":"553","fix":"554","desc":"555"},{"messageId":"550","fix":"556","desc":"552"},{"messageId":"553","fix":"557","desc":"555"},{"desc":"558","fix":"559"},{"messageId":"550","fix":"560","desc":"552"},{"messageId":"553","fix":"561","desc":"555"},{"messageId":"550","fix":"562","desc":"552"},{"messageId":"553","fix":"563","desc":"555"},{"messageId":"550","fix":"564","desc":"552"},{"messageId":"553","fix":"565","desc":"555"},"removeEscape",{"range":"566","text":"567"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"568","text":"569"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"570","text":"567"},{"range":"571","text":"569"},"Update the dependencies array to be: [props]",{"range":"572","text":"573"},{"range":"574","text":"567"},{"range":"575","text":"569"},{"range":"576","text":"567"},{"range":"577","text":"569"},{"range":"578","text":"567"},{"range":"579","text":"569"},[9368,9369],"",[9368,9368],"\\",[12659,12660],[12659,12659],[1624,1626],"[props]",[12668,12669],[12668,12668],[12407,12408],[12407,12407],[12477,12478],[12477,12477]]