[{"C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\index.js":"1","C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\App.js":"2","C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\pages\\PatientProfilePage.js":"3","C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\components\\AllergyPatientListing.js":"4","C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\components\\UserInfo.js":"5","C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\components\\AddAllergy.js":"6","C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\components\\ChangePassword.js":"7","C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\pages\\ReviewedClients.js":"8","C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\pages\\VacationRequest.js":"9","C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\pages\\DermatologistHomePage.js":"10","C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\pages\\DermatologistsProfilePage.js":"11","C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\pages\\PharmacistProfilePage.js":"12","C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\components\\Login.js":"13","C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\pages\\Registration.js":"14","C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\pages\\PharmacistHomePage.js":"15","C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\pages\\PharmacistWorkingHours.js":"16","C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\components\\WorkingHoursCalendar.js":"17"},{"size":457,"mtime":1610635231587,"results":"18","hashOfConfig":"19"},{"size":2049,"mtime":1610808867138,"results":"20","hashOfConfig":"19"},{"size":5276,"mtime":1610808867208,"results":"21","hashOfConfig":"19"},{"size":1044,"mtime":1610725247139,"results":"22","hashOfConfig":"19"},{"size":2872,"mtime":1610725247142,"results":"23","hashOfConfig":"19"},{"size":1291,"mtime":1610725247137,"results":"24","hashOfConfig":"19"},{"size":2157,"mtime":1610806237137,"results":"25","hashOfConfig":"19"},{"size":3585,"mtime":1610808867224,"results":"26","hashOfConfig":"19"},{"size":2485,"mtime":1610808867225,"results":"27","hashOfConfig":"19"},{"size":2884,"mtime":1610727810866,"results":"28","hashOfConfig":"19"},{"size":3031,"mtime":1610727810866,"results":"29","hashOfConfig":"19"},{"size":3159,"mtime":1610808867216,"results":"30","hashOfConfig":"19"},{"size":4277,"mtime":1610806237139,"results":"31","hashOfConfig":"19"},{"size":9618,"mtime":1610806237187,"results":"32","hashOfConfig":"19"},{"size":3116,"mtime":1610808867210,"results":"33","hashOfConfig":"19"},{"size":1185,"mtime":1610808875094,"results":"34","hashOfConfig":"19"},{"size":2396,"mtime":1610808875091,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1i7vdma",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\index.js",[],["77","78"],"C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\App.js",["79","80"],"C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\pages\\PatientProfilePage.js",[],"C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\components\\AllergyPatientListing.js",["81"],"import React from \"react\";\r\nimport {Button, Card, Col, Row} from \"react-bootstrap\";\r\n\r\nclass AllergyPatientListing extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.removeAllergy = this.removeAllergy.bind(this);\r\n    }\r\n\r\n    removeAllergy(allergy) {\r\n        this.props.removeAllergy(allergy)\r\n    }\r\n\r\n    render() {\r\n        const allergies = this.props.allergies.map((allergy, index) => {\r\n            return (\r\n                <Col xs={3} >\r\n                    <div className=\"m-2 bg-primary p-2\" style={{ height: '3rem' }}>\r\n                        {this.props.edit && <Button variant=\"primary\" className=\"mr-3 p-0\" style={{width: '1rem'}}\r\n                                 onClick={this.removeAllergy.bind(this, allergy)}>X</Button>}\r\n                        {allergy}\r\n                    </div>\r\n                </Col>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <Row>\r\n                {allergies}\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllergyPatientListing;","C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\components\\UserInfo.js",["82","83","84"],"import React from \"react\";\r\nimport {Container, Row, Col, Table, FormControl} from \"react-bootstrap\";\r\n\r\nclass UserInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        this.props.onChange(event)\r\n    }\r\n\r\n    render() {\r\n        let {user, edit} = this.props;\r\n\r\n        return (\r\n            <Table striped hover>\r\n                <tbody>\r\n                <tr>\r\n                    <td>First Name</td>\r\n                    {edit\r\n                        ? <FormControl name=\"firstName\" className=\"mt-2 mb-2\" value={user.firstName}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.firstName}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Last Name</td>\r\n                    {edit\r\n                        ? <FormControl name=\"lastName\" className=\"mt-2 mb-2\" value={user.lastName}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.lastName}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Email</td>\r\n                    <td>{user.email}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Address</td>\r\n                    {edit\r\n                        ? <FormControl name=\"address\" className=\"mt-2 mb-2\" value={user.address}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.address}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Town</td>\r\n                    {edit\r\n                        ? <FormControl name=\"town\" className=\"mt-2 mb-2\" value={user.town}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.town}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Country</td>\r\n                    {edit\r\n                        ? <FormControl name=\"country\" className=\"mt-2 mb-2\" value={user.country}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.country}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Phone Number</td>\r\n                    {edit\r\n                        ? <FormControl name=\"phoneNumber\" className=\"mt-2 mb-2\" value={user.phoneNumber}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.phoneNumber}</td>\r\n                    }\r\n                </tr>\r\n                </tbody>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserInfo;","C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\components\\AddAllergy.js",["85"],"import React from \"react\";\r\nimport {Button, FormControl} from \"react-bootstrap\";\r\n\r\nclass AddAllergy extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'allergy' : '',\r\n            'allergies' : []\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addAllergy = this.addAllergy.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            'allergies' : ['a10', 'a11', 'a12', 'a13']\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({allergy: event.target.value});\r\n    }\r\n\r\n    addAllergy() {\r\n        this.props.addAllergy(this.state.allergy)\r\n    }\r\n\r\n    render() {\r\n        const allergies = this.state.allergies.map((allergy, index) => {\r\n            return <option value={allergy} key={index}>{allergy}</option>\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <select value={this.state.allergy} style={{width: '15rem'}} className=\"mr-2\"\r\n                        onChange={this.handleChange}>\r\n                    {allergies}\r\n                </select>\r\n                <Button variant=\"success\" className=\"mb-3\" onClick={this.addAllergy}>Add</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AddAllergy;","C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\components\\ChangePassword.js",["86"],"import React from \"react\";\r\nimport {Col, Container, FormControl, Row} from \"react-bootstrap\";\r\n\r\nclass ChangePassword extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'repErr' : ''\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.validatePassword = this.validatePassword.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        this.props.onChange(event);\r\n        this.validatePassword(event);\r\n    }\r\n\r\n    validatePassword(event) {\r\n        let repErr = ''\r\n        let val = event.target.value;\r\n        let newPass = this.props.pass[1]\r\n\r\n        if (event.target.name === 'repPass')\r\n            if(val !== newPass.substr(0, Math.min(val.length, newPass.length)) ||\r\n                (val.trim() === '' && newPass.trim() !== '')) {\r\n                repErr = 'This password must match the previous';\r\n                this.props.disable(true);\r\n            }\r\n            else\r\n                this.props.disable(false);\r\n\r\n        this.setState({\r\n            'repErr': repErr\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h2 className=\"pt-4 pb-3\">Change Password</h2>\r\n                <Row className=\"m-2\">\r\n                    <FormControl name=\"oldPass\" type=\"password\" placeholder=\"Password\"\r\n                                 value={this.props.pass[0]} onChange={this.handleInputChange}/>\r\n                </Row>\r\n                <Row className=\"m-2\">\r\n                    <FormControl name=\"newPass\" type=\"password\" placeholder=\"New Password\"\r\n                                 value={this.props.pass[1]} onChange={this.handleInputChange}/>\r\n                </Row>\r\n                <Row className=\"m-2\">\r\n                    <FormControl name=\"repPass\" type=\"password\" placeholder=\"Repeat new Password\"\r\n                                 value={this.props.pass[2]} onChange={this.handleInputChange}/>\r\n                    <label className=\"text-danger\">{this.state.repErr}</label>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChangePassword;","C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\pages\\ReviewedClients.js",[],"C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\pages\\VacationRequest.js",[],"C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\pages\\DermatologistHomePage.js",[],"C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\pages\\DermatologistsProfilePage.js",[],"C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\pages\\PharmacistProfilePage.js",[],"C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\components\\Login.js",["87"],"import React from \"react\";\r\nimport {Button, Col, Form, Modal} from \"react-bootstrap\";\r\n\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'password': '',\r\n            'email': '',\r\n            errors: {\r\n                'email': 'Enter Email.',\r\n                'password': 'Enter Password.'\r\n            },\r\n            submitted: false\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        alert('A name was submitted: ' + this.state.value);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n        this.validationErrorMessage(event);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Button type=\"button\" className=\"btn btn-secondary\"  onClick={this.handleModal}>Login</Button>\r\n\r\n                <Modal show={this.state.showModal} onHide={this.handleModal}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Login</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group size=\"lg\" controlId=\"email\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control autoFocus name=\"email\" placeholder=\"email\"  type=\"email\" value={this.state.email} onChange={(e) => { this.handleInputChange(e)} } />\r\n                                { this.state.submitted && this.state.errors.email.length > 0 &&  <span className=\"text-danger\">{this.state.errors.email}</span>}\r\n                            </Form.Group>\r\n                            <Form.Group size=\"lg\" controlId=\"password\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\"  name=\"password\" placeholder=\"password\"  value={this.state.password} onChange={(e) => { this.handleInputChange(e)} } />\r\n                                { this.state.submitted && this.state.errors.password.length > 0 &&  <span className=\"text-danger\">{this.state.errors.password}</span>}\r\n\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleModal}  >\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.loginForm}>\r\n                            Ok\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n    handleModal = () => {\r\n        this.setState({\r\n            showModal : !this.state.showModal,\r\n            password: '',\r\n            'email': '',\r\n        });\r\n    }\r\n    validationErrorMessage = (event) => {\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n        switch (name) {\r\n            case 'email':\r\n                errors.email = this.isValidEmail(value) ? '' : 'Wrong email format. Please check and try again.';\r\n                break;\r\n            case 'password':\r\n                errors.password = value.length < 1 ? 'Enter Password' : '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({ errors });\r\n    }\r\n\r\n    validateForm = (errors) => {\r\n        let valid = true;\r\n        Object.entries(errors).forEach(item => {\r\n            console.log(item)\r\n            item && item[1].length > 0 && (valid = false)\r\n        })\r\n        return valid;\r\n    }\r\n    isValidEmail = (value) => {\r\n        return !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,64}$/i.test(value))\r\n    }\r\n\r\n    loginForm = async (event) => {\r\n        this.setState({ submitted: true });\r\n        event.preventDefault();\r\n        if (this.validateForm(this.state.errors)) {\r\n            console.log('Valid Form')\r\n        } else {\r\n            console.log('Invalid Form')\r\n        }\r\n    }\r\n\r\n}","C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\pages\\Registration.js",["88","89","90","91","92","93","94","95"],"import React from \"react\";\r\nimport {Button, Col, Form, Modal, Table, Grid, FormControl, Row} from \"react-bootstrap\";\r\nimport \"../App.css\";\r\n\r\n\r\nexport default class Registration extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                'email': '',\r\n                'password': '',\r\n                'firstName': '',\r\n                'lastName': '',\r\n                'country': '',\r\n                'city': '',\r\n                'telephone': '',\r\n                'rePassword' : ''\r\n            },\r\n            errors:{\r\n                user: {\r\n                    'email': 'Enter email',\r\n                    'password': 'Enter password',\r\n                    'firstName': 'Enter First name',\r\n                    'lastName': 'Enter Last name',\r\n                    'country': 'Enter Country',\r\n                    'city': 'Enter City',\r\n                    'telephone': 'Enter Telephone',\r\n                    'rePassword' : 'Repeat password'\r\n                }\r\n            },\r\n            validForm: false,\r\n            submitted: false,\r\n\r\n\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.isValidPassword = this.isValidPassword.bind(this);\r\n\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        const user = this.state.user;\r\n        user[name] = value;\r\n\r\n        this.setState({ user });\r\n        this.validationErrorMessage(event);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rightPanel\">\r\n                <header>User - Registration</header>\r\n\r\n                <div className=\"row\">\r\n                    <label className=\"col-sm-2 col-form-label\">Name</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.firstName} name=\"firstName\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"First Name\" />\r\n                        { this.state.submitted && this.state.errors.user.firstName.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.firstName}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.lastName} name=\"lastName\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"Last Name\" />\r\n                        { this.state.submitted && this.state.errors.user.lastName.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.lastName}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Email</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"email\" value={this.state.user.email} name=\"email\" onChange={(e) => { this.handleInputChange(e)} }className=\"form-control\" id=\"email\" placeholder=\"example@gmail.com\" />\r\n                        { this.state.submitted && this.state.errors.user.email.length > 0 && <span className=\"text-danger\">{this.state.errors.user.email}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Tel</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.telephone} name=\"telephone\" onChange={(e) => { this.handleInputChange(e)} }  className=\"form-control\" id=\"telephone\" placeholder=\"+3810640333489\" />\r\n                        { this.state.submitted && this.state.errors.user.telephone.length > 0 && <span className=\"text-danger\">{this.state.errors.user.telephone}</span>}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Country</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.country} name=\"country\" onChange={(e) => { this.handleInputChange(e)} }  className=\"form-control\" id=\"country\" placeholder=\"Enter country\" />\r\n                        { this.state.submitted && this.state.errors.user.country.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.country}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">City</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.city} name=\"city\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" id=\"city\" placeholder=\"Enter city\" />\r\n                        { this.state.submitted && this.state.errors.user.city.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.city}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label className=\"col-sm-2 col-form-label\">Password</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <FormControl name=\"password\" type=\"password\" placeholder=\"Password\"  value={this.state.user.password} onChange={(e) => { this.handleInputChange(e)} }/>\r\n                        { this.state.submitted && this.state.errors.user.password.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.password}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Repeat password</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <FormControl name=\"rePassword\" type=\"password\" placeholder=\"Repeat new Password\" value={this.state.user.rePassword} onChange={(e) => { this.handleInputChange(e)} }/>\r\n                        { this.state.submitted && this.state.errors.user.rePassword.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.rePassword}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-5 mb-2\">\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <Button variant=\"primary\" onClick={this.submitForm} >Submit</Button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    submitForm = async (event) => {\r\n        this.setState({ submitted: true });\r\n        const user = this.state.user;\r\n        event.preventDefault();\r\n        if (this.validateForm(this.state.errors)) {\r\n            console.info('Valid Form')\r\n        } else {\r\n            console.log('Invalid Form')\r\n        }\r\n    }\r\n\r\n    validationErrorMessage = (event) => {\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n\r\n        switch (name) {\r\n            case 'firstName':\r\n                errors.user.firstName = value.length < 1 ? 'Enter First Name' : '';\r\n                break;\r\n            case 'lastName':\r\n                errors.user.lastName = value.length < 1 ? 'Enter Last Name' : '';\r\n                break;\r\n            case 'email':\r\n                errors.user.email = this.isValidEmail(value) ? '' : 'Email is not valid!';\r\n                break;\r\n            case 'telephone':\r\n                errors.user.telephone = this.isValidTelephone(value) ? 'Enter valid telephone number' : '';\r\n                break;\r\n            case 'country':\r\n                errors.user.country = value.length < 1 ?  'Enter Country' : '';\r\n                break;\r\n            case 'city':\r\n                errors.user.city = value.length < 1 ?  'Enter City' : '';\r\n                break;\r\n            case 'password':\r\n                errors.user.password = value.length < 1 ? 'Enter Password' : '';\r\n                break;\r\n            case 'rePassword':\r\n                errors.user.rePassword = this.isValidPassword(value) ? '' : 'This password must match the previous';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({ errors });\r\n    }\r\n\r\n    validateForm = (errors) => {\r\n        let valid = true;\r\n        Object.entries(errors.user).forEach(item => {\r\n            console.log(item)\r\n            item && item[1].length > 0 && (valid = false)\r\n        })\r\n        return valid;\r\n    }\r\n    isValidEmail = (value) => {\r\n        return !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,64}$/i.test(value))\r\n    }\r\n\r\n    isValidTelephone = (value) => {\r\n        return !(value && /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[0-9]{2,3}[-\\s\\./0-9]*$/i.test(value))\r\n    }\r\n\r\n    isValidPassword = (value) => {\r\n            if(this.state.user.password !== this.state.user.rePassword) {\r\n                return false;\r\n            }else{\r\n                return  true\r\n            }\r\n    }\r\n}","C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\pages\\PharmacistHomePage.js",[],"C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\pages\\PharmacistWorkingHours.js",[],"C:\\Users\\jovan\\Desktop\\ISAProjekat\\InternetPharmacy\\frontend\\src\\components\\WorkingHoursCalendar.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":9,"column":8,"nodeType":"102","messageId":"103","endLine":9,"endColumn":29},{"ruleId":"100","severity":1,"message":"104","line":11,"column":8,"nodeType":"102","messageId":"103","endLine":11,"endColumn":30},{"ruleId":"100","severity":1,"message":"105","line":2,"column":17,"nodeType":"102","messageId":"103","endLine":2,"endColumn":21},{"ruleId":"100","severity":1,"message":"106","line":2,"column":9,"nodeType":"102","messageId":"103","endLine":2,"endColumn":18},{"ruleId":"100","severity":1,"message":"107","line":2,"column":20,"nodeType":"102","messageId":"103","endLine":2,"endColumn":23},{"ruleId":"100","severity":1,"message":"108","line":2,"column":25,"nodeType":"102","messageId":"103","endLine":2,"endColumn":28},{"ruleId":"100","severity":1,"message":"109","line":2,"column":17,"nodeType":"102","messageId":"103","endLine":2,"endColumn":28},{"ruleId":"100","severity":1,"message":"108","line":2,"column":9,"nodeType":"102","messageId":"103","endLine":2,"endColumn":12},{"ruleId":"100","severity":1,"message":"108","line":2,"column":17,"nodeType":"102","messageId":"103","endLine":2,"endColumn":20},{"ruleId":"100","severity":1,"message":"108","line":2,"column":17,"nodeType":"102","messageId":"103","endLine":2,"endColumn":20},{"ruleId":"100","severity":1,"message":"110","line":2,"column":22,"nodeType":"102","messageId":"103","endLine":2,"endColumn":26},{"ruleId":"100","severity":1,"message":"111","line":2,"column":28,"nodeType":"102","messageId":"103","endLine":2,"endColumn":33},{"ruleId":"100","severity":1,"message":"112","line":2,"column":35,"nodeType":"102","messageId":"103","endLine":2,"endColumn":40},{"ruleId":"100","severity":1,"message":"113","line":2,"column":42,"nodeType":"102","messageId":"103","endLine":2,"endColumn":46},{"ruleId":"100","severity":1,"message":"107","line":2,"column":61,"nodeType":"102","messageId":"103","endLine":2,"endColumn":64},{"ruleId":"100","severity":1,"message":"114","line":146,"column":15,"nodeType":"102","messageId":"103","endLine":146,"endColumn":19},{"ruleId":"115","severity":1,"message":"116","line":204,"column":73,"nodeType":"117","messageId":"118","endLine":204,"endColumn":74,"suggestions":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'PharmacistProfilePage' is defined but never used.","Identifier","unusedVar","'PharmacistWorkingHours' is defined but never used.","'Card' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'FormControl' is defined but never used.","'Form' is defined but never used.","'Modal' is defined but never used.","'Table' is defined but never used.","'Grid' is defined but never used.","'user' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["122","123"],"no-global-assign","no-unsafe-negation",{"messageId":"124","fix":"125","desc":"126"},{"messageId":"127","fix":"128","desc":"129"},"removeEscape",{"range":"130","text":"131"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"132","text":"133"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[9368,9369],"",[9368,9368],"\\"]