[{"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\index.js":"1","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\App.js":"2","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PatientProfilePage.js":"3","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\VacationRequest.js":"4","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\ReviewedClients.js":"5","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\DermatologistHomePage.js":"6","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\DermatologistsProfilePage.js":"7","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\AllergyPatientListing.js":"8","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\AddAllergy.js":"9","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\UserInfo.js":"10","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\ChangePassword.js":"11","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\Registration.js":"12","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\Login.js":"13","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PharmacistProfilePage.js":"14","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PharmacistWorkingHours.js":"15","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PharmacistHomePage.js":"16","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\ISAdminHomePage.js":"17","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\SupplierRegistration.js":"18","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\LoyaltyProgram.js":"19","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\Complaints.js":"20","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\PharmacyRegistration.js":"21","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\AddNewMedication.js":"22","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\DermatologistRegistration.js":"23","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\PharmacyAdminRegistration.js":"24","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\WorkingHoursCalendar.js":"25"},{"size":457,"mtime":1610652333975,"results":"26","hashOfConfig":"27"},{"size":2234,"mtime":1610890782579,"results":"28","hashOfConfig":"27"},{"size":7778,"mtime":1610890782559,"results":"29","hashOfConfig":"27"},{"size":2485,"mtime":1610808222437,"results":"30","hashOfConfig":"27"},{"size":3585,"mtime":1610808222436,"results":"31","hashOfConfig":"27"},{"size":2884,"mtime":1610742736506,"results":"32","hashOfConfig":"27"},{"size":3031,"mtime":1610742736506,"results":"33","hashOfConfig":"27"},{"size":1099,"mtime":1610890782549,"results":"34","hashOfConfig":"27"},{"size":1582,"mtime":1610890782549,"results":"35","hashOfConfig":"27"},{"size":2872,"mtime":1610711910735,"results":"36","hashOfConfig":"27"},{"size":2157,"mtime":1610742736490,"results":"37","hashOfConfig":"27"},{"size":9620,"mtime":1610890759514,"results":"38","hashOfConfig":"27"},{"size":4277,"mtime":1610808222432,"results":"39","hashOfConfig":"27"},{"size":3159,"mtime":1610808222435,"results":"40","hashOfConfig":"27"},{"size":1185,"mtime":1610890782559,"results":"41","hashOfConfig":"27"},{"size":3116,"mtime":1610808222434,"results":"42","hashOfConfig":"27"},{"size":4443,"mtime":1610890759511,"results":"43","hashOfConfig":"27"},{"size":355,"mtime":1610890759509,"results":"44","hashOfConfig":"27"},{"size":340,"mtime":1610890759502,"results":"45","hashOfConfig":"27"},{"size":327,"mtime":1610890759500,"results":"46","hashOfConfig":"27"},{"size":9420,"mtime":1610890759505,"results":"47","hashOfConfig":"27"},{"size":348,"mtime":1610890759498,"results":"48","hashOfConfig":"27"},{"size":361,"mtime":1610890759501,"results":"49","hashOfConfig":"27"},{"size":348,"mtime":1610890759503,"results":"50","hashOfConfig":"27"},{"size":2396,"mtime":1610890782550,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1rfaw5s",{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\index.js",[],["114","115"],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\App.js",["116","117"],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PatientProfilePage.js",["118"],"import React from \"react\";\r\nimport {Col, Container, Nav, Row, Button} from \"react-bootstrap\";\r\nimport UserInfo from \"../components/UserInfo\";\r\nimport AllergyPatientListing from \"../components/AllergyPatientListing\";\r\nimport AddAllergy from \"../components/AddAllergy\";\r\nimport ChangePassword from \"../components/ChangePassword\";\r\nimport axios from \"axios\"\r\n\r\nexport default class PatientProfilePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'firstName' : '',\r\n            'lastName' : '',\r\n            'email' : '',\r\n            'address' : '',\r\n            'town' : '',\r\n            'country' : '',\r\n            'phoneNumber' : '',\r\n            'oldPass' : '',\r\n            'newPass' : '',\r\n            'repPass' : '',\r\n            'allergies' : [],\r\n            'editMode' : false,\r\n            'saveDisabled' : false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios\r\n        .get('http://localhost:8080/api/patients')\r\n        .then(res => console.log(res.data));\r\n\r\n        this.setState({\r\n            'firstName' : 'Ilija',\r\n            'lastName' : 'Brdar',\r\n            'email' : 'ilija_brdar@yahoo.com',\r\n            'address' : 'Vuka Karadzica 18',\r\n            'town' : 'Sirig',\r\n            'country' : 'Serbia',\r\n            'phoneNumber' : '+381604648117',\r\n            'allergies' : ['a1', 'a2', 'a3', 'a4', 'a5', 'a6'],\r\n            'editMode' : false,\r\n            'changePasswordMode' : false\r\n        })\r\n\r\n        this.user = {\r\n            'firstName' : 'Ilija',\r\n            'lastName' : 'Brdar',\r\n            'email' : 'ilija_brdar@yahoo.com',\r\n            'address' : 'Vuka Karadzica 18',\r\n            'town' : 'Sirig',\r\n            'country' : 'Serbia',\r\n            'phoneNumber' : '+381604648117',\r\n            'allergies' : ['a1', 'a2', 'a3', 'a4', 'a5', 'a6'],\r\n        }\r\n    }\r\n\r\n    activateUpdateMode = () => {\r\n        this.resetData();\r\n        this.setState({\r\n            editMode : !this.state.editMode,\r\n            changePasswordMode : false\r\n        })\r\n    }\r\n\r\n    activateChangePasswordMode = () => {\r\n        this.setState({\r\n            'saveDisabled' : !this.state.changePasswordMode,\r\n            'changePasswordMode' : !this.state.changePasswordMode,\r\n            'oldPass' : '',\r\n            'newPass' : '',\r\n            'repPass' : ''\r\n        })\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        this.setState({\r\n            [target.name] : target.value,\r\n        })\r\n    }\r\n\r\n    resetData = () => {\r\n        this.setState({\r\n            'firstName' : this.user.firstName,\r\n            'lastName' : this.user.lastName,\r\n            'address' : this.user.address,\r\n            'town' : this.user.town,\r\n            'country' : this.user.country,\r\n            'phoneNumber' : this.user.phoneNumber,\r\n            'allergies' : this.user.allergies\r\n        })\r\n    }\r\n\r\n    disableSave = (disable) => {\r\n        this.setState({\r\n            'saveDisabled' : disable\r\n        })\r\n    }\r\n\r\n    addAllergy = (allergy) => {\r\n        if(!this.state.allergies.includes(allergy))\r\n            this.setState({\r\n                'allergies' : [...this.state.allergies, allergy]\r\n            })\r\n    }\r\n\r\n    removeAllergy = (allergy) => {\r\n        this.setState({\r\n            'allergies' : [...this.state.allergies.filter(a => a !== allergy)]\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {oldPass, newPass, repPass} = this.state;\r\n        const passwords = [oldPass, newPass, repPass]\r\n\r\n        return (\r\n            <Container fluid>\r\n                <Row className=\"pt-5\">\r\n                    <Col xs={2}>\r\n                        <Nav defaultActiveKey=\"/home\" className=\"flex-column\">\r\n                            {!this.state.editMode\r\n                                ? <Button variant=\"primary\" onClick={this.activateUpdateMode}>Edit</Button>\r\n                                : <Button variant=\"outline-secondary\" onClick={this.activateUpdateMode}>Cancel</Button>\r\n                            }\r\n                            {this.state.editMode && <Button variant=\"primary mt-2\"\r\n                                                            onClick={this.activateChangePasswordMode}>\r\n                                Change Password</Button>}\r\n                            {this.state.editMode && <Button variant=\"success mt-2\" disabled={this.state.saveDisabled}>Save</Button>}\r\n                        </Nav>\r\n                    </Col>\r\n                    <Col>\r\n                        <UserInfo user={this.state} edit={this.state.editMode} onChange={this.handleInputChange}/>\r\n                        <h2 className=\"pt-4 pb-3\">Allergies</h2>\r\n                        {this.state.editMode && <AddAllergy addAllergy={this.addAllergy}/>}\r\n                        <AllergyPatientListing edit={this.state.editMode}\r\n                            allergies={this.state.allergies} removeAllergy={this.removeAllergy}/>\r\n                        {this.state.changePasswordMode &&\r\n                        <ChangePassword pass={passwords} onChange={this.handleInputChange} disable={this.disableSave}/>}\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\VacationRequest.js",["119"],"import React from \"react\";\r\nimport {Col, Container,  Row, Button} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nexport default class VacationRequest extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employeeId : props.Id,\r\n            startDate : \"\",\r\n            endDate : \"\",\r\n            pharmacy : \"\",\r\n            employeeType : props.role,\r\n            vacationNote : \"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n    render() {\r\n        let pharmacies = [\"hemofarm\", \"jankovic\"];\r\n        const  PharmaciesTag = pharmacies.map((pharmacy, key) =>\r\n            <option value={pharmacy}> {pharmacy} </option>\r\n        );\r\n        return (\r\n            <Container>\r\n                <br/>\r\n                <h2> Create request for vacation or absence</h2>\r\n                <br/>\r\n                <Row>\r\n                    <Col xs={2}> <p> Choose period: </p> </Col>\r\n                    <Col xs={-4}> <DatePicker  selected={this.state.startDate} minDate={new Date()} onChange={date => this.setState({startDate : date})} /> </Col>\r\n                    <Col xs={-4}> <DatePicker  selected={this.state.endDate} minDate={new Date()} onChange={date => this.setState({endDate : date})} /> </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={2}> <p> Choose pharmacy: </p> </Col>\r\n                    <Col xs={-4}>\r\n                            <select value={this.state.pharmacy} onChange={value => this.setState({ pharmacy : value.target.value})}>\r\n                                {PharmaciesTag}\r\n                            </select>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <p> Reason :</p>\r\n                        <textarea className=\"form-control\"  rows=\"5\" cols=\"30\"\r\n                                  placeholder=\"Type reason...\" id=\"comment\" value={this.state.vacationNote} onChange={text => this.setState({vacationNote : text.target.value})}/>\r\n                    </Col>\r\n                </Row>\r\n                <Button onClick={this.sendData}> Submit </Button>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n\r\n    sendData = () => {\r\n        alert(this.state.vacationNote.toString())\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\ReviewedClients.js",["120","121","122"],"import React from \"react\";\r\nimport {Col, Container,Row, Button, Table} from \"react-bootstrap\";\r\n\r\nexport default class ReviewedClients extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            role : props.role,\r\n            Id : props.Id,\r\n            clients : [],\r\n            sortType : \"desc\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let client = {\r\n            firstName: \"Aovan\",\r\n            lastName: \"Jelicki\",\r\n            dateOfAppointment: \"20.01.2021.\"\r\n        }\r\n        let client2 = {\r\n            firstName: \"Pera\",\r\n            lastName: \"Peric\",\r\n            dateOfAppointment: \"10.01.2021.\"\r\n        }\r\n        let list = [client, client2]\r\n        this.setState({\r\n            clients: list\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const Clients = this.state.clients.map((client, key) =>\r\n            <tr>\r\n                <td>{client.firstName}</td>\r\n                <td>{client.lastName}</td>\r\n                <td>{client.dateOfAppointment}</td>\r\n            </tr>\r\n        );\r\n        return (\r\n\r\n            <Container>\r\n                <br/>\r\n                <Row>\r\n                    <Col  xs={12} md={8}>\r\n                        <Button onClick={this.sortByFirstName} type=\"button\" className=\"btn btn-secondary\"> Sort by first name</Button>\r\n                        <Button onClick={this.sortByLastName} type=\"button\" className=\"btn btn-secondary\"> Sort by last name</Button>\r\n                        <Button onClick={this.sortByDateOfAppointment} type=\"button\" className=\"btn btn-secondary\"> Sort by date of appointment</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Table style={{\"borderWidth\":\"1px\", 'borderColor':\"#aaaaaa\", 'borderStyle':'solid'}} striped hover>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>First name</th>\r\n                            <th>Last name</th>\r\n                            <th>Date of appointment</th>\r\n                        </tr>\r\n                        {Clients}\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n\r\n        )\r\n    }\r\n\r\n    sortByFirstName = () => {\r\n        if(this.state.sortType === \"desc\")\r\n            this.setState({\r\n                clients: this.state.clients.sort((a, b) => (a.firstName > b.firstName) ? -1 : 1),\r\n                sortType : \"asc\"\r\n            })\r\n        else\r\n            this.setState({\r\n                clients: this.state.clients.sort((a, b) => (a.firstName > b.firstName) ? 1 : -1),\r\n                sortType : \"desc\"\r\n            })\r\n    }\r\n    sortByLastName = () => {\r\n        if(this.state.sortType === \"desc\")\r\n            this.setState({\r\n                clients: this.state.clients.sort((a, b) => (a.lastName > b.lastName) ? -1 : 1),\r\n                sortType : \"asc\"\r\n            })\r\n        else\r\n            this.setState({\r\n                clients: this.state.clients.sort((a, b) => (a.lastName > b.lastName) ? 1 : -1),\r\n                sortType : \"desc\"\r\n            })\r\n    }\r\n    sortByDateOfAppointment = () => {\r\n        if(this.state.sortType === \"desc\")\r\n            this.setState({\r\n                clients: this.state.clients.sort((a, b) => (a.dateOfAppointment > b.dateOfAppointment) ? -1 : 1),\r\n                sortType : \"asc\"\r\n            })\r\n        else\r\n            this.setState({\r\n                clients: this.state.clients.sort((a, b) => (a.dateOfAppointment > b.dateOfAppointment) ? 1 : -1),\r\n                sortType : \"desc\"\r\n            })\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\DermatologistHomePage.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\DermatologistsProfilePage.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\AllergyPatientListing.js",["123"],"import React from \"react\";\r\nimport {Button, Card, Col, Row} from \"react-bootstrap\";\r\n\r\nclass AllergyPatientListing extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.removeAllergy = this.removeAllergy.bind(this);\r\n    }\r\n\r\n    removeAllergy(allergy) {\r\n        this.props.removeAllergy(allergy)\r\n    }\r\n\r\n    render() {\r\n        const allergies = this.props.allergies.map((allergy, index) => {\r\n            return (\r\n                <Col xs={3} >\r\n                    <div className=\"m-2 bg-primary p-2\" style={{ height: '3rem' }}>\r\n                        {this.props.edit && <Button variant=\"primary\" className=\"mr-3 p-0\" style={{width: '1rem'}}\r\n                                 onClick={this.removeAllergy.bind(this, allergy)}>X</Button>}\r\n                        {allergy}\r\n                    </div>\r\n                </Col>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <Row>\r\n                {allergies}\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllergyPatientListing;","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\AddAllergy.js",["124"],"import React from \"react\";\r\nimport {Button, FormControl} from \"react-bootstrap\";\r\n\r\nclass AddAllergy extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'allergy' : '',\r\n            'allergies' : []\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addAllergy = this.addAllergy.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            'allergies' : ['a10', 'a11', 'a12', 'a13']\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({allergy: event.target.value});\r\n    }\r\n\r\n    addAllergy() {\r\n        this.props.addAllergy(this.state.allergy)\r\n    }\r\n\r\n    render() {\r\n        const allergies = this.state.allergies.map((allergy, index) => {\r\n            return <option value={allergy} key={index}>{allergy}</option>\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <select value={this.state.allergy} style={{width: '15rem'}} className=\"mr-2\"\r\n                        onChange={this.handleChange}>\r\n                    {allergies}\r\n                </select>\r\n                <Button variant=\"success\" className=\"mb-3\" onClick={this.addAllergy}>Add</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AddAllergy;","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\UserInfo.js",["125","126","127"],"import React from \"react\";\r\nimport {Container, Row, Col, Table, FormControl} from \"react-bootstrap\";\r\n\r\nclass UserInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        this.props.onChange(event)\r\n    }\r\n\r\n    render() {\r\n        let {user, edit} = this.props;\r\n\r\n        return (\r\n            <Table striped hover>\r\n                <tbody>\r\n                <tr>\r\n                    <td>First Name</td>\r\n                    {edit\r\n                        ? <FormControl name=\"firstName\" className=\"mt-2 mb-2\" value={user.firstName}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.firstName}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Last Name</td>\r\n                    {edit\r\n                        ? <FormControl name=\"lastName\" className=\"mt-2 mb-2\" value={user.lastName}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.lastName}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Email</td>\r\n                    <td>{user.email}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Address</td>\r\n                    {edit\r\n                        ? <FormControl name=\"address\" className=\"mt-2 mb-2\" value={user.address}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.address}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Town</td>\r\n                    {edit\r\n                        ? <FormControl name=\"town\" className=\"mt-2 mb-2\" value={user.town}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.town}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Country</td>\r\n                    {edit\r\n                        ? <FormControl name=\"country\" className=\"mt-2 mb-2\" value={user.country}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.country}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Phone Number</td>\r\n                    {edit\r\n                        ? <FormControl name=\"phoneNumber\" className=\"mt-2 mb-2\" value={user.phoneNumber}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.phoneNumber}</td>\r\n                    }\r\n                </tr>\r\n                </tbody>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserInfo;","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\ChangePassword.js",["128"],"import React from \"react\";\r\nimport {Col, Container, FormControl, Row} from \"react-bootstrap\";\r\n\r\nclass ChangePassword extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'repErr' : ''\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.validatePassword = this.validatePassword.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        this.props.onChange(event);\r\n        this.validatePassword(event);\r\n    }\r\n\r\n    validatePassword(event) {\r\n        let repErr = ''\r\n        let val = event.target.value;\r\n        let newPass = this.props.pass[1]\r\n\r\n        if (event.target.name === 'repPass')\r\n            if(val !== newPass.substr(0, Math.min(val.length, newPass.length)) ||\r\n                (val.trim() === '' && newPass.trim() !== '')) {\r\n                repErr = 'This password must match the previous';\r\n                this.props.disable(true);\r\n            }\r\n            else\r\n                this.props.disable(false);\r\n\r\n        this.setState({\r\n            'repErr': repErr\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h2 className=\"pt-4 pb-3\">Change Password</h2>\r\n                <Row className=\"m-2\">\r\n                    <FormControl name=\"oldPass\" type=\"password\" placeholder=\"Password\"\r\n                                 value={this.props.pass[0]} onChange={this.handleInputChange}/>\r\n                </Row>\r\n                <Row className=\"m-2\">\r\n                    <FormControl name=\"newPass\" type=\"password\" placeholder=\"New Password\"\r\n                                 value={this.props.pass[1]} onChange={this.handleInputChange}/>\r\n                </Row>\r\n                <Row className=\"m-2\">\r\n                    <FormControl name=\"repPass\" type=\"password\" placeholder=\"Repeat new Password\"\r\n                                 value={this.props.pass[2]} onChange={this.handleInputChange}/>\r\n                    <label className=\"text-danger\">{this.state.repErr}</label>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChangePassword;","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\Registration.js",["129","130","131","132","133","134","135","136"],"import React from \"react\";\r\nimport {Button, Col, Form, Modal, Table, Grid, FormControl, Row} from \"react-bootstrap\";\r\nimport \"../App.css\";\r\n\r\n\r\nexport default class Registration extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                'email': '',\r\n                'password': '',\r\n                'firstName': '',\r\n                'lastName': '',\r\n                'country': '',\r\n                'city': '',\r\n                'telephone': '',\r\n                'rePassword' : ''\r\n            },\r\n            errors:{\r\n                user: {\r\n                    'email': 'Enter email',\r\n                    'password': 'Enter password',\r\n                    'firstName': 'Enter First name',\r\n                    'lastName': 'Enter Last name',\r\n                    'country': 'Enter Country',\r\n                    'city': 'Enter City',\r\n                    'telephone': 'Enter Telephone',\r\n                    'rePassword' : 'Repeat password'\r\n                }\r\n            },\r\n            validForm: false,\r\n            submitted: false,\r\n\r\n\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.isValidPassword = this.isValidPassword.bind(this);\r\n\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        const user = this.state.user;\r\n        user[name] = value;\r\n\r\n        this.setState({ user });\r\n        this.validationErrorMessage(event);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rightPanel\" >\r\n                <header>User - Registration</header>\r\n\r\n                <div className=\"row\" >\r\n                    <label className=\"col-sm-2 col-form-label\">Name</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.firstName} name=\"firstName\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"First Name\" />\r\n                        { this.state.submitted && this.state.errors.user.firstName.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.firstName}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.lastName} name=\"lastName\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"Last Name\" />\r\n                        { this.state.submitted && this.state.errors.user.lastName.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.lastName}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Email</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"email\" value={this.state.user.email} name=\"email\" onChange={(e) => { this.handleInputChange(e)} }className=\"form-control\" id=\"email\" placeholder=\"example@gmail.com\" />\r\n                        { this.state.submitted && this.state.errors.user.email.length > 0 && <span className=\"text-danger\">{this.state.errors.user.email}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Tel</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.telephone} name=\"telephone\" onChange={(e) => { this.handleInputChange(e)} }  className=\"form-control\" id=\"telephone\" placeholder=\"+3810640333489\" />\r\n                        { this.state.submitted && this.state.errors.user.telephone.length > 0 && <span className=\"text-danger\">{this.state.errors.user.telephone}</span>}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Country</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.country} name=\"country\" onChange={(e) => { this.handleInputChange(e)} }  className=\"form-control\" id=\"country\" placeholder=\"Enter country\" />\r\n                        { this.state.submitted && this.state.errors.user.country.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.country}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">City</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.city} name=\"city\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" id=\"city\" placeholder=\"Enter city\" />\r\n                        { this.state.submitted && this.state.errors.user.city.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.city}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label className=\"col-sm-2 col-form-label\">Password</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <FormControl name=\"password\" type=\"password\" placeholder=\"Password\"  value={this.state.user.password} onChange={(e) => { this.handleInputChange(e)} }/>\r\n                        { this.state.submitted && this.state.errors.user.password.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.password}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Repeat password</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <FormControl name=\"rePassword\" type=\"password\" placeholder=\"Repeat new Password\" value={this.state.user.rePassword} onChange={(e) => { this.handleInputChange(e)} }/>\r\n                        { this.state.submitted && this.state.errors.user.rePassword.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.rePassword}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-5 mb-2\">\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <Button variant=\"primary\" onClick={this.submitForm} >Submit</Button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    submitForm = async (event) => {\r\n        this.setState({ submitted: true });\r\n        const user = this.state.user;\r\n        event.preventDefault();\r\n        if (this.validateForm(this.state.errors)) {\r\n            console.info('Valid Form')\r\n        } else {\r\n            console.log('Invalid Form')\r\n        }\r\n    }\r\n\r\n    validationErrorMessage = (event) => {\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n\r\n        switch (name) {\r\n            case 'firstName':\r\n                errors.user.firstName = value.length < 1 ? 'Enter First Name' : '';\r\n                break;\r\n            case 'lastName':\r\n                errors.user.lastName = value.length < 1 ? 'Enter Last Name' : '';\r\n                break;\r\n            case 'email':\r\n                errors.user.email = this.isValidEmail(value) ? '' : 'Email is not valid!';\r\n                break;\r\n            case 'telephone':\r\n                errors.user.telephone = this.isValidTelephone(value) ? 'Enter valid telephone number' : '';\r\n                break;\r\n            case 'country':\r\n                errors.user.country = value.length < 1 ?  'Enter Country' : '';\r\n                break;\r\n            case 'city':\r\n                errors.user.city = value.length < 1 ?  'Enter City' : '';\r\n                break;\r\n            case 'password':\r\n                errors.user.password = value.length < 1 ? 'Enter Password' : '';\r\n                break;\r\n            case 'rePassword':\r\n                errors.user.rePassword = this.isValidPassword(value) ? '' : 'This password must match the previous';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({ errors });\r\n    }\r\n\r\n    validateForm = (errors) => {\r\n        let valid = true;\r\n        Object.entries(errors.user).forEach(item => {\r\n            console.log(item)\r\n            item && item[1].length > 0 && (valid = false)\r\n        })\r\n        return valid;\r\n    }\r\n    isValidEmail = (value) => {\r\n        return !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,64}$/i.test(value))\r\n    }\r\n\r\n    isValidTelephone = (value) => {\r\n        return !(value && /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[0-9]{2,3}[-\\s\\./0-9]*$/i.test(value))\r\n    }\r\n\r\n    isValidPassword = (value) => {\r\n            if(this.state.user.password !== this.state.user.rePassword) {\r\n                return false;\r\n            }else{\r\n                return  true\r\n            }\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\Login.js",["137"],"import React from \"react\";\r\nimport {Button, Col, Form, Modal} from \"react-bootstrap\";\r\n\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'password': '',\r\n            'email': '',\r\n            errors: {\r\n                'email': 'Enter Email.',\r\n                'password': 'Enter Password.'\r\n            },\r\n            submitted: false\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        alert('A name was submitted: ' + this.state.value);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n        this.validationErrorMessage(event);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Button type=\"button\" className=\"btn btn-secondary\"  onClick={this.handleModal}>Login</Button>\r\n\r\n                <Modal show={this.state.showModal} onHide={this.handleModal}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Login</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group size=\"lg\" controlId=\"email\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control autoFocus name=\"email\" placeholder=\"email\"  type=\"email\" value={this.state.email} onChange={(e) => { this.handleInputChange(e)} } />\r\n                                { this.state.submitted && this.state.errors.email.length > 0 &&  <span className=\"text-danger\">{this.state.errors.email}</span>}\r\n                            </Form.Group>\r\n                            <Form.Group size=\"lg\" controlId=\"password\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\"  name=\"password\" placeholder=\"password\"  value={this.state.password} onChange={(e) => { this.handleInputChange(e)} } />\r\n                                { this.state.submitted && this.state.errors.password.length > 0 &&  <span className=\"text-danger\">{this.state.errors.password}</span>}\r\n\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleModal}  >\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.loginForm}>\r\n                            Ok\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n    handleModal = () => {\r\n        this.setState({\r\n            showModal : !this.state.showModal,\r\n            password: '',\r\n            'email': '',\r\n        });\r\n    }\r\n    validationErrorMessage = (event) => {\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n        switch (name) {\r\n            case 'email':\r\n                errors.email = this.isValidEmail(value) ? '' : 'Wrong email format. Please check and try again.';\r\n                break;\r\n            case 'password':\r\n                errors.password = value.length < 1 ? 'Enter Password' : '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({ errors });\r\n    }\r\n\r\n    validateForm = (errors) => {\r\n        let valid = true;\r\n        Object.entries(errors).forEach(item => {\r\n            console.log(item)\r\n            item && item[1].length > 0 && (valid = false)\r\n        })\r\n        return valid;\r\n    }\r\n    isValidEmail = (value) => {\r\n        return !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,64}$/i.test(value))\r\n    }\r\n\r\n    loginForm = async (event) => {\r\n        this.setState({ submitted: true });\r\n        event.preventDefault();\r\n        if (this.validateForm(this.state.errors)) {\r\n            console.log('Valid Form')\r\n        } else {\r\n            console.log('Invalid Form')\r\n        }\r\n    }\r\n\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PharmacistProfilePage.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PharmacistWorkingHours.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PharmacistHomePage.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\ISAdminHomePage.js",["138","139","140","141","142","143","144","145","146","147","148","149","150"],"import React from \"react\";\r\nimport Promotions from \"../components/Promotions\";\r\nimport PharmacyEmployees from \"../components/PharmacyEmployees\";\r\nimport PharmacyMedications from \"../components/PharmacyMedications\";\r\nimport PharmacyVacationsRequests from \"../components/PharmacyVacationsRequests\";\r\nimport PharmacyMedicationOrders from \"../components/PharmacyMedicationOrders\";\r\nimport PharmacyMedicationQueries from \"../components/PharmacyMedicationQueries\";\r\nimport PharmacyRegistration from \"../components/PharmacyRegistration\";\r\nimport DermatologistRegistration from \"../components/DermatologistRegistration\";\r\nimport SupplierRegistration from \"../components/SupplierRegistration\";\r\nimport AddNewMedication from \"../components/AddNewMedication\";\r\nimport Complaints from \"../components/Complaints\";\r\nimport LoyaltyProgram from \"../components/LoyaltyProgram\";\r\nimport PharmacyAdminRegistration from \"../components/PharmacyAdminRegistration\";\r\n\r\nexport class ISAdminHomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            pharmacyAdmin:{\r\n                firstName:'',\r\n                lastName:'',\r\n            },\r\n            navbar : \"\",\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let  pharmacyAdmin= {\r\n            firstName: 'Snezana',\r\n            lastName: 'Bulajic',\r\n        }\r\n        this.setState({\r\n            pharmacyAdmin : pharmacyAdmin\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron jumbotron-fluid\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-4\">{this.state.pharmacyAdmin.firstName +\" \" +this.state.pharmacyAdmin.lastName }</h1>\r\n                </div>\r\n\r\n                <ul className=\"nav justify-content-center\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" href='#' onClick={this.handleChange} name=\"pharmacy\">Pharmacy registration</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"dermatologist\" onClick={this.handleChange}>Dermatologist registration</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"supplier\" onClick={this.handleChange}>Supplier registration</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"medication\" onClick={this.handleChange}>Add medication</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"complaint\" onClick={this.handleChange}>Complaint</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"loyalty\" onClick={this.handleChange}>Loyalty program</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"pharmacyAdmin\" onClick={this.handleChange}>Add new pharmacy admin</a>\r\n                    </li>\r\n\r\n                </ul>\r\n                {this.renderNavbar()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            navbar : name\r\n        });\r\n    }\r\n\r\n    renderNavbar = () => {\r\n        if (this.state.navbar === \"pharmacy\")\r\n            return (\r\n                <PharmacyRegistration/>\r\n            );\r\n        else if (this.state.navbar === \"dermatologist\")\r\n            return (\r\n                <DermatologistRegistration/>\r\n            );\r\n        else if (this.state.navbar === \"supplier\")\r\n            return (\r\n                <SupplierRegistration/>\r\n            );\r\n        else if (this.state.navbar === \"medication\")\r\n            return (\r\n                <AddNewMedication/>\r\n            );\r\n        else if (this.state.navbar === \"complaint\")\r\n            return (\r\n                <Complaints/>\r\n            );\r\n        else if (this.state.navbar === \"loyalty\")\r\n            return (\r\n                <LoyaltyProgram/>\r\n            );else if (this.state.navbar === \"pharmacyAdmin\")\r\n            return (\r\n                <PharmacyAdminRegistration/>\r\n            );\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\SupplierRegistration.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\LoyaltyProgram.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\Complaints.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\PharmacyRegistration.js",["151","152","153"],"import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport Script from 'react-load-script';\r\nimport Select from \"react-select\";\r\n\r\nconst options = [\r\n    { value: 'Marko', label: 'Marko Markovic' },\r\n    { value: 'Zoran', label: 'Zoran Petrovic' },\r\n    { value: 'Ana', label: 'Ana Matic' },\r\n];\r\n\r\nexport default class PharmacyRegistration extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            pharmacy: {\r\n                name: '',\r\n                description: '',\r\n                dermatologist : [],\r\n                pharmacist : [],\r\n                address : {\r\n                    street : \"\",\r\n                    town : \"\",\r\n                    country : \"\",\r\n                    latitude : 51.507351,\r\n                    longitude : -0.127758\r\n                },\r\n                medicationReservation : [],\r\n                grade : 0,\r\n                pharmacyAdmin: [],\r\n\r\n            },\r\n            selectedOption: null,\r\n            numberOfRows : 1,\r\n            address2 : {\r\n                street : \"\",\r\n                town : \"\",\r\n                country : \"\",\r\n                latitude :\"\",\r\n                longitude : \"\"\r\n            },\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n\r\n    }\r\n    handleDermatologistChange = selectedOption => {\r\n        const newitems = this.state.pharmacy.dermatologist\r\n        newitems.push(selectedOption)\r\n\r\n        this.setState({\r\n            dermatologist:newitems\r\n        });\r\n        console.log(`dermatologist selected`, selectedOption);\r\n    };\r\n\r\n    handlePharmacistChange = selectedOption => {\r\n        const newitems = this.state.pharmacy.pharmacist\r\n        newitems.push(selectedOption)\r\n\r\n        this.setState({\r\n            pharmacist:newitems\r\n        });\r\n        console.log(`Option selected:`, selectedOption);\r\n    };\r\n    handleAdminChange = selectedOption => {\r\n        const newitems = this.state.pharmacy.pharmacyAdmin\r\n        newitems.push(selectedOption)\r\n\r\n        this.setState({\r\n            pharmacyAdmin:newitems\r\n        });\r\n        console.log(`Option selected:`, selectedOption);\r\n    };\r\n\r\n    handleInputChange = (event) => {\r\n\r\n        const { name, value } = event.target;\r\n        //console.log(name);\r\n        const address = this.state.pharmacy.address;\r\n        const medicationQuantity = this.state.pharmacy.medicationQuantity;\r\n\r\n        if(name==\"medication\"){\r\n            medicationQuantity[name]=value;\r\n        }else if(name==\"quantity\"){\r\n            medicationQuantity[name]=value;\r\n        }\r\n        const pharmacy = this.state.pharmacy;\r\n        pharmacy[name] = value;\r\n        pharmacy[address]=address;\r\n        pharmacy[medicationQuantity]=address;\r\n        console.log(this.state.pharmacy)\r\n        this.setState({ pharmacy });\r\n    }\r\n\r\n\r\n    handleSubmit = () => {\r\n        console.log(this.state.medicationOrder);\r\n    }\r\n//, componentRestrictions: { country: \"rs\" }\r\n    //                        <input type=\"text\" value={this.state.pharmacy.address.street} name=\"street\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"Enter Street\" />\r\n    handleScriptLoad = () => {\r\n        var input = document.getElementById('street');\r\n        var options = {\r\n            types: ['geocode'] //this should work !\r\n        };\r\n        const google = window.google\r\n\r\n        this.street = new google.maps.places.Autocomplete(input, options);\r\n        this.street.addListener('place_changed', this.handlePlaceSelect);\r\n    }\r\n\r\n    handlePlaceSelect = () => {\r\n        const addressObject = this.street.getPlace();\r\n        try {\r\n            console.log( addressObject.address_components)\r\n\r\n            const address = addressObject.address_components;\r\n\r\n            if (address) {\r\n                this.setState(\r\n                    {\r\n                        //query: addressObject.formatted_address,\r\n                        address2: {\r\n                            street: address[1].long_name + \" \" + address[0].long_name,\r\n                            town: address[2].long_name,\r\n                            country: address[address.length-1].long_name,\r\n                            latitude:addressObject.geometry.location.lat(),\r\n                            longitude: addressObject.geometry.location.lng()\r\n                        },\r\n                    }\r\n                );\r\n            }\r\n            this.state.pharmacy.address=this.state.address2;\r\n\r\n        }\r\n        catch{\r\n        //treba da printa gresku\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { selectedOption } = this.state;\r\n        return (\r\n            <div>\r\n                <h3 style={({ marginTop: '5rem', textAlignVertical: \"center\",textAlign: \"center\"})}>Pharmacy registration</h3>\r\n                <div className=\"row\" style={({ marginTop: '3rem' })} >\r\n                    <label className=\"col-sm-2 col-form-label\">Name</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.pharmacy.name} name=\"name\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"Pharmacy name\" />\r\n                        { this.state.submitted && this.state.errors.pharmacy.name.length > 0 &&  <span className=\"text-danger\">{this.state.errors.pharmacy.name}</span>}\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"row\" style={({ marginTop: '1rem' })} >\r\n                    <label className=\"col-sm-2 col-form-label\">Street</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <Script type=\"text/javascript\"url=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBFrua9P_qHcmF253UAXnw1wHnIC7nD2DY&libraries=places\" onLoad={this.handleScriptLoad}/>\r\n                        <input type=\"text\" id=\"street\" placeholder=\"Enter Street\" value={this.query}/>\r\n\r\n\r\n                        { this.state.submitted && this.state.errors.pharmacy.address.street.length > 0 &&  <span className=\"text-danger\">{this.state.errors.pharmacy.address.street}</span>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\" style={({ marginTop: '1rem' })} >\r\n                    <label className=\"col-sm-2 col-form-label\">Description</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.pharmacy.description} name=\"description\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"Description\" />\r\n                        { this.state.submitted && this.state.errors.pharmacy.description.length > 0 &&  <span className=\"text-danger\">{this.state.errors.pharmacy.description}</span>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\" style={({ marginTop: '1rem' })} >\r\n                    <label className=\"col-sm-2 col-form-label\">Dermatologist</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <Select isMulti isSearchable placeholder=\"Choose...\" value={selectedOption}\r\n                            onChange={this.handleDermatologistChange}\r\n                            options={options}\r\n                        />\r\n                        { this.state.submitted && this.state.errors.pharmacy.description.length > 0 &&  <span className=\"text-danger\">{this.state.errors.pharmacy.description}</span>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\" style={({ marginTop: '1rem' })} >\r\n                    <label className=\"col-sm-2 col-form-label\">Pharmacist</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <Select isMulti isSearchable placeholder=\"Choose...\" value={selectedOption}\r\n                            onChange={this.handlePharmacistChange}\r\n                            options={options}\r\n                        />\r\n                        { this.state.submitted && this.state.errors.pharmacy.pharmacist.length > 0 &&  <span className=\"text-danger\">{this.state.errors.pharmacy.pharmacist}</span>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\" style={({ marginTop: '1rem' })} >\r\n                    <label className=\"col-sm-2 col-form-label\">Pharmacy admin</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <Select isMulti isSearchable placeholder=\"Choose...\" value={selectedOption}\r\n                                onChange={this.handleAdminChange}\r\n                            options={options}\r\n                        />\r\n                        { this.state.submitted && this.state.errors.pharmacy.pharmacyAdmin.length > 0 &&  <span className=\"text-danger\">{this.state.errors.pharmacy.pharmacyAdmin}</span>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\" style={({ marginTop: '1rem' })} >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-5 mb-2\">\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <Button variant=\"primary\" onClick={this.submitForm} >Done</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\AddNewMedication.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\DermatologistRegistration.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\PharmacyAdminRegistration.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\WorkingHoursCalendar.js",[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":9,"column":8,"nodeType":"160","messageId":"161","endLine":9,"endColumn":29},{"ruleId":"158","severity":1,"message":"162","line":11,"column":8,"nodeType":"160","messageId":"161","endLine":11,"endColumn":30},{"ruleId":"163","severity":1,"message":"164","line":106,"column":66,"nodeType":"165","messageId":"166","endLine":106,"endColumn":68},{"ruleId":"158","severity":1,"message":"167","line":5,"column":10,"nodeType":"160","messageId":"161","endLine":5,"endColumn":25},{"ruleId":"163","severity":1,"message":"168","line":67,"column":32,"nodeType":"165","messageId":"166","endLine":67,"endColumn":34},{"ruleId":"163","severity":1,"message":"168","line":79,"column":32,"nodeType":"165","messageId":"166","endLine":79,"endColumn":34},{"ruleId":"163","severity":1,"message":"168","line":91,"column":32,"nodeType":"165","messageId":"166","endLine":91,"endColumn":34},{"ruleId":"158","severity":1,"message":"169","line":2,"column":17,"nodeType":"160","messageId":"161","endLine":2,"endColumn":21},{"ruleId":"158","severity":1,"message":"170","line":2,"column":17,"nodeType":"160","messageId":"161","endLine":2,"endColumn":28},{"ruleId":"158","severity":1,"message":"171","line":2,"column":9,"nodeType":"160","messageId":"161","endLine":2,"endColumn":18},{"ruleId":"158","severity":1,"message":"172","line":2,"column":20,"nodeType":"160","messageId":"161","endLine":2,"endColumn":23},{"ruleId":"158","severity":1,"message":"173","line":2,"column":25,"nodeType":"160","messageId":"161","endLine":2,"endColumn":28},{"ruleId":"158","severity":1,"message":"173","line":2,"column":9,"nodeType":"160","messageId":"161","endLine":2,"endColumn":12},{"ruleId":"158","severity":1,"message":"173","line":2,"column":17,"nodeType":"160","messageId":"161","endLine":2,"endColumn":20},{"ruleId":"158","severity":1,"message":"174","line":2,"column":22,"nodeType":"160","messageId":"161","endLine":2,"endColumn":26},{"ruleId":"158","severity":1,"message":"175","line":2,"column":28,"nodeType":"160","messageId":"161","endLine":2,"endColumn":33},{"ruleId":"158","severity":1,"message":"176","line":2,"column":35,"nodeType":"160","messageId":"161","endLine":2,"endColumn":40},{"ruleId":"158","severity":1,"message":"177","line":2,"column":42,"nodeType":"160","messageId":"161","endLine":2,"endColumn":46},{"ruleId":"158","severity":1,"message":"172","line":2,"column":61,"nodeType":"160","messageId":"161","endLine":2,"endColumn":64},{"ruleId":"158","severity":1,"message":"178","line":146,"column":15,"nodeType":"160","messageId":"161","endLine":146,"endColumn":19},{"ruleId":"179","severity":1,"message":"180","line":204,"column":73,"nodeType":"181","messageId":"182","endLine":204,"endColumn":74,"suggestions":"183"},{"ruleId":"158","severity":1,"message":"173","line":2,"column":17,"nodeType":"160","messageId":"161","endLine":2,"endColumn":20},{"ruleId":"158","severity":1,"message":"184","line":2,"column":8,"nodeType":"160","messageId":"161","endLine":2,"endColumn":18},{"ruleId":"158","severity":1,"message":"185","line":3,"column":8,"nodeType":"160","messageId":"161","endLine":3,"endColumn":25},{"ruleId":"158","severity":1,"message":"186","line":4,"column":8,"nodeType":"160","messageId":"161","endLine":4,"endColumn":27},{"ruleId":"158","severity":1,"message":"187","line":5,"column":8,"nodeType":"160","messageId":"161","endLine":5,"endColumn":33},{"ruleId":"158","severity":1,"message":"188","line":6,"column":8,"nodeType":"160","messageId":"161","endLine":6,"endColumn":32},{"ruleId":"158","severity":1,"message":"189","line":7,"column":8,"nodeType":"160","messageId":"161","endLine":7,"endColumn":33},{"ruleId":"190","severity":1,"message":"191","line":45,"column":25,"nodeType":"192","endLine":45,"endColumn":109},{"ruleId":"190","severity":1,"message":"191","line":48,"column":25,"nodeType":"192","endLine":48,"endColumn":107},{"ruleId":"190","severity":1,"message":"191","line":51,"column":25,"nodeType":"192","endLine":51,"endColumn":102},{"ruleId":"190","severity":1,"message":"191","line":54,"column":25,"nodeType":"192","endLine":54,"endColumn":104},{"ruleId":"190","severity":1,"message":"191","line":57,"column":25,"nodeType":"192","endLine":57,"endColumn":103},{"ruleId":"190","severity":1,"message":"191","line":60,"column":25,"nodeType":"192","endLine":60,"endColumn":101},{"ruleId":"190","severity":1,"message":"191","line":63,"column":25,"nodeType":"192","endLine":63,"endColumn":107},{"ruleId":"163","severity":1,"message":"168","line":82,"column":16,"nodeType":"165","messageId":"166","endLine":82,"endColumn":18},{"ruleId":"163","severity":1,"message":"168","line":84,"column":22,"nodeType":"165","messageId":"166","endLine":84,"endColumn":24},{"ruleId":"193","severity":1,"message":"194","line":133,"column":13,"nodeType":"195","endLine":133,"endColumn":32},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'PharmacistProfilePage' is defined but never used.","Identifier","unusedVar","'PharmacistWorkingHours' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'DateRangePicker' is defined but never used.","Expected '===' and instead saw '=='.","'Card' is defined but never used.","'FormControl' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","'Modal' is defined but never used.","'Table' is defined but never used.","'Grid' is defined but never used.","'user' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["198","199"],"'Promotions' is defined but never used.","'PharmacyEmployees' is defined but never used.","'PharmacyMedications' is defined but never used.","'PharmacyVacationsRequests' is defined but never used.","'PharmacyMedicationOrders' is defined but never used.","'PharmacyMedicationQueries' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation",{"messageId":"200","fix":"201","desc":"202"},{"messageId":"203","fix":"204","desc":"205"},"removeEscape",{"range":"206","text":"207"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"208","text":"209"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[9370,9371],"",[9370,9370],"\\"]