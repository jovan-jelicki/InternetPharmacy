[{"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\index.js":"1","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\App.js":"2","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\DermatologistHomePage.js":"3","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\IndexPage.js":"4","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\PatientProfilePage.js":"5","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\PharmacyPage.js":"6","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\ReviewedClients.js":"7","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\Registration.js":"8","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\VacationRequest.js":"9","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\PharmacistWorkingHours.js":"10","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\PharmacistHomePage.js":"11","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\PharmacistProfilePage.js":"12","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\DermatologistsProfilePage.js":"13","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\AllergyPatientListing.js":"14","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\UserInfo.js":"15","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\AddAllergy.js":"16","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\Login.js":"17","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\ChangePassword.js":"18","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\WorkingHoursCalendar.js":"19","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyVacationsRequests.js":"20","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyMedicationQueries.js":"21","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyMedications.js":"22","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\Promotions.js":"23","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyEmployees.js":"24","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyMedicationOrders.js":"25","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyDescription.js":"26","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\MedicationOrdersList.js":"27","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\MedicationOffers.js":"28"},{"size":457,"mtime":1610638960804,"results":"29","hashOfConfig":"30"},{"size":2049,"mtime":1610820378220,"results":"31","hashOfConfig":"30"},{"size":2884,"mtime":1610732409331,"results":"32","hashOfConfig":"30"},{"size":353,"mtime":1610820378517,"results":"33","hashOfConfig":"30"},{"size":7778,"mtime":1610829530761,"results":"34","hashOfConfig":"30"},{"size":5906,"mtime":1610820378298,"results":"35","hashOfConfig":"30"},{"size":3585,"mtime":1610820378298,"results":"36","hashOfConfig":"30"},{"size":9618,"mtime":1610804060132,"results":"37","hashOfConfig":"30"},{"size":2485,"mtime":1610820378314,"results":"38","hashOfConfig":"30"},{"size":1185,"mtime":1610820378298,"results":"39","hashOfConfig":"30"},{"size":3116,"mtime":1610820378298,"results":"40","hashOfConfig":"30"},{"size":3159,"mtime":1610820378298,"results":"41","hashOfConfig":"30"},{"size":3031,"mtime":1610732409331,"results":"42","hashOfConfig":"30"},{"size":1099,"mtime":1610820369283,"results":"43","hashOfConfig":"30"},{"size":2872,"mtime":1610732357348,"results":"44","hashOfConfig":"30"},{"size":1582,"mtime":1610820369283,"results":"45","hashOfConfig":"30"},{"size":4277,"mtime":1610804060100,"results":"46","hashOfConfig":"30"},{"size":2157,"mtime":1610759701698,"results":"47","hashOfConfig":"30"},{"size":2396,"mtime":1610820378236,"results":"48","hashOfConfig":"30"},{"size":5717,"mtime":1610820378564,"results":"49","hashOfConfig":"30"},{"size":291,"mtime":1610820378579,"results":"50","hashOfConfig":"30"},{"size":6922,"mtime":1610820378564,"results":"51","hashOfConfig":"30"},{"size":2774,"mtime":1610820378548,"results":"52","hashOfConfig":"30"},{"size":7562,"mtime":1610820378595,"results":"53","hashOfConfig":"30"},{"size":2445,"mtime":1610820378251,"results":"54","hashOfConfig":"30"},{"size":3157,"mtime":1610820378251,"results":"55","hashOfConfig":"30"},{"size":4472,"mtime":1610820378611,"results":"56","hashOfConfig":"30"},{"size":5243,"mtime":1610820378236,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"120gbu7",{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"60"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\index.js",[],["128","129"],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\App.js",["130","131"],"import React from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport IndexPage from \"./pages/IndexPage\";\r\nimport PatientProfilePage from \"./pages/PatientProfilePage\";\r\nimport PharmacyPage from \"./pages/PharmacyPage\";\r\nimport ReviewedClients from \"./pages/ReviewedClients\";\r\nimport VacationRequest from \"./pages/VacationRequest\";\r\nimport DermatologistHomePage from \"./pages/DermatologistHomePage\";\r\nimport PharmacistProfilePage from \"./pages/PharmacistProfilePage\";\r\nimport PharmacistHomePage from \"./pages/PharmacistHomePage\";\r\nimport PharmacistWorkingHours from \"./pages/PharmacistWorkingHours\";\r\nimport Registration from \"./pages/Registration\";\r\n\r\n\r\nexport default class App extends React.Component {\r\n  constructor () {\r\n    super();\r\n    this.state = {\r\n      userRole : \"\",\r\n      username : \"\",\r\n      Id : \"\"\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const role = \"Admin\";\r\n    const Id = this.state.Id;\r\n    return (\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route exact path=\"/\"  render={(props) => <IndexPage {...props} role={role} /> } />\r\n            <Route path=\"/patient-profile\" render={(props) => <PatientProfilePage {...props} role={role} /> } />\r\n            <Route path=\"/pharmacy\"  component={PharmacyPage} role={role}/>\r\n            <Route path=\"/reviewClients\"  render={(props) => <ReviewedClients {...props} role={role} Id={Id}/> } />\r\n            <Route path=\"/vacationRequest\" render={(props) => <VacationRequest {...props} role={role} Id={Id}/> } />\r\n            <Route path=\"/dermatologistHomePage\"  render={(props) => <DermatologistHomePage {...props} role={role} Id={Id}/> } />\r\n            <Route path=\"/pharmacistHomePage\"  render={(props) => <PharmacistHomePage {...props} role={role} Id={Id}/> } />\r\n            <Route path=\"/registration\"  component={Registration} role={role}/>\r\n\r\n          </Switch>\r\n        </BrowserRouter>\r\n    );\r\n  }\r\n\r\n  updateUserData = (role, username) => {\r\n    this.setState({\r\n      userRole : role,\r\n      username : username\r\n    })\r\n  }\r\n\r\n}\r\n","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\DermatologistHomePage.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\IndexPage.js",["132","133"],"import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\nimport Login from \"../components/Login\";\r\n\r\nexport default class IndexPage extends React.Component{\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Login/>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\PatientProfilePage.js",["134","135","136"],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\PharmacyPage.js",["137","138","139","140","141","142","143"],"import React from 'react';\r\nimport Promotions from \"../components/pharmacy/Promotions\";\r\nimport PharmacyEmployees from \"../components/pharmacy/PharmacyEmployees\";\r\nimport PharmacyMedications from \"../components/pharmacy/PharmacyMedications\";\r\nimport PharmacyVacationsRequests from \"../components/pharmacy/PharmacyVacationsRequests\";\r\nimport PharmacyMedicationOrders from \"../components/pharmacy/PharmacyMedicationOrders\";\r\nimport PharmacyMedicationQueries from \"../components/pharmacy/PharmacyMedicationQueries\";\r\nimport PharmacyDescription from \"../components/pharmacy/PharmacyDescription\";\r\n\r\n\r\nexport default class PharmacyPage extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pharmacy : {\r\n                id : 0,\r\n                name : \"\",\r\n                address : {\r\n                    street : \"\",\r\n                    town : \"\",\r\n                    country : \"\",\r\n                    latitude : 51.507351,\r\n                    longitude : -0.127758\r\n                },\r\n                description : \"\",\r\n                dermatologist : [],\r\n                pharmacist : [],\r\n                medicationQuantity : [],\r\n                medicationReservation : [],\r\n                grade : 0\r\n            },\r\n            navbar : \"description\",\r\n            userType : \"pharmacyAdmin\"\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let pharmacy = {\r\n            id: 0,\r\n            name: \"Jankovic\",\r\n            grade : 3.89,\r\n            address: {\r\n                street: \"Gunduliceva 1A\",\r\n                town: \"Novi Sad\",\r\n                country: \"Serbia\",\r\n                longitude: -0.118092,\r\n                latitude: 51.509865\r\n            },\r\n            description: \"Apoteka za sve!\",\r\n            dermatologist: [\r\n                {\r\n                    id: 0,\r\n                    firstName: \"Marko\",\r\n                    lastName: \"Markovic\",\r\n                    userType: \"dermatologist\"\r\n                }\r\n            ],\r\n            pharmacist: [\r\n                {\r\n                    id: 0,\r\n                    firstName: \"Dragana\",\r\n                    lastName: \"Markovic\",\r\n                    userType: \"dermatologist\"\r\n                }\r\n            ],\r\n        }\r\n        this.setState({\r\n            pharmacy : pharmacy\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron jumbotron-fluid\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-4\">{this.state.pharmacy.name}</h1>\r\n                    <p className=\"lead\">{this.state.pharmacy.description}</p>\r\n                    <p className=\"lead\">{'ocena apoteke : '+ this.state.pharmacy.grade}</p>\r\n                </div>\r\n\r\n\r\n                <ul className=\"nav justify-content-center\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"description\" onClick={this.handleChange}>Description</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" href='#' onClick={this.handleChange} name=\"employees\">Dermatolozi & farmaceuti</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"medications\" onClick={this.handleChange}>Lekovi</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"vacationRequests\" onClick={this.handleChange} style={this.state.userType === 'pharmacyAdmin' ? {display : 'block'} : {display : 'none'}}>Godisnji odmori</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"promotions\" onClick={this.handleChange}>Akcije & promocije</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"medicationOrders\" onClick={this.handleChange} style={this.state.userType === 'pharmacyAdmin' ? {display : 'block'} : {display : 'none'}}>Narudzbenice & ponude</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"medicationQueries\" onClick={this.handleChange} style={this.state.userType === 'pharmacyAdmin' ? {display : 'block'} : {display : 'none'}}>Upiti nad lekovima</a>\r\n                    </li>\r\n                </ul>\r\n                {this.renderNavbar()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            navbar : name\r\n        });\r\n    }\r\n\r\n    renderNavbar = () => {\r\n        if (this.state.navbar === \"promotions\")\r\n            return (\r\n                <Promotions/>\r\n            );\r\n        else if (this.state.navbar === 'description')\r\n            return (\r\n                <PharmacyDescription pharmacy = {this.state.pharmacy } />\r\n            )\r\n        else if (this.state.navbar === \"employees\")\r\n            return (\r\n                <PharmacyEmployees pharmacyId = {this.state.pharmacy.id}/>\r\n            );\r\n        else if (this.state.navbar === \"medications\")\r\n            return (\r\n                <PharmacyMedications/>\r\n            );\r\n        else if (this.state.navbar === 'vacationRequests')\r\n            return (\r\n              <PharmacyVacationsRequests />\r\n            );\r\n        else if (this.state.navbar === 'medicationOrders')\r\n            return (\r\n                <PharmacyMedicationOrders showContent = 'listOrders'/>\r\n            );\r\n        else if (this.state.navbar === 'medicationQueries')\r\n            return (\r\n                <PharmacyMedicationQueries />\r\n            );\r\n    }\r\n}\r\n","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\ReviewedClients.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\Registration.js",["144","145","146","147","148","149","150","151"],"import React from \"react\";\r\nimport {Button, Col, Form, Modal, Table, Grid, FormControl, Row} from \"react-bootstrap\";\r\nimport \"../App.css\";\r\n\r\n\r\nexport default class Registration extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                'email': '',\r\n                'password': '',\r\n                'firstName': '',\r\n                'lastName': '',\r\n                'country': '',\r\n                'city': '',\r\n                'telephone': '',\r\n                'rePassword' : ''\r\n            },\r\n            errors:{\r\n                user: {\r\n                    'email': 'Enter email',\r\n                    'password': 'Enter password',\r\n                    'firstName': 'Enter First name',\r\n                    'lastName': 'Enter Last name',\r\n                    'country': 'Enter Country',\r\n                    'city': 'Enter City',\r\n                    'telephone': 'Enter Telephone',\r\n                    'rePassword' : 'Repeat password'\r\n                }\r\n            },\r\n            validForm: false,\r\n            submitted: false,\r\n\r\n\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.isValidPassword = this.isValidPassword.bind(this);\r\n\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        const user = this.state.user;\r\n        user[name] = value;\r\n\r\n        this.setState({ user });\r\n        this.validationErrorMessage(event);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rightPanel\">\r\n                <header>User - Registration</header>\r\n\r\n                <div className=\"row\">\r\n                    <label className=\"col-sm-2 col-form-label\">Name</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.firstName} name=\"firstName\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"First Name\" />\r\n                        { this.state.submitted && this.state.errors.user.firstName.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.firstName}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.lastName} name=\"lastName\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"Last Name\" />\r\n                        { this.state.submitted && this.state.errors.user.lastName.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.lastName}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Email</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"email\" value={this.state.user.email} name=\"email\" onChange={(e) => { this.handleInputChange(e)} }className=\"form-control\" id=\"email\" placeholder=\"example@gmail.com\" />\r\n                        { this.state.submitted && this.state.errors.user.email.length > 0 && <span className=\"text-danger\">{this.state.errors.user.email}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Tel</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.telephone} name=\"telephone\" onChange={(e) => { this.handleInputChange(e)} }  className=\"form-control\" id=\"telephone\" placeholder=\"+3810640333489\" />\r\n                        { this.state.submitted && this.state.errors.user.telephone.length > 0 && <span className=\"text-danger\">{this.state.errors.user.telephone}</span>}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Country</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.country} name=\"country\" onChange={(e) => { this.handleInputChange(e)} }  className=\"form-control\" id=\"country\" placeholder=\"Enter country\" />\r\n                        { this.state.submitted && this.state.errors.user.country.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.country}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">City</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.city} name=\"city\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" id=\"city\" placeholder=\"Enter city\" />\r\n                        { this.state.submitted && this.state.errors.user.city.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.city}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label className=\"col-sm-2 col-form-label\">Password</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <FormControl name=\"password\" type=\"password\" placeholder=\"Password\"  value={this.state.user.password} onChange={(e) => { this.handleInputChange(e)} }/>\r\n                        { this.state.submitted && this.state.errors.user.password.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.password}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Repeat password</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <FormControl name=\"rePassword\" type=\"password\" placeholder=\"Repeat new Password\" value={this.state.user.rePassword} onChange={(e) => { this.handleInputChange(e)} }/>\r\n                        { this.state.submitted && this.state.errors.user.rePassword.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.rePassword}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-5 mb-2\">\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <Button variant=\"primary\" onClick={this.submitForm} >Submit</Button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    submitForm = async (event) => {\r\n        this.setState({ submitted: true });\r\n        const user = this.state.user;\r\n        event.preventDefault();\r\n        if (this.validateForm(this.state.errors)) {\r\n            console.info('Valid Form')\r\n        } else {\r\n            console.log('Invalid Form')\r\n        }\r\n    }\r\n\r\n    validationErrorMessage = (event) => {\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n\r\n        switch (name) {\r\n            case 'firstName':\r\n                errors.user.firstName = value.length < 1 ? 'Enter First Name' : '';\r\n                break;\r\n            case 'lastName':\r\n                errors.user.lastName = value.length < 1 ? 'Enter Last Name' : '';\r\n                break;\r\n            case 'email':\r\n                errors.user.email = this.isValidEmail(value) ? '' : 'Email is not valid!';\r\n                break;\r\n            case 'telephone':\r\n                errors.user.telephone = this.isValidTelephone(value) ? 'Enter valid telephone number' : '';\r\n                break;\r\n            case 'country':\r\n                errors.user.country = value.length < 1 ?  'Enter Country' : '';\r\n                break;\r\n            case 'city':\r\n                errors.user.city = value.length < 1 ?  'Enter City' : '';\r\n                break;\r\n            case 'password':\r\n                errors.user.password = value.length < 1 ? 'Enter Password' : '';\r\n                break;\r\n            case 'rePassword':\r\n                errors.user.rePassword = this.isValidPassword(value) ? '' : 'This password must match the previous';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({ errors });\r\n    }\r\n\r\n    validateForm = (errors) => {\r\n        let valid = true;\r\n        Object.entries(errors.user).forEach(item => {\r\n            console.log(item)\r\n            item && item[1].length > 0 && (valid = false)\r\n        })\r\n        return valid;\r\n    }\r\n    isValidEmail = (value) => {\r\n        return !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,64}$/i.test(value))\r\n    }\r\n\r\n    isValidTelephone = (value) => {\r\n        return !(value && /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[0-9]{2,3}[-\\s\\./0-9]*$/i.test(value))\r\n    }\r\n\r\n    isValidPassword = (value) => {\r\n            if(this.state.user.password !== this.state.user.rePassword) {\r\n                return false;\r\n            }else{\r\n                return  true\r\n            }\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\VacationRequest.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\PharmacistWorkingHours.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\PharmacistHomePage.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\PharmacistProfilePage.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\pages\\DermatologistsProfilePage.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\AllergyPatientListing.js",["152"],"import React from \"react\";\r\nimport {Button, Card, Col, Row} from \"react-bootstrap\";\r\n\r\nclass AllergyPatientListing extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.removeAllergy = this.removeAllergy.bind(this);\r\n    }\r\n\r\n    removeAllergy(allergy) {\r\n        this.props.removeAllergy(allergy)\r\n    }\r\n\r\n    render() {\r\n        \r\n        const allergies = this.props.allergies.map((allergy, index) => {\r\n            return (\r\n                <Col xs={3}>\r\n                    <div className=\"m-2 bg-primary p-2\" style={{ height: '3rem' }}>\r\n                        {this.props.edit && <Button variant=\"primary\" className=\"mr-3 p-0\" style={{width: '1rem'}}\r\n                                 onClick={this.removeAllergy.bind(this, allergy.id)}>X</Button>}\r\n                        <label className='text-light'>{allergy.name}</label>\r\n                    </div>\r\n                </Col>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <Row>\r\n                {allergies}\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllergyPatientListing;","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\UserInfo.js",["153","154","155"],"import React from \"react\";\r\nimport {Container, Row, Col, Table, FormControl} from \"react-bootstrap\";\r\n\r\nclass UserInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        this.props.onChange(event)\r\n    }\r\n\r\n    render() {\r\n        let {user, edit} = this.props;\r\n\r\n        return (\r\n            <Table striped hover>\r\n                <tbody>\r\n                <tr>\r\n                    <td>First Name</td>\r\n                    {edit\r\n                        ? <FormControl name=\"firstName\" className=\"mt-2 mb-2\" value={user.firstName}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.firstName}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Last Name</td>\r\n                    {edit\r\n                        ? <FormControl name=\"lastName\" className=\"mt-2 mb-2\" value={user.lastName}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.lastName}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Email</td>\r\n                    <td>{user.email}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Address</td>\r\n                    {edit\r\n                        ? <FormControl name=\"address\" className=\"mt-2 mb-2\" value={user.address}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.address}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Town</td>\r\n                    {edit\r\n                        ? <FormControl name=\"town\" className=\"mt-2 mb-2\" value={user.town}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.town}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Country</td>\r\n                    {edit\r\n                        ? <FormControl name=\"country\" className=\"mt-2 mb-2\" value={user.country}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.country}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Phone Number</td>\r\n                    {edit\r\n                        ? <FormControl name=\"phoneNumber\" className=\"mt-2 mb-2\" value={user.phoneNumber}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.phoneNumber}</td>\r\n                    }\r\n                </tr>\r\n                </tbody>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserInfo;","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\AddAllergy.js",["156"],"import React from \"react\";\r\nimport {Button, FormControl} from \"react-bootstrap\";\r\nimport axios from 'axios';\r\n\r\nclass AddAllergy extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'allergy' : 'Add allergy',\r\n            'allergies' : []\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addAllergy = this.addAllergy.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await axios\r\n            .get('http://localhost:8080/api/ingredients')\r\n            .then(res => {\r\n                this.setState({\r\n                    'allergies' : res.data\r\n                })\r\n            });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({allergy: event.target.value});\r\n    }\r\n\r\n    addAllergy() {\r\n        this.props.addAllergy(this.state.allergies.filter(a => a.name === this.state.allergy)[0])\r\n    }\r\n\r\n    render() {\r\n        const allergies = this.state.allergies.map((allergy, index) => {\r\n            return <option value={allergy.name} key={index}>{allergy.name}</option>\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <select value={this.state.allergy} style={{width: '15rem'}} className=\"mr-2\"\r\n                        onChange={this.handleChange}>\r\n                    <option disabled>Add allergy</option>\r\n                    {allergies}\r\n                </select>\r\n                <Button variant=\"success\" className=\"mb-3\" onClick={this.addAllergy}>Add</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AddAllergy;","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\Login.js",["157"],"import React from \"react\";\r\nimport {Button, Col, Form, Modal} from \"react-bootstrap\";\r\n\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'password': '',\r\n            'email': '',\r\n            errors: {\r\n                'email': 'Enter Email.',\r\n                'password': 'Enter Password.'\r\n            },\r\n            submitted: false\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        alert('A name was submitted: ' + this.state.value);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n        this.validationErrorMessage(event);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Button type=\"button\" className=\"btn btn-secondary\"  onClick={this.handleModal}>Login</Button>\r\n\r\n                <Modal show={this.state.showModal} onHide={this.handleModal}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Login</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group size=\"lg\" controlId=\"email\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control autoFocus name=\"email\" placeholder=\"email\"  type=\"email\" value={this.state.email} onChange={(e) => { this.handleInputChange(e)} } />\r\n                                { this.state.submitted && this.state.errors.email.length > 0 &&  <span className=\"text-danger\">{this.state.errors.email}</span>}\r\n                            </Form.Group>\r\n                            <Form.Group size=\"lg\" controlId=\"password\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\"  name=\"password\" placeholder=\"password\"  value={this.state.password} onChange={(e) => { this.handleInputChange(e)} } />\r\n                                { this.state.submitted && this.state.errors.password.length > 0 &&  <span className=\"text-danger\">{this.state.errors.password}</span>}\r\n\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleModal}  >\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.loginForm}>\r\n                            Ok\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n    handleModal = () => {\r\n        this.setState({\r\n            showModal : !this.state.showModal,\r\n            password: '',\r\n            'email': '',\r\n        });\r\n    }\r\n    validationErrorMessage = (event) => {\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n        switch (name) {\r\n            case 'email':\r\n                errors.email = this.isValidEmail(value) ? '' : 'Wrong email format. Please check and try again.';\r\n                break;\r\n            case 'password':\r\n                errors.password = value.length < 1 ? 'Enter Password' : '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({ errors });\r\n    }\r\n\r\n    validateForm = (errors) => {\r\n        let valid = true;\r\n        Object.entries(errors).forEach(item => {\r\n            console.log(item)\r\n            item && item[1].length > 0 && (valid = false)\r\n        })\r\n        return valid;\r\n    }\r\n    isValidEmail = (value) => {\r\n        return !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,64}$/i.test(value))\r\n    }\r\n\r\n    loginForm = async (event) => {\r\n        this.setState({ submitted: true });\r\n        event.preventDefault();\r\n        if (this.validateForm(this.state.errors)) {\r\n            console.log('Valid Form')\r\n        } else {\r\n            console.log('Invalid Form')\r\n        }\r\n    }\r\n\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\ChangePassword.js",["158"],"import React from \"react\";\r\nimport {Col, Container, FormControl, Row} from \"react-bootstrap\";\r\n\r\nclass ChangePassword extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'repErr' : ''\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.validatePassword = this.validatePassword.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        this.props.onChange(event);\r\n        this.validatePassword(event);\r\n    }\r\n\r\n    validatePassword(event) {\r\n        let repErr = ''\r\n        let val = event.target.value;\r\n        let newPass = this.props.pass[1]\r\n\r\n        if (event.target.name === 'repPass')\r\n            if(val !== newPass.substr(0, Math.min(val.length, newPass.length)) ||\r\n                (val.trim() === '' && newPass.trim() !== '')) {\r\n                repErr = 'This password must match the previous';\r\n                this.props.disable(true);\r\n            }\r\n            else\r\n                this.props.disable(false);\r\n\r\n        this.setState({\r\n            'repErr': repErr\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h2 className=\"pt-4 pb-3\">Change Password</h2>\r\n                <Row className=\"m-2\">\r\n                    <FormControl name=\"oldPass\" type=\"password\" placeholder=\"Password\"\r\n                                 value={this.props.pass[0]} onChange={this.handleInputChange}/>\r\n                </Row>\r\n                <Row className=\"m-2\">\r\n                    <FormControl name=\"newPass\" type=\"password\" placeholder=\"New Password\"\r\n                                 value={this.props.pass[1]} onChange={this.handleInputChange}/>\r\n                </Row>\r\n                <Row className=\"m-2\">\r\n                    <FormControl name=\"repPass\" type=\"password\" placeholder=\"Repeat new Password\"\r\n                                 value={this.props.pass[2]} onChange={this.handleInputChange}/>\r\n                    <label className=\"text-danger\">{this.state.repErr}</label>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChangePassword;","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\WorkingHoursCalendar.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyVacationsRequests.js",["159","160","161"],"import React from 'react';\r\nimport {Button, Form, FormControl, Modal, Navbar} from \"react-bootstrap\";\r\n\r\nexport default class PharmacyVacationsRequests extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            vacationRequests : [],\r\n            userType : 'pharmacyAdmin',\r\n            showModal : false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let vacationRequests = [\r\n            {\r\n                periodStart : '21.2.2021.',\r\n                periodEnd : '03.03.2021.',\r\n                vacationNote : 'Bahami',\r\n                employeeFirstName : 'Marko',\r\n                employeeLastName : 'Jugovic',\r\n                vacationRequestStatus : 'requested',\r\n                employeeType : 'pharmacist',\r\n                rejectionNote : ''\r\n            },\r\n            {\r\n                periodStart : '21.5.2021.',\r\n                periodEnd : '03.06.2021.',\r\n                vacationNote : 'Covid-19',\r\n                employeeFirstName : 'Dejan',\r\n                employeeLastName : 'Petrovic',\r\n                vacationRequestStatus : 'approved',\r\n                employeeType : 'dermatologist',\r\n                rejectionNote : ''\r\n            },\r\n            {\r\n                periodStart : '21.2.2021.',\r\n                periodEnd : '03.10.2021.',\r\n                vacationNote : 'Beba',\r\n                employeeFirstName : 'Dijana',\r\n                employeeLastName : 'Jankovic',\r\n                vacationRequestStatus : 'rejected',\r\n                employeeType : 'pharmacist',\r\n                rejectionNote : ''\r\n            }\r\n        ];\r\n\r\n        this.setState({\r\n            vacationRequests : vacationRequests\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div>\r\n                    <br/><br/>\r\n                    <h1>Trazena & odobrena odsustva</h1>\r\n\r\n                    <br/>\r\n\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Ime</th>\r\n                            <th scope=\"col\">Prezime</th>\r\n                            <th scope=\"col\">Tip radnika</th>\r\n                            <th scope=\"col\">Razlog</th>\r\n                            <th scope=\"col\">Pocetak odsustva</th>\r\n                            <th scope=\"col\">Kraj odsustva</th>\r\n                            <th scope=\"col\">Status</th>\r\n\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.state.vacationRequests.map((vacationRequest, index) => (\r\n                            <tr>\r\n                                <th scope=\"row\">{index+1}</th>\r\n                                <td>{vacationRequest.employeeFirstName}</td>\r\n                                <td>{vacationRequest.employeeLastName}</td>\r\n                                <td>{vacationRequest.employeeType}</td>\r\n                                <td>{vacationRequest.vacationNote}</td>\r\n                                <td>{vacationRequest.periodStart}</td>\r\n                                <td>{vacationRequest.periodEnd}</td>\r\n                                <td>{vacationRequest.vacationRequestStatus}</td>\r\n\r\n                                <td style={this.state.userType === 'pharmacyAdmin' && vacationRequest.vacationRequestStatus === 'requested' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                                    <Button variant=\"outline-success\" onClick={this.handleModal}>\r\n                                        Odobri\r\n                                    </Button>\r\n                                </td >\r\n                                <td style={this.state.userType === 'pharmacyAdmin' && vacationRequest.vacationRequestStatus === 'requested' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                                    <Button variant=\"outline-danger\" onClick={this.handleModal}>\r\n                                        Otkazi\r\n                                    </Button>\r\n                                </td >\r\n                                <td style={this.state.userType === 'pharmacyAdmin' && vacationRequest.vacationRequestStatus === 'rejected' ? {display : 'none'} : {}}>\r\n                                </td >\r\n                                <td style={this.state.userType === 'pharmacyAdmin' && vacationRequest.vacationRequestStatus === 'rejected' ? {display : 'none'} : {}}>\r\n                                </td >\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </table>\r\n\r\n\r\n\r\n                    <Modal show={this.state.showModal} onHide={this.handleModal}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Modal heading</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={this.handleModal}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={this.handleModal}>\r\n                                Save Changes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleModal = () => {\r\n        this.setState({\r\n            showModal : !this.state.showModal\r\n        });\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyMedicationQueries.js",["162"],"import React from 'react';\r\n\r\nexport default class PharmacyMedicationQueries extends React.Component{\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                a\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyMedications.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\Promotions.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyEmployees.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyMedicationOrders.js",["163","164","165","166"],"import React from 'react';\r\nimport {Button, Modal, FormControl, Navbar} from \"react-bootstrap\";\r\nimport MedicationOrdersList from \"./MedicationOrdersList\";\r\nimport MedicationOffers from \"./MedicationOffers\";\r\n\r\nexport default class PharmacyMedicationOrders extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userType : 'pharmacyAdmin',\r\n            medicationOrders : [],\r\n            showModal : false,\r\n            showContent : 'listOrders'\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (this.state.showContent === 'showOffers' && nextState.showContent === 'showOffers') //when clicking on navbar st default behaviour to listOrders\r\n            this.setState({\r\n                showContent : 'listOrders'\r\n            })\r\n        return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        let medicationOrders = [\r\n            {\r\n                pharmacyAdmin : {\r\n                    firstName : 'Mirko',\r\n                    lastName : 'Mirkovic'\r\n                },\r\n                deadLine : '21.3.2021.',\r\n                medicationQuantity: {\r\n\r\n                },\r\n                status : 'pending',\r\n                medicationOffers : []\r\n            },\r\n            {\r\n                pharmacyAdmin : {\r\n                    firstName : 'Jelena',\r\n                    lastName : 'Rozga'\r\n                },\r\n                deadLine : '13.5.2021.',\r\n                medicationQuantity: {\r\n\r\n                },\r\n                status : 'processed',\r\n                medicationOffers : []\r\n            }\r\n        ];\r\n\r\n        this.setState({\r\n            medicationOrders : medicationOrders,\r\n            showContent : this.props.showContent\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br/><br/>\r\n                {this.handleContent()}\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n    handleContent = () => {\r\n        if (this.state.showContent === 'listOrders')\r\n            return (\r\n                <MedicationOrdersList showOffers={this.changeContent} />\r\n            );\r\n        else if (this.state.showContent === 'showOffers')\r\n            return (\r\n              <MedicationOffers order = {this.state.medicationOrders[0]}  />\r\n            );\r\n    }\r\n\r\n    changeContent = (content) => {\r\n        this.setState({\r\n            showContent : content\r\n        })\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyDescription.js",["167"],"import React from 'react';\r\nimport { Map, GoogleApiWrapper, InfoWindow, Marker} from 'google-maps-react';\r\nimport {PharmacyPage} from \"../../pages/PharmacyPage\";\r\n\r\nconst mapStyles = {\r\n    width: '50%',\r\n    height: '50%'\r\n};\r\n\r\n\r\nexport class PharmacyDescription extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userType : 'pharmacyAdmin',\r\n            pharmacy : this.props.pharmacy,\r\n            showingInfoWindow: false,  // Hides or shows the InfoWindow\r\n            activeMarker: {},          // Shows the active marker upon click\r\n            selectedPlace: {},\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"card\">\r\n                                <h5 className=\"card-header\">\r\n                                    {this.state.pharmacy.description}\r\n                                </h5>\r\n                                <div className=\"card-body\">\r\n                                    <p className=\"card-text\">\r\n                                        Address : {this.state.pharmacy.address.street} <br/>\r\n                                        Grade : {this.state.pharmacy.grade} <br/>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Map\r\n                    google={this.props.google}\r\n                    zoom={14}\r\n                    style={mapStyles}\r\n                    initialCenter={\r\n                        {\r\n                            lat: this.state.pharmacy.address.latitude,\r\n                            lng: this.state.pharmacy.address.longitude\r\n                        }\r\n                    }\r\n                >\r\n                    <Marker\r\n                        onClick={this.onMarkerClick}\r\n                        name={this.state.pharmacy.address.street}\r\n                    />\r\n                    <InfoWindow\r\n                        marker={this.state.activeMarker}\r\n                        visible={this.state.showingInfoWindow}\r\n                        onClose={this.onClose}\r\n                    >\r\n                        <div>\r\n                            <h4>{this.state.selectedPlace.name}</h4>\r\n                        </div>\r\n                    </InfoWindow>\r\n                </Map>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onMarkerClick = (props, marker, e) =>\r\n        this.setState({\r\n            selectedPlace: props,\r\n            activeMarker: marker,\r\n            showingInfoWindow: true\r\n        });\r\n\r\n    onClose = props => {\r\n        if (this.state.showingInfoWindow) {\r\n            this.setState({\r\n                showingInfoWindow: false,\r\n                activeMarker: null\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyBFrua9P_qHcmF253UAXnw1wHnIC7nD2DY'\r\n})(PharmacyDescription)","C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\MedicationOrdersList.js",[],"C:\\Users\\Asus\\Desktop\\ISA\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\MedicationOffers.js",[],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":9,"column":8,"nodeType":"174","messageId":"175","endLine":9,"endColumn":29},{"ruleId":"172","severity":1,"message":"176","line":11,"column":8,"nodeType":"174","messageId":"175","endLine":11,"endColumn":30},{"ruleId":"172","severity":1,"message":"177","line":2,"column":9,"nodeType":"174","messageId":"175","endLine":2,"endColumn":15},{"ruleId":"178","severity":1,"message":"179","line":6,"column":5,"nodeType":"180","messageId":"181","endLine":8,"endColumn":6},{"ruleId":"172","severity":1,"message":"182","line":2,"column":43,"nodeType":"174","messageId":"175","endLine":2,"endColumn":48},{"ruleId":"183","severity":1,"message":"184","line":150,"column":69,"nodeType":"185","messageId":"186","endLine":150,"endColumn":71},{"ruleId":"187","severity":1,"message":"188","line":167,"column":13,"nodeType":"189","messageId":"186","endLine":167,"endColumn":23},{"ruleId":"190","severity":1,"message":"191","line":88,"column":25,"nodeType":"192","endLine":88,"endColumn":105},{"ruleId":"190","severity":1,"message":"191","line":91,"column":25,"nodeType":"192","endLine":91,"endColumn":110},{"ruleId":"190","severity":1,"message":"191","line":94,"column":25,"nodeType":"192","endLine":94,"endColumn":105},{"ruleId":"190","severity":1,"message":"191","line":97,"column":25,"nodeType":"192","endLine":97,"endColumn":201},{"ruleId":"190","severity":1,"message":"191","line":100,"column":25,"nodeType":"192","endLine":100,"endColumn":104},{"ruleId":"190","severity":1,"message":"191","line":103,"column":25,"nodeType":"192","endLine":103,"endColumn":201},{"ruleId":"190","severity":1,"message":"191","line":106,"column":25,"nodeType":"192","endLine":106,"endColumn":202},{"ruleId":"172","severity":1,"message":"193","line":2,"column":17,"nodeType":"174","messageId":"175","endLine":2,"endColumn":20},{"ruleId":"172","severity":1,"message":"194","line":2,"column":22,"nodeType":"174","messageId":"175","endLine":2,"endColumn":26},{"ruleId":"172","severity":1,"message":"195","line":2,"column":28,"nodeType":"174","messageId":"175","endLine":2,"endColumn":33},{"ruleId":"172","severity":1,"message":"196","line":2,"column":35,"nodeType":"174","messageId":"175","endLine":2,"endColumn":40},{"ruleId":"172","severity":1,"message":"197","line":2,"column":42,"nodeType":"174","messageId":"175","endLine":2,"endColumn":46},{"ruleId":"172","severity":1,"message":"198","line":2,"column":61,"nodeType":"174","messageId":"175","endLine":2,"endColumn":64},{"ruleId":"172","severity":1,"message":"199","line":146,"column":15,"nodeType":"174","messageId":"175","endLine":146,"endColumn":19},{"ruleId":"200","severity":1,"message":"201","line":204,"column":73,"nodeType":"202","messageId":"203","endLine":204,"endColumn":74,"suggestions":"204"},{"ruleId":"172","severity":1,"message":"205","line":2,"column":17,"nodeType":"174","messageId":"175","endLine":2,"endColumn":21},{"ruleId":"172","severity":1,"message":"206","line":2,"column":9,"nodeType":"174","messageId":"175","endLine":2,"endColumn":18},{"ruleId":"172","severity":1,"message":"198","line":2,"column":20,"nodeType":"174","messageId":"175","endLine":2,"endColumn":23},{"ruleId":"172","severity":1,"message":"193","line":2,"column":25,"nodeType":"174","messageId":"175","endLine":2,"endColumn":28},{"ruleId":"172","severity":1,"message":"207","line":2,"column":17,"nodeType":"174","messageId":"175","endLine":2,"endColumn":28},{"ruleId":"172","severity":1,"message":"193","line":2,"column":17,"nodeType":"174","messageId":"175","endLine":2,"endColumn":20},{"ruleId":"172","severity":1,"message":"193","line":2,"column":9,"nodeType":"174","messageId":"175","endLine":2,"endColumn":12},{"ruleId":"172","severity":1,"message":"194","line":2,"column":17,"nodeType":"174","messageId":"175","endLine":2,"endColumn":21},{"ruleId":"172","severity":1,"message":"207","line":2,"column":23,"nodeType":"174","messageId":"175","endLine":2,"endColumn":34},{"ruleId":"172","severity":1,"message":"208","line":2,"column":43,"nodeType":"174","messageId":"175","endLine":2,"endColumn":49},{"ruleId":"178","severity":1,"message":"179","line":4,"column":5,"nodeType":"180","messageId":"181","endLine":6,"endColumn":6},{"ruleId":"172","severity":1,"message":"177","line":2,"column":9,"nodeType":"174","messageId":"175","endLine":2,"endColumn":15},{"ruleId":"172","severity":1,"message":"195","line":2,"column":17,"nodeType":"174","messageId":"175","endLine":2,"endColumn":22},{"ruleId":"172","severity":1,"message":"207","line":2,"column":24,"nodeType":"174","messageId":"175","endLine":2,"endColumn":35},{"ruleId":"172","severity":1,"message":"208","line":2,"column":37,"nodeType":"174","messageId":"175","endLine":2,"endColumn":43},{"ruleId":"172","severity":1,"message":"209","line":3,"column":9,"nodeType":"174","messageId":"175","endLine":3,"endColumn":21},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"no-unused-vars","'PharmacistProfilePage' is defined but never used.","Identifier","unusedVar","'PharmacistWorkingHours' is defined but never used.","'Button' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Toast' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'userType'.","ObjectExpression","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Col' is defined but never used.","'Form' is defined but never used.","'Modal' is defined but never used.","'Table' is defined but never used.","'Grid' is defined but never used.","'Row' is defined but never used.","'user' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["212","213"],"'Card' is defined but never used.","'Container' is defined but never used.","'FormControl' is defined but never used.","'Navbar' is defined but never used.","'PharmacyPage' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"214","fix":"215","desc":"216"},{"messageId":"217","fix":"218","desc":"219"},"removeEscape",{"range":"220","text":"221"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"222","text":"223"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[9368,9369],"",[9368,9368],"\\"]