[{"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\index.js":"1","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\App.js":"2","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PatientProfilePage.js":"3","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\VacationRequest.js":"4","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\ReviewedClients.js":"5","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\DermatologistHomePage.js":"6","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\DermatologistsProfilePage.js":"7","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\AllergyPatientListing.js":"8","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\AddAllergy.js":"9","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\UserInfo.js":"10","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\ChangePassword.js":"11","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\Registration.js":"12","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\Login.js":"13","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PharmacistProfilePage.js":"14","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PharmacistWorkingHours.js":"15","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PharmacistHomePage.js":"16","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\ISAdminHomePage.js":"17","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\SupplierRegistration.js":"18","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\LoyaltyProgram.js":"19","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\Complaints.js":"20","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\PharmacyRegistration.js":"21","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\AddNewMedication.js":"22","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\DermatologistRegistration.js":"23","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\PharmacyAdminRegistration.js":"24","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\WorkingHoursCalendar.js":"25","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PharmacyPage.js":"26","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\IndexPage.js":"27","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyEmployees.js":"28","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyMedicationOrders.js":"29","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyVacationsRequests.js":"30","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyMedicationQueries.js":"31","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\Promotions.js":"32","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyDescription.js":"33","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyMedications.js":"34","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PriceList.js":"35","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyReports.js":"36","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\MedicationListing.jsx":"37","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyListing.jsx":"38","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\layout\\UnregisteredLayout.jsx":"39","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\MedicationOrdersList.js":"40","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\MedicationOffers.js":"41","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\CreateOrder.js":"42","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\DermatologistWorkingHours.js":"43","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\CreatePharmacist.js":"44","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacySearch.jsx":"45","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\OrderQuantityListing.js":"46","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\AddMedicationQuantity.js":"47","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\AutoCompleteInput.jsx":"48"},{"size":457,"mtime":1610652333975,"results":"49","hashOfConfig":"50"},{"size":2234,"mtime":1610974344032,"results":"51","hashOfConfig":"50"},{"size":7733,"mtime":1610974351859,"results":"52","hashOfConfig":"50"},{"size":2485,"mtime":1610808222437,"results":"53","hashOfConfig":"50"},{"size":4443,"mtime":1610974351849,"results":"54","hashOfConfig":"50"},{"size":3138,"mtime":1610974351847,"results":"55","hashOfConfig":"50"},{"size":3247,"mtime":1610974351848,"results":"56","hashOfConfig":"50"},{"size":1099,"mtime":1610890782549,"results":"57","hashOfConfig":"50"},{"size":1582,"mtime":1610890782549,"results":"58","hashOfConfig":"50"},{"size":2872,"mtime":1610711910735,"results":"59","hashOfConfig":"50"},{"size":2157,"mtime":1610973595308,"results":"60","hashOfConfig":"50"},{"size":12884,"mtime":1611012958023,"results":"61","hashOfConfig":"50"},{"size":4277,"mtime":1610808222432,"results":"62","hashOfConfig":"50"},{"size":3375,"mtime":1610974351849,"results":"63","hashOfConfig":"50"},{"size":1185,"mtime":1610890782559,"results":"64","hashOfConfig":"50"},{"size":3116,"mtime":1610808222434,"results":"65","hashOfConfig":"50"},{"size":4011,"mtime":1610974344040,"results":"66","hashOfConfig":"50"},{"size":12687,"mtime":1611013483655,"results":"67","hashOfConfig":"50"},{"size":340,"mtime":1610974344034,"results":"68","hashOfConfig":"50"},{"size":327,"mtime":1610974344033,"results":"69","hashOfConfig":"50"},{"size":10302,"mtime":1611011814111,"results":"70","hashOfConfig":"50"},{"size":348,"mtime":1610974344032,"results":"71","hashOfConfig":"50"},{"size":12998,"mtime":1611013163297,"results":"72","hashOfConfig":"50"},{"size":348,"mtime":1610974344034,"results":"73","hashOfConfig":"50"},{"size":2396,"mtime":1610890782550,"results":"74","hashOfConfig":"50"},{"size":6760,"mtime":1610890782560,"results":"75","hashOfConfig":"50"},{"size":651,"mtime":1610974351848,"results":"76","hashOfConfig":"50"},{"size":11581,"mtime":1610974351845,"results":"77","hashOfConfig":"50"},{"size":2917,"mtime":1610890782554,"results":"78","hashOfConfig":"50"},{"size":6230,"mtime":1610974351846,"results":"79","hashOfConfig":"50"},{"size":291,"mtime":1610890782574,"results":"80","hashOfConfig":"50"},{"size":2791,"mtime":1610974351847,"results":"81","hashOfConfig":"50"},{"size":3157,"mtime":1610890782552,"results":"82","hashOfConfig":"50"},{"size":7821,"mtime":1610974351846,"results":"83","hashOfConfig":"50"},{"size":813,"mtime":1610890782556,"results":"84","hashOfConfig":"50"},{"size":816,"mtime":1610890782555,"results":"85","hashOfConfig":"50"},{"size":4162,"mtime":1610974351842,"results":"86","hashOfConfig":"50"},{"size":3209,"mtime":1610974351845,"results":"87","hashOfConfig":"50"},{"size":1081,"mtime":1610890782558,"results":"88","hashOfConfig":"50"},{"size":5638,"mtime":1610974351844,"results":"89","hashOfConfig":"50"},{"size":5237,"mtime":1610890782551,"results":"90","hashOfConfig":"50"},{"size":3192,"mtime":1610974351843,"results":"91","hashOfConfig":"50"},{"size":1166,"mtime":1610974351848,"results":"92","hashOfConfig":"50"},{"size":11304,"mtime":1610974351844,"results":"93","hashOfConfig":"50"},{"size":2602,"mtime":1610974351846,"results":"94","hashOfConfig":"50"},{"size":1172,"mtime":1610974351844,"results":"95","hashOfConfig":"50"},{"size":2536,"mtime":1610974351843,"results":"96","hashOfConfig":"50"},{"size":1929,"mtime":1610974351842,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"1rfaw5s",{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"100"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"100"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"100"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"100"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"100"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"100"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"100"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"100"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"100"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"100"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"100"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"100"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"100"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"100"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"100"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"100"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"100"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"100"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"100"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"100"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"100"},"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\index.js",[],["223","224"],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\App.js",["225","226"],"import React from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport IndexPage from \"./pages/IndexPage\";\r\nimport PatientProfilePage from \"./pages/PatientProfilePage\";\r\nimport PharmacyPage from \"./pages/PharmacyPage\";\r\nimport ReviewedClients from \"./pages/ReviewedClients\";\r\nimport VacationRequest from \"./pages/VacationRequest\";\r\nimport DermatologistHomePage from \"./pages/DermatologistHomePage\";\r\nimport PharmacistProfilePage from \"./pages/PharmacistProfilePage\";\r\nimport PharmacistHomePage from \"./pages/PharmacistHomePage\";\r\nimport PharmacistWorkingHours from \"./pages/PharmacistWorkingHours\";\r\nimport Registration from \"./pages/Registration\";\r\nimport {ISAdminHomePage} from \"./pages/ISAdminHomePage\";\r\n\r\n\r\nexport default class App extends React.Component {\r\n  constructor () {\r\n    super();\r\n    this.state = {\r\n      userRole : \"\",\r\n      username : \"\",\r\n      Id : \"\"\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const role = \"Admin\";\r\n    const Id = this.state.Id;\r\n    document.title = \"Internet Pharmacy\"\r\n    return (\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route exact path=\"/\"  render={(props) => <IndexPage {...props} role={role} /> } />\r\n            <Route path=\"/patient-profile\" render={(props) => <PatientProfilePage {...props} role={role} /> } />\r\n            <Route path=\"/pharmacy\"  component={PharmacyPage} role={role}/>\r\n            <Route path=\"/reviewClients\"  render={(props) => <ReviewedClients {...props} role={role} Id={Id}/> } />\r\n            <Route path=\"/vacationRequest\" render={(props) => <VacationRequest {...props} role={role} Id={Id}/> } />\r\n            <Route path=\"/dermatologistHomePage\"  render={(props) => <DermatologistHomePage {...props} role={role} Id={Id}/> } />\r\n            <Route path=\"/pharmacistHomePage\"  render={(props) => <PharmacistHomePage {...props} role={role} Id={Id}/> } />\r\n            <Route path=\"/registration\"  component={Registration} role={role}/>\r\n            <Route path=\"/pharmacyAdmin\"  component={ISAdminHomePage} role={role}/>\r\n\r\n          </Switch>\r\n        </BrowserRouter>\r\n    );\r\n  }\r\n\r\n  updateUserData = (role, username) => {\r\n    this.setState({\r\n      userRole : role,\r\n      username : username\r\n    })\r\n  }\r\n\r\n}\r\n","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PatientProfilePage.js",["227","228"],"import React from \"react\";\r\nimport {Col, Container, Nav, Row, Button, Toast} from \"react-bootstrap\";\r\nimport UserInfo from \"../components/UserInfo\";\r\nimport AllergyPatientListing from \"../components/AllergyPatientListing\";\r\nimport AddAllergy from \"../components/AddAllergy\";\r\nimport ChangePassword from \"../components/ChangePassword\";\r\nimport axios from \"axios\"\r\n\r\nexport default class PatientProfilePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'firstName' : '',\r\n            'lastName' : '',\r\n            'email' : '',\r\n            'address' : '',\r\n            'town' : '',\r\n            'country' : '',\r\n            'phoneNumber' : '',\r\n            'oldPass' : '',\r\n            'newPass' : '',\r\n            'repPass' : '',\r\n            'allergies' : [],\r\n            'editMode' : false,\r\n            'saveDisabled' : false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        await axios\r\n            .get('http://localhost:8080/api/patients/1')\r\n            .then(res => {\r\n                let patient = res.data;\r\n                console.log(patient)\r\n                this.setState({\r\n                    'id' : patient.id,\r\n                    'firstName' : patient.firstName,\r\n                    'lastName' : patient.lastName,\r\n                    'email' : patient.credentials.email,\r\n                    'password' : patient.credentials.password,\r\n                    'penaltyCount' : patient.penaltyCount,\r\n                    'userType' : patient.userType,\r\n                    'editMode' : false,\r\n                    'changePasswordMode' : false,\r\n                    'address' : patient.contact.address.street,\r\n                    'town' : patient.contact.address.town,\r\n                    'country' : patient.contact.address.country,\r\n                    'phoneNumber' : patient.contact.phoneNumber\r\n                })\r\n            });\r\n\r\n        await axios\r\n            .get('http://localhost:8080/api/patients/allergies/1')\r\n            .then(res => {\r\n                this.setState({\r\n                    'allergies' : res.data\r\n                })\r\n            });\r\n\r\n        this.createBackupUser();\r\n    }\r\n\r\n    createBackupUser = () => {\r\n        this.user = {\r\n            'firstName' : this.state.firstName,\r\n            'lastName' : this.state.lastName,\r\n            'email' : this.state.email,\r\n            'address' : this.state.address,\r\n            'town' : this.state.town,\r\n            'country' : this.state.country,\r\n            'phoneNumber' : this.state.phoneNumber,\r\n            'allergies' : [...this.state.allergies]\r\n        }\r\n\r\n        this.setState({\r\n            'editMode' : false,\r\n            'changePasswordMode' : false\r\n        })\r\n    }\r\n\r\n    activateUpdateMode = () => {\r\n        this.resetData();\r\n        this.setState({\r\n            editMode : !this.state.editMode,\r\n            changePasswordMode : false\r\n        })\r\n    }\r\n\r\n    activateChangePasswordMode = () => {\r\n        this.setState({\r\n            'saveDisabled' : !this.state.changePasswordMode,\r\n            'changePasswordMode' : !this.state.changePasswordMode,\r\n            'oldPass' : '',\r\n            'newPass' : '',\r\n            'repPass' : ''\r\n        })\r\n    }\r\n\r\n    changePass = () => {\r\n        axios\r\n        .put('http://localhost:8080/api/patients/pass', {\r\n            'userId' : this.state.id,\r\n            'oldPassword' : this.state.oldPass,\r\n            'newPassword' : this.state.newPass,\r\n            'repeatedPassword' : this.state.repPass\r\n        })\r\n        .then(res => {\r\n            this.setState({\r\n                'password' : this.state.newPass\r\n            })\r\n        })\r\n        .catch(e => alert('Nisam pijana i nece moci!!!'));\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        this.setState({\r\n            [target.name] : target.value,\r\n        })\r\n    }\r\n\r\n    resetData = () => {\r\n        this.setState({\r\n            'firstName' : this.user.firstName,\r\n            'lastName' : this.user.lastName,\r\n            'address' : this.user.address,\r\n            'town' : this.user.town,\r\n            'country' : this.user.country,\r\n            'phoneNumber' : this.user.phoneNumber,\r\n            'allergies' : this.user.allergies\r\n        })\r\n    }\r\n\r\n    disableSave = (disable) => {\r\n        this.setState({\r\n            'saveDisabled' : disable\r\n        })\r\n    }\r\n\r\n    addAllergy = (allergy) => {\r\n        if(!this.state.allergies.map(a => a.id).includes(allergy.id))\r\n            this.setState({\r\n                'allergies' : [...this.state.allergies, allergy]\r\n            })\r\n    }\r\n\r\n    removeAllergy = (allergy) => {\r\n        this.setState({\r\n            'allergies' : [...this.state.allergies.filter(a => a.id != allergy)]\r\n        })\r\n    }\r\n\r\n    save = () => {\r\n        axios\r\n        .put('http://localhost:8080/api/patients', {\r\n            'id' : this.state.id,\r\n            'firstName' : this.state.firstName,\r\n            'lastName' : this.state.lastName,\r\n            //'userType' : this.state.userType,\r\n            'allergies' : this.state.allergies,\r\n            'credentials' : {\r\n                'email' : this.state.email,\r\n                'password' : this.state.password\r\n            },\r\n            'penaltyCount' : this.state.penaltyCount,\r\n            'contact' : {\r\n                'phoneNumber' : this.state.phoneNumber,\r\n                'address' : {\r\n                    'street' : this.state.address,\r\n                    'town' : this.state.town,\r\n                    'country' : this.state.country\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            if(this.state.changePasswordMode)\r\n                this.changePass();\r\n            this.createBackupUser();\r\n        });\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        const {oldPass, newPass, repPass} = this.state;\r\n        const passwords = [oldPass, newPass, repPass]\r\n\r\n        return (\r\n            <Container fluid>\r\n                <Row className=\"pt-5\">\r\n                    <Col xs={2}>\r\n                        <Nav defaultActiveKey=\"/home\" className=\"flex-column\">\r\n                            {!this.state.editMode\r\n                                ? <Button variant=\"primary\" onClick={this.activateUpdateMode}>Edit</Button>\r\n                                : <Button variant=\"outline-secondary\" onClick={this.activateUpdateMode}>Cancel</Button>\r\n                            }\r\n                            {this.state.editMode && <Button variant=\"primary mt-2\"\r\n                                                            onClick={this.activateChangePasswordMode}>\r\n                                Change Password</Button>}\r\n                            {this.state.editMode && <Button variant=\"success mt-2\" \r\n                            disabled={this.state.saveDisabled} onClick={this.save}>Save</Button>}\r\n                        </Nav>\r\n                    </Col>\r\n                    <Col>\r\n                        <UserInfo user={this.state} edit={this.state.editMode} onChange={this.handleInputChange}/>\r\n                        <h2 className=\"pt-4 pb-3\">Allergies</h2>\r\n                        {this.state.editMode && <AddAllergy addAllergy={this.addAllergy}/>}\r\n                        <AllergyPatientListing edit={this.state.editMode}\r\n                            allergies={this.state.allergies} removeAllergy={this.removeAllergy}/>\r\n                        {this.state.changePasswordMode &&\r\n                        <ChangePassword pass={passwords} onChange={this.handleInputChange} disable={this.disableSave}/>}\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\VacationRequest.js",["229"],"import React from \"react\";\r\nimport {Col, Container,  Row, Button} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nexport default class VacationRequest extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employeeId : props.Id,\r\n            startDate : \"\",\r\n            endDate : \"\",\r\n            pharmacy : \"\",\r\n            employeeType : props.role,\r\n            vacationNote : \"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n    render() {\r\n        let pharmacies = [\"hemofarm\", \"jankovic\"];\r\n        const  PharmaciesTag = pharmacies.map((pharmacy, key) =>\r\n            <option value={pharmacy}> {pharmacy} </option>\r\n        );\r\n        return (\r\n            <Container>\r\n                <br/>\r\n                <h2> Create request for vacation or absence</h2>\r\n                <br/>\r\n                <Row>\r\n                    <Col xs={2}> <p> Choose period: </p> </Col>\r\n                    <Col xs={-4}> <DatePicker  selected={this.state.startDate} minDate={new Date()} onChange={date => this.setState({startDate : date})} /> </Col>\r\n                    <Col xs={-4}> <DatePicker  selected={this.state.endDate} minDate={new Date()} onChange={date => this.setState({endDate : date})} /> </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={2}> <p> Choose pharmacy: </p> </Col>\r\n                    <Col xs={-4}>\r\n                            <select value={this.state.pharmacy} onChange={value => this.setState({ pharmacy : value.target.value})}>\r\n                                {PharmaciesTag}\r\n                            </select>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <p> Reason :</p>\r\n                        <textarea className=\"form-control\"  rows=\"5\" cols=\"30\"\r\n                                  placeholder=\"Type reason...\" id=\"comment\" value={this.state.vacationNote} onChange={text => this.setState({vacationNote : text.target.value})}/>\r\n                    </Col>\r\n                </Row>\r\n                <Button onClick={this.sendData}> Submit </Button>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n\r\n    sendData = () => {\r\n        alert(this.state.vacationNote.toString())\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\ReviewedClients.js",["230"],"import React from \"react\";\r\nimport {Col, Container, Row, Button, Table, FormControl, FormGroup} from \"react-bootstrap\";\r\n\r\nexport default class ReviewedClients extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            role : props.role,\r\n            Id : props.Id,\r\n            clients : [{\r\n            firstName: \"Aovan\",\r\n            lastName: \"Jelicki\",\r\n            dateOfAppointment: \"20.01.2021.\"\r\n            },\r\n             {\r\n            firstName: \"Pera\",\r\n            lastName: \"Peric\",\r\n            dateOfAppointment: \"10.01.2021.\"\r\n            }],\r\n            searchClients : [],\r\n            query : \"\",\r\n            sortType : \"desc\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            searchClients : this.state.clients\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const Clients = this.state.searchClients.map((client, key) =>\r\n            <tr>\r\n                <td>{client.firstName}</td>\r\n                <td>{client.lastName}</td>\r\n                <td>{client.dateOfAppointment}</td>\r\n            </tr>\r\n        );\r\n        return (\r\n\r\n            <Container>\r\n                <br/>\r\n                <FormGroup as={Row} >\r\n                    <Button onClick={this.sortByFirstName} style={{height : 40}}  type=\"button\" className=\"btn btn-secondary\"> Sort by first name</Button>\r\n                    <Button onClick={this.sortByLastName} style={{height : 40}} type=\"button\" className=\"btn btn-secondary\"> Sort by last name</Button>\r\n                    <Button onClick={this.sortByDateOfAppointment} style={{height : 40}} type=\"button\" className=\"btn btn-secondary\"> Sort by date of appointment</Button>\r\n                    <FormControl className=\"mt-2 mb-2\" style={{width : 200, marginLeft : 200}} value={this.state.query} placeholder={\"Search clients...\"} onChange={this.handleInputChange} />\r\n                </FormGroup>\r\n                <Table style={{\"borderWidth\":\"1px\", 'borderColor':\"#aaaaaa\", 'borderStyle':'solid'}} striped hover>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>First name</th>\r\n                            <th>Last name</th>\r\n                            <th>Date of appointment</th>\r\n                        </tr>\r\n                        {Clients}\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n\r\n        );\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const query = event.target.value;\r\n        const clients = this.state.clients;\r\n        if (query !== \"\" && query)\r\n            this.setState({\r\n                searchClients : clients.filter(c => (c.firstName + c.lastName).toLowerCase().includes(query.toLowerCase().replace(/\\s/g, ''))),\r\n                query : query\r\n            })\r\n        else\r\n            this.setState(({\r\n                searchClients : this.state.clients,\r\n                query : query\r\n            }))\r\n    }\r\n\r\n    sortByFirstName = () => {\r\n        if(this.state.sortType === \"desc\")\r\n            this.setState({\r\n                searchClients: this.state.searchClients.sort((a, b) => (a.firstName > b.firstName) ? -1 : 1),\r\n                sortType : \"asc\"\r\n            })\r\n        else\r\n            this.setState({\r\n                searchClients: this.state.searchClients.sort((a, b) => (a.firstName > b.firstName) ? 1 : -1),\r\n                sortType : \"desc\"\r\n            })\r\n    }\r\n    sortByLastName = () => {\r\n        if(this.state.sortType === \"desc\")\r\n            this.setState({\r\n                ssearchClients: this.state.searchClients.sort((a, b) => (a.lastName > b.lastName) ? -1 : 1),\r\n                sortType : \"asc\"\r\n            })\r\n        else\r\n            this.setState({\r\n                searchClients: this.state.searchClients.sort((a, b) => (a.lastName > b.lastName) ? 1 : -1),\r\n                sortType : \"desc\"\r\n            })\r\n    }\r\n    sortByDateOfAppointment = () => {\r\n        if(this.state.sortType === \"desc\")\r\n            this.setState({\r\n                searchClients: this.state.searchClients.sort((a, b) => (a.dateOfAppointment > b.dateOfAppointment) ? -1 : 1),\r\n                sortType : \"asc\"\r\n            })\r\n        else\r\n            this.setState({\r\n                searchClients: this.state.searchClients.sort((a, b) => (a.dateOfAppointment > b.dateOfAppointment) ? 1 : -1),\r\n                sortType : \"desc\"\r\n            })\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\DermatologistHomePage.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\DermatologistsProfilePage.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\AllergyPatientListing.js",["231"],"import React from \"react\";\r\nimport {Button, Card, Col, Row} from \"react-bootstrap\";\r\n\r\nclass AllergyPatientListing extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.removeAllergy = this.removeAllergy.bind(this);\r\n    }\r\n\r\n    removeAllergy(allergy) {\r\n        this.props.removeAllergy(allergy)\r\n    }\r\n\r\n    render() {\r\n        const allergies = this.props.allergies.map((allergy, index) => {\r\n            return (\r\n                <Col xs={3} >\r\n                    <div className=\"m-2 bg-primary p-2\" style={{ height: '3rem' }}>\r\n                        {this.props.edit && <Button variant=\"primary\" className=\"mr-3 p-0\" style={{width: '1rem'}}\r\n                                 onClick={this.removeAllergy.bind(this, allergy)}>X</Button>}\r\n                        {allergy}\r\n                    </div>\r\n                </Col>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <Row>\r\n                {allergies}\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllergyPatientListing;","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\AddAllergy.js",["232"],"import React from \"react\";\r\nimport {Button, FormControl} from \"react-bootstrap\";\r\n\r\nclass AddAllergy extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'allergy' : '',\r\n            'allergies' : []\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addAllergy = this.addAllergy.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            'allergies' : ['a10', 'a11', 'a12', 'a13']\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({allergy: event.target.value});\r\n    }\r\n\r\n    addAllergy() {\r\n        this.props.addAllergy(this.state.allergy)\r\n    }\r\n\r\n    render() {\r\n        const allergies = this.state.allergies.map((allergy, index) => {\r\n            return <option value={allergy} key={index}>{allergy}</option>\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <select value={this.state.allergy} style={{width: '15rem'}} className=\"mr-2\"\r\n                        onChange={this.handleChange}>\r\n                    {allergies}\r\n                </select>\r\n                <Button variant=\"success\" className=\"mb-3\" onClick={this.addAllergy}>Add</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AddAllergy;","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\UserInfo.js",["233","234","235"],"import React from \"react\";\r\nimport {Container, Row, Col, Table, FormControl} from \"react-bootstrap\";\r\n\r\nclass UserInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        this.props.onChange(event)\r\n    }\r\n\r\n    render() {\r\n        let {user, edit} = this.props;\r\n\r\n        return (\r\n            <Table striped hover>\r\n                <tbody>\r\n                <tr>\r\n                    <td>First Name</td>\r\n                    {edit\r\n                        ? <FormControl name=\"firstName\" className=\"mt-2 mb-2\" value={user.firstName}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.firstName}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Last Name</td>\r\n                    {edit\r\n                        ? <FormControl name=\"lastName\" className=\"mt-2 mb-2\" value={user.lastName}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.lastName}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Email</td>\r\n                    <td>{user.email}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Address</td>\r\n                    {edit\r\n                        ? <FormControl name=\"address\" className=\"mt-2 mb-2\" value={user.address}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.address}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Town</td>\r\n                    {edit\r\n                        ? <FormControl name=\"town\" className=\"mt-2 mb-2\" value={user.town}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.town}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Country</td>\r\n                    {edit\r\n                        ? <FormControl name=\"country\" className=\"mt-2 mb-2\" value={user.country}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.country}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Phone Number</td>\r\n                    {edit\r\n                        ? <FormControl name=\"phoneNumber\" className=\"mt-2 mb-2\" value={user.phoneNumber}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.phoneNumber}</td>\r\n                    }\r\n                </tr>\r\n                </tbody>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserInfo;","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\ChangePassword.js",["236"],"import React from \"react\";\r\nimport {Col, Container, FormControl, Row} from \"react-bootstrap\";\r\n\r\nclass ChangePassword extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'repErr' : ''\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.validatePassword = this.validatePassword.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        this.props.onChange(event);\r\n        this.validatePassword(event);\r\n    }\r\n\r\n    validatePassword(event) {\r\n        let repErr = ''\r\n        let val = event.target.value;\r\n        let newPass = this.props.pass[1]\r\n\r\n        if (event.target.name === 'repPass')\r\n            if(val !== newPass.substr(0, Math.min(val.length, newPass.length)) ||\r\n                (val.trim() === '' && newPass.trim() !== '')) {\r\n                repErr = 'This password must match the previous';\r\n                this.props.disable(true);\r\n            }\r\n            else\r\n                this.props.disable(false);\r\n\r\n        this.setState({\r\n            'repErr': repErr\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h2 className=\"pt-4 pb-3\">Change Password</h2>\r\n                <Row className=\"m-2\">\r\n                    <FormControl name=\"oldPass\" type=\"password\" placeholder=\"Password\"\r\n                                 value={this.props.pass[0]} onChange={this.handleInputChange}/>\r\n                </Row>\r\n                <Row className=\"m-2\">\r\n                    <FormControl name=\"newPass\" type=\"password\" placeholder=\"New Password\"\r\n                                 value={this.props.pass[1]} onChange={this.handleInputChange}/>\r\n                </Row>\r\n                <Row className=\"m-2\">\r\n                    <FormControl name=\"repPass\" type=\"password\" placeholder=\"Repeat new Password\"\r\n                                 value={this.props.pass[2]} onChange={this.handleInputChange}/>\r\n                    <label className=\"text-danger\">{this.state.repErr}</label>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChangePassword;","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\Registration.js",["237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256"],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\Login.js",["257"],"import React from \"react\";\r\nimport {Button, Col, Form, Modal} from \"react-bootstrap\";\r\n\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'password': '',\r\n            'email': '',\r\n            errors: {\r\n                'email': 'Enter Email.',\r\n                'password': 'Enter Password.'\r\n            },\r\n            submitted: false\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        alert('A name was submitted: ' + this.state.value);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n        this.validationErrorMessage(event);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Button type=\"button\" className=\"btn btn-secondary\"  onClick={this.handleModal}>Login</Button>\r\n\r\n                <Modal show={this.state.showModal} onHide={this.handleModal}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Login</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group size=\"lg\" controlId=\"email\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control autoFocus name=\"email\" placeholder=\"email\"  type=\"email\" value={this.state.email} onChange={(e) => { this.handleInputChange(e)} } />\r\n                                { this.state.submitted && this.state.errors.email.length > 0 &&  <span className=\"text-danger\">{this.state.errors.email}</span>}\r\n                            </Form.Group>\r\n                            <Form.Group size=\"lg\" controlId=\"password\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\"  name=\"password\" placeholder=\"password\"  value={this.state.password} onChange={(e) => { this.handleInputChange(e)} } />\r\n                                { this.state.submitted && this.state.errors.password.length > 0 &&  <span className=\"text-danger\">{this.state.errors.password}</span>}\r\n\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleModal}  >\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.loginForm}>\r\n                            Ok\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n    handleModal = () => {\r\n        this.setState({\r\n            showModal : !this.state.showModal,\r\n            password: '',\r\n            'email': '',\r\n        });\r\n    }\r\n    validationErrorMessage = (event) => {\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n        switch (name) {\r\n            case 'email':\r\n                errors.email = this.isValidEmail(value) ? '' : 'Wrong email format. Please check and try again.';\r\n                break;\r\n            case 'password':\r\n                errors.password = value.length < 1 ? 'Enter Password' : '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({ errors });\r\n    }\r\n\r\n    validateForm = (errors) => {\r\n        let valid = true;\r\n        Object.entries(errors).forEach(item => {\r\n            console.log(item)\r\n            item && item[1].length > 0 && (valid = false)\r\n        })\r\n        return valid;\r\n    }\r\n    isValidEmail = (value) => {\r\n        return !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,64}$/i.test(value))\r\n    }\r\n\r\n    loginForm = async (event) => {\r\n        this.setState({ submitted: true });\r\n        event.preventDefault();\r\n        if (this.validateForm(this.state.errors)) {\r\n            console.log('Valid Form')\r\n        } else {\r\n            console.log('Invalid Form')\r\n        }\r\n    }\r\n\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PharmacistProfilePage.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PharmacistWorkingHours.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PharmacistHomePage.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\ISAdminHomePage.js",["258","259","260","261","262","263","264"],"import React from \"react\";\r\nimport PharmacyRegistration from \"../components/PharmacyRegistration\";\r\nimport DermatologistRegistration from \"../components/DermatologistRegistration\";\r\nimport SupplierRegistration from \"../components/SupplierRegistration\";\r\nimport AddNewMedication from \"../components/AddNewMedication\";\r\nimport Complaints from \"../components/Complaints\";\r\nimport LoyaltyProgram from \"../components/LoyaltyProgram\";\r\nimport PharmacyAdminRegistration from \"../components/PharmacyAdminRegistration\";\r\n\r\nexport class ISAdminHomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            pharmacyAdmin:{\r\n                firstName:'',\r\n                lastName:'',\r\n            },\r\n            navbar : \"\",\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let  pharmacyAdmin= {\r\n            firstName: 'Snezana',\r\n            lastName: 'Bulajic',\r\n        }\r\n        this.setState({\r\n            pharmacyAdmin : pharmacyAdmin\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron jumbotron-fluid\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-4\">{this.state.pharmacyAdmin.firstName +\" \" +this.state.pharmacyAdmin.lastName }</h1>\r\n                </div>\r\n\r\n                <ul className=\"nav justify-content-center\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" href='#' onClick={this.handleChange} name=\"pharmacy\">Pharmacy registration</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"dermatologist\" onClick={this.handleChange}>Dermatologist registration</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"supplier\" onClick={this.handleChange}>Supplier registration</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"medication\" onClick={this.handleChange}>Add medication</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"complaint\" onClick={this.handleChange}>Complaint</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"loyalty\" onClick={this.handleChange}>Loyalty program</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"pharmacyAdmin\" onClick={this.handleChange}>Add new pharmacy admin</a>\r\n                    </li>\r\n\r\n                </ul>\r\n                {this.renderNavbar()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            navbar : name\r\n        });\r\n    }\r\n\r\n    renderNavbar = () => {\r\n        if (this.state.navbar === \"pharmacy\")\r\n            return (\r\n                <PharmacyRegistration/>\r\n            );\r\n        else if (this.state.navbar === \"dermatologist\")\r\n            return (\r\n                <DermatologistRegistration/>\r\n            );\r\n        else if (this.state.navbar === \"supplier\")\r\n            return (\r\n                <SupplierRegistration/>\r\n            );\r\n        else if (this.state.navbar === \"medication\")\r\n            return (\r\n                <AddNewMedication/>\r\n            );\r\n        else if (this.state.navbar === \"complaint\")\r\n            return (\r\n                <Complaints/>\r\n            );\r\n        else if (this.state.navbar === \"loyalty\")\r\n            return (\r\n                <LoyaltyProgram/>\r\n            );else if (this.state.navbar === \"pharmacyAdmin\")\r\n            return (\r\n                <PharmacyAdminRegistration/>\r\n            );\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\SupplierRegistration.js",["265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283"],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\LoyaltyProgram.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\Complaints.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\PharmacyRegistration.js",["284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301"],"import React from \"react\";\r\nimport {Button, Container} from \"react-bootstrap\";\r\nimport Script from 'react-load-script';\r\nimport Select from \"react-select\";\r\n\r\nconst options = [\r\n    { value: 'Marko', label: 'Marko Markovic' },\r\n    { value: 'Zoran', label: 'Zoran Petrovic' },\r\n    { value: 'Ana', label: 'Ana Matic' },\r\n];\r\n\r\nexport default class PharmacyRegistration extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            pharmacy: {\r\n                name: '',\r\n                description: '',\r\n                pharmacyAdmin: [],\r\n                address: {\r\n                    street: \"\",\r\n                    town: \"\",\r\n                    country: \"\",\r\n                    latitude: 51.507351,\r\n                    longitude: -0.127758\r\n                },\r\n            },\r\n            selectedOption: null,\r\n            numberOfRows: 1,\r\n            streetP: \"\",\r\n            townP: \"\",\r\n            countryP: \"\",\r\n            errors: {\r\n                pharmacy: {\r\n                    name: 'Enter name',\r\n                    description: 'Enter description',\r\n                    address: 'Choose address',\r\n                    pharmacyAdmin: 'Select admin',\r\n                },\r\n            }\r\n        }\r\n    }\r\n\r\n    handleAdminChange = selectedOption => {\r\n        const newitems = this.state.pharmacy.pharmacyAdmin\r\n        newitems.push(selectedOption)\r\n\r\n        this.setState({\r\n            pharmacyAdmin: newitems\r\n        });\r\n        console.log(`Option selected:`, selectedOption);\r\n        this.selectErrors(selectedOption)\r\n\r\n    };\r\n\r\n    handleInputChange = (event) => {\r\n\r\n        const {name, value} = event.target;\r\n\r\n        const pharmacy = this.state.pharmacy;\r\n        pharmacy[name] = value;\r\n\r\n        console.log(this.state.pharmacy)\r\n        this.setState({pharmacy});\r\n        this.validationErrorMessage(event);\r\n    }\r\n\r\n    handleScriptLoad = () => {\r\n        var input = document.getElementById('street');\r\n        var options = {\r\n            types: ['geocode'] //this should work !\r\n        };\r\n        const google = window.google\r\n\r\n        this.street = new google.maps.places.Autocomplete(input, options);\r\n        this.street.addListener('place_changed', this.handlePlaceSelect);\r\n    }\r\n\r\n    handlePlaceSelect = () => {\r\n        const addressObject = this.street.getPlace();\r\n        try {\r\n            //console.log( addressObject.address_components)\r\n            const address = addressObject.address_components;\r\n            if (address) {\r\n                if (this.setAddressParams(address)) {\r\n                    this.setState(\r\n                        {\r\n                            pharmacy: {\r\n                                address: {\r\n                                    street: this.state.streetP,\r\n                                    town: this.state.townP,\r\n                                    country: this.state.countryP,\r\n                                    latitude: addressObject.geometry.location.lat(),\r\n                                    longitude: addressObject.geometry.location.lng()\r\n                                }\r\n                            },\r\n                        }\r\n                    );\r\n                }\r\n            } else {\r\n                this.addressErrors(false)\r\n            }\r\n        } catch {\r\n            this.addressErrors(false)\r\n        }\r\n    }\r\n\r\n    setAddressParams = (address) => {\r\n        var street, number, city, country, completeAddress, i;\r\n        for (i = 0; i < address.length; i++) {\r\n            if (address[i].types == \"route\") {\r\n                street = address[i].long_name;\r\n            } else if (address[i].types == \"street_numbe\") {\r\n                number = address[i].long_name;\r\n            } else if (address[i].types[0] == \"locality\") {\r\n                city = address[i].long_name;\r\n            } else if (address[i].types[0] == \"country\") {\r\n                country = address[i].long_name;\r\n            }\r\n        }\r\n        completeAddress = street + \" \" + number + \" \" + city + \" \" + country;\r\n\r\n        if (street == undefined || street == \"\" || city == undefined || city == \"\" || country == undefined || country == \"\") {\r\n            this.addressErrors(false)\r\n            return false;\r\n        } else {\r\n            this.addressErrors(true)\r\n            this.state.townP = city;\r\n            this.state.countryP = country;\r\n            if (number == undefined)\r\n                this.state.streetP = street;\r\n            else\r\n                this.state.streetP = street + number;\r\n        }\r\n        return true;\r\n    }\r\n    selectErrors = (value) => {\r\n        let errors = this.state.errors;\r\n        errors.pharmacy.pharmacyAdmin = value.length < 1 ? 'Select pharmacy admin' : '';\r\n        this.setState({errors});\r\n    }\r\n    addressErrors = (bool) => {\r\n        let errors = this.state.errors;\r\n        if (bool == false) {\r\n            //.log(\"Nisam dobro prosla\")\r\n            errors.pharmacy.address = 'Please choose valid address';\r\n        } else {\r\n            //console.log(\"DObro sam prosla \");\r\n            errors.pharmacy.address = \"\";\r\n        }\r\n        this.setState({errors});\r\n    }\r\n\r\n    validationErrorMessage = (event) => {\r\n        const {name, value} = event.target;\r\n        let errors = this.state.errors;\r\n        switch (name) {\r\n            case 'name':\r\n                errors.pharmacy.name = value.length < 1 ? 'Enter Name' : '';\r\n                break;\r\n            case 'description':\r\n                errors.pharmacy.description = value.length < 1 ? 'Enter Description' : '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({errors});\r\n    }\r\n\r\n    submitForm = async (event) => {\r\n        this.setState({submitted: true});\r\n        const pharmacy = this.state.pharmacy;\r\n        event.preventDefault();\r\n        if (this.validateForm(this.state.errors)) {\r\n            console.info('Valid Form')\r\n        } else {\r\n            console.log('Invalid Form')\r\n        }\r\n    }\r\n    validateForm = (errors) => {\r\n        let valid = true;\r\n        Object.entries(errors.pharmacy).forEach(item => {\r\n            console.log(item)\r\n            item && item[1].length > 0 && (valid = false)\r\n        })\r\n        return valid;\r\n    }\r\n\r\n\r\n    render() {\r\n        const {selectedOption} = this.state;\r\n        return (\r\n            <Container style={{\r\n                background: 'rgb(232, 244, 248 )',\r\n                color: 'rgb(0, 92, 230)',\r\n            }}>\r\n                <h3 style={({marginTop: '5rem', textAlignVertical: \"center\", textAlign: \"center\"})}>Pharmacy\r\n                    registration</h3>\r\n                <div class=\"row\"\r\n                     style={{marginTop: '3rem', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                    <label className=\"col-sm-2 col-form-label\">Name</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.pharmacy.name} name=\"name\" onChange={(e) => { this.handleInputChange(e)}} className=\"form-control\" placeholder=\"Pharmacy name\"/>\r\n                        {this.state.submitted && this.state.errors.pharmacy.name.length > 0 && <span className=\"text-danger\">{this.state.errors.pharmacy.name}</span>}\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"row\" style={{margin: '1rem', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                    <label className=\"col-sm-2 col-form-label\">Address</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <Script type=\"text/javascript\" url=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBFrua9P_qHcmF253UAXnw1wHnIC7nD2DY&libraries=places\" onLoad={this.handleScriptLoad}/>\r\n                        <input type=\"text\" id=\"street\" placeholder=\"Enter Address\" value={this.query}/>\r\n                        {this.state.submitted && this.state.errors.pharmacy.address.length > 0 &&  <span className=\"text-danger\">{this.state.errors.pharmacy.address}</span>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\"\r\n                     style={{margin: '1rem', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                    <label className=\"col-sm-2 col-form-label\">Description</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.pharmacy.description} name=\"description\" onChange={(e) => {\r\n                            this.handleInputChange(e)\r\n                        }} className=\"form-control\" placeholder=\"Description\"/>\r\n                        {this.state.submitted && this.state.errors.pharmacy.description.length > 0 &&\r\n                        <span className=\"text-danger\">{this.state.errors.pharmacy.description}</span>}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row\" style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                    <label className=\"col-sm-2 col-form-label\">Pharmacy admin</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <Select isSearchable placeholder=\"Choose...\" value={selectedOption}\r\n                                onChange={this.handleAdminChange}\r\n                                options={options}\r\n                        />\r\n                        {this.state.submitted && this.state.errors.pharmacy.pharmacyAdmin.length > 0 &&\r\n                        <span className=\"text-danger\">{this.state.errors.pharmacy.pharmacyAdmin}</span>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\"\r\n                     style={{margin: '1rem', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-5 mb-2\">\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <Button variant=\"primary\" onClick={this.submitForm}>Done</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\AddNewMedication.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\DermatologistRegistration.js",["302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321"],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\PharmacyAdminRegistration.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\WorkingHoursCalendar.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\PharmacyPage.js",["322","323","324","325","326","327","328","329","330"],"import React from 'react';\r\nimport Promotions from \"../components/pharmacy/Promotions\";\r\nimport PharmacyEmployees from \"../components/pharmacy/PharmacyEmployees\";\r\nimport PharmacyMedications from \"../components/pharmacy/PharmacyMedications\";\r\nimport PharmacyVacationsRequests from \"../components/pharmacy/PharmacyVacationsRequests\";\r\nimport PharmacyMedicationOrders from \"../components/pharmacy/PharmacyMedicationOrders\";\r\nimport PharmacyMedicationQueries from \"../components/pharmacy/PharmacyMedicationQueries\";\r\nimport PharmacyDescription from \"../components/pharmacy/PharmacyDescription\";\r\nimport PriceList from \"../components/pharmacy/PriceList\";\r\nimport PharmacyReports from \"../components/pharmacy/PharmacyReports\";\r\n\r\n\r\nexport default class PharmacyPage extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pharmacy : {\r\n                id : 0,\r\n                name : \"\",\r\n                address : {\r\n                    street : \"\",\r\n                    town : \"\",\r\n                    country : \"\",\r\n                    latitude : 51.507351,\r\n                    longitude : -0.127758\r\n                },\r\n                description : \"\",\r\n                dermatologist : [],\r\n                pharmacist : [],\r\n                medicationQuantity : [],\r\n                medicationReservation : [],\r\n                grade : 0\r\n            },\r\n            navbar : \"description\",\r\n            userType : \"pharmacyAdmin\"\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let pharmacy = {\r\n            id: 0,\r\n            name: \"Jankovic\",\r\n            grade : 3.89,\r\n            address: {\r\n                street: \"Gunduliceva 1A\",\r\n                town: \"Novi Sad\",\r\n                country: \"Serbia\",\r\n                longitude: -0.118092,\r\n                latitude: 51.509865\r\n            },\r\n            description: \"Apoteka za sve!\",\r\n            dermatologist: [\r\n                {\r\n                    id: 0,\r\n                    firstName: \"Marko\",\r\n                    lastName: \"Markovic\",\r\n                    userType: \"dermatologist\"\r\n                }\r\n            ],\r\n            pharmacist: [\r\n                {\r\n                    id: 0,\r\n                    firstName: \"Dragana\",\r\n                    lastName: \"Markovic\",\r\n                    userType: \"dermatologist\"\r\n                }\r\n            ],\r\n        }\r\n        this.setState({\r\n            pharmacy : pharmacy\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron jumbotron-fluid\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-4\">{this.state.pharmacy.name}</h1>\r\n                </div>\r\n                <br/>\r\n\r\n                <ul className=\"nav justify-content-center\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"description\" onClick={this.handleChange}>Description</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" href='#' onClick={this.handleChange} name=\"employees\">Dermatolozi & farmaceuti</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"medications\" onClick={this.handleChange}>Lekovi</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"vacationRequests\" onClick={this.handleChange} style={this.state.userType === 'pharmacyAdmin' ? {display : 'block'} : {display : 'none'}}>Godisnji odmori</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"promotions\" onClick={this.handleChange}>Akcije & promocije</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"medicationOrders\" onClick={this.handleChange} style={this.state.userType === 'pharmacyAdmin' ? {display : 'block'} : {display : 'none'}}>Narudzbenice & ponude</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"medicationQueries\" onClick={this.handleChange} style={this.state.userType === 'pharmacyAdmin' ? {display : 'block'} : {display : 'none'}}>Upiti nad lekovima</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"priceList\" onClick={this.handleChange} style={this.state.userType === 'pharmacyAdmin' ? {display : 'block'} : {display : 'none'}}>Price list</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"reports\" onClick={this.handleChange} style={this.state.userType === 'pharmacyAdmin' ? {display : 'block'} : {display : 'none'}}>Reports</a>\r\n                    </li>\r\n                </ul>\r\n                {this.renderNavbar()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            navbar : name\r\n        });\r\n    }\r\n\r\n    renderNavbar = () => {\r\n        if (this.state.navbar === \"promotions\")\r\n            return (\r\n                <Promotions/>\r\n            );\r\n        else if (this.state.navbar === 'description')\r\n            return (\r\n                <PharmacyDescription pharmacy = {this.state.pharmacy } />\r\n            )\r\n        else if (this.state.navbar === 'reports')\r\n            return (\r\n                <PharmacyReports pharmacy = {this.state.pharmacy } />\r\n            )\r\n        else if (this.state.navbar === 'priceList')\r\n            return (\r\n                <PriceList pharmacy = {this.state.pharmacy } />\r\n            )\r\n        else if (this.state.navbar === \"employees\")\r\n            return (\r\n                <PharmacyEmployees pharmacyId = {this.state.pharmacy.id}/>\r\n            );\r\n        else if (this.state.navbar === \"medications\")\r\n            return (\r\n                <PharmacyMedications/>\r\n            );\r\n        else if (this.state.navbar === 'vacationRequests')\r\n            return (\r\n              <PharmacyVacationsRequests />\r\n            );\r\n        else if (this.state.navbar === 'medicationOrders')\r\n            return (\r\n                <PharmacyMedicationOrders showContent = 'listOrders'/>\r\n            );\r\n        else if (this.state.navbar === 'medicationQueries')\r\n            return (\r\n                <PharmacyMedicationQueries />\r\n            );\r\n    }\r\n}\r\n","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\IndexPage.js",["331","332"],"import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\nimport UnregisteredLayout from \"../layout/UnregisteredLayout\"\r\nimport PharmacyListing from \"../components/pharmacy/PharmacyListing\"\r\nimport MedicationListing from \"../components/MedicationListing\"\r\n\r\nexport default class IndexPage extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <UnregisteredLayout>\r\n                    <PharmacyListing/>\r\n                    <MedicationListing/>\r\n                </UnregisteredLayout>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyEmployees.js",["333","334","335","336"],"import React from 'react';\r\nimport {Button, Col} from \"react-bootstrap\";\r\nimport {Modal} from \"react-bootstrap\";\r\nimport {Navbar} from \"react-bootstrap\";\r\nimport {Form} from \"react-bootstrap\";\r\nimport {FormControl, Row} from \"react-bootstrap\";\r\nimport moment from 'moment';\r\nimport TimePicker from 'react-time-picker';\r\nimport Registration from \"../../pages/Registration\";\r\nimport CreatePharmacist from \"./CreatePharmacist\";\r\n\r\n\r\n\r\n\r\nexport default class PharmacyEmployees extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dermatologists: [],\r\n            pharmacists: [],\r\n            showModalAddDermatologist : false,\r\n            showModalCreatePharmacist : false,\r\n            userType : \"pharmacyAdmin\"\r\n        }\r\n    }\r\n// definise slobodne termine,pretražuje, kreira i uklanja farmaceute/dermatologe\r\n    componentDidMount() {\r\n        let dermatologists = [\r\n            {\r\n                firstName : \"Mirko\",\r\n                lastName : \"Jugovic\",\r\n                grade : 5,\r\n            },\r\n            {\r\n                firstName : \"Maja\",\r\n                lastName : \"Jugovic\",\r\n                grade : 3,\r\n            }\r\n        ];\r\n        let pharmacists = [\r\n            {\r\n                firstName : \"Jelena\",\r\n                lastName : \"Matic\",\r\n                grade : 3.25,\r\n            },\r\n            {\r\n                firstName : \"Maja\",\r\n                lastName : \"Berovic\",\r\n                grade : 4.1,\r\n            }\r\n        ];\r\n\r\n        this.setState({\r\n            dermatologists : dermatologists,\r\n            pharmacists : pharmacists\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const format = \"HH:mm\"\r\n        return (\r\n           <div style={({ marginLeft: '1rem' })}>\r\n               <br/><br/>\r\n               <h1>Dermatolozi</h1>\r\n               \r\n               <Button variant=\"success\" onClick={this.handleModalAddDermatologist}>Dodaj dermatologa</Button>\r\n               <br/><br/>\r\n\r\n               <Navbar bg=\"light\" expand=\"lg\">\r\n                   <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                   <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                       <Form inline>\r\n                           <FormControl type=\"text\" placeholder=\"Search by first name\" className=\"mr-sm-2\" />\r\n                           <FormControl type=\"text\" placeholder=\"Search by last name\" className=\"mr-sm-2\" />\r\n                           <Button variant=\"outline-success\">Search</Button>\r\n                       </Form>\r\n                   </Navbar.Collapse>\r\n               </Navbar>\r\n\r\n               <table className=\"table table-hover\">\r\n                   <thead>\r\n                   <tr>\r\n                       <th scope=\"col\">#</th>\r\n                       <th scope=\"col\">Ime</th>\r\n                       <th scope=\"col\">Prezime</th>\r\n                       <th scope=\"col\">Ocena</th>\r\n                   </tr>\r\n                   </thead>\r\n                   <tbody>\r\n               {this.state.dermatologists.map((dermatologist, index) => (\r\n                   <tr>\r\n                       <th scope=\"row\">{index+1}</th>\r\n                       <td>{dermatologist.firstName}</td>\r\n                       <td>{dermatologist.lastName}</td>\r\n                       <td>{dermatologist.grade}</td>\r\n                       <td style={this.state.userType === 'patient' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                           <Button variant=\"primary\" onClick={this.handleModalAddDermatologist}>\r\n                                Zakazi pregled\r\n                           </Button>\r\n                       </td >\r\n                       <td style={this.state.userType === 'pharmacyAdmin' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                           <Button variant=\"warning\" onClick={this.handleModalAddDermatologist}>\r\n                               Definisi slobodne termine\r\n                           </Button>\r\n                       </td>\r\n                       <td style={this.state.userType === 'pharmacyAdmin' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                           <Button variant=\"danger\" onClick={() => this.deleteDermatologist(dermatologist)}>\r\n                               Izbrisi dermatologa\r\n                           </Button>\r\n                       </td>\r\n                   </tr>\r\n               ))}\r\n                   </tbody>\r\n               </table>\r\n\r\n\r\n               <br/><br/>\r\n               <h1>Farmaceuti</h1>\r\n               <Button variant=\"success\" onClick={this.handleModalCreatePharmacist}>Kreiraj farmaceuta</Button>\r\n               <br/><br/>\r\n               <Navbar bg=\"light\" expand=\"lg\">\r\n                   <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                   <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                       <Form inline>\r\n                           <FormControl type=\"text\" placeholder=\"Search by first name\" className=\"mr-sm-2\" />\r\n                           <FormControl type=\"text\" placeholder=\"Search by last name\" className=\"mr-sm-2\" />\r\n                           <Button variant=\"outline-success\">Search</Button>\r\n                       </Form>\r\n                   </Navbar.Collapse>\r\n               </Navbar>\r\n               <table className=\"table table-hover\">\r\n                   <thead>\r\n                   <tr>\r\n                       <th scope=\"col\">#</th>\r\n                       <th scope=\"col\">Ime</th>\r\n                       <th scope=\"col\">Prezime</th>\r\n                       <th scope=\"col\">Ocena</th>\r\n                   </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                   {this.state.pharmacists.map((pharmacist, index) => (\r\n                       <tr>\r\n                           <th scope=\"row\">{index+1}</th>\r\n                           <td>{pharmacist.firstName}</td>\r\n                           <td>{pharmacist.lastName}</td>\r\n                           <td>{pharmacist.grade}</td>\r\n                           <td style={this.state.userType === 'patient' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                               <Button variant=\"primary\" onClick={this.handleModalAddDermatologist}>\r\n                                   Zakazi savetovanje\r\n                               </Button>\r\n                           </td >\r\n                           <td style={this.state.userType === 'pharmacyAdmin' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                               <Button variant=\"warning\" onClick={this.handleModalAddDermatologist}>\r\n                                   Definisi slobodne termine\r\n                               </Button>\r\n                           </td>\r\n                           <td style={this.state.userType === 'pharmacyAdmin' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                               <Button variant=\"danger\" onClick={() => this.deletePharmacist(pharmacist)}>\r\n                                   Izbrisi farmaceuta\r\n                               </Button>\r\n                           </td>\r\n                       </tr>\r\n                   ))}\r\n                   </tbody>\r\n               </table>\r\n\r\n               {this.renderModalAddDermatologist()}\r\n               {this.renderModalCreatePharmacist()}\r\n\r\n           </div>\r\n        );\r\n    }\r\n\r\n    renderModalAddDermatologist = () => {\r\n        return (\r\n            <Modal show={this.state.showModalAddDermatologist} onHide={this.handleModalAddDermatologist}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add Dermatologist</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Row>\r\n                            <Col>\r\n                                <Form.Control placeholder=\"Medication\" as={\"select\"} >\r\n                                    <option disabled={true} selected=\"selected\">Choose...</option>\r\n                                    <option >...</option>\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <br/>\r\n                        <Form.Row>\r\n                            <div style={({ marginLeft: '1rem' })}>\r\n                                <label style={({ marginRight: '1rem' })}>Select start of work time : </label>\r\n                                <TimePicker />\r\n\r\n                            </div>\r\n                        </Form.Row>\r\n                        <br/>\r\n                        <Form.Row>\r\n                            <div style={({ marginLeft: '1rem' })}>\r\n                                <label style={({ marginRight: '1rem' })}>Select end of work time : </label>\r\n                                <TimePicker/>\r\n                            </div>\r\n                        </Form.Row>\r\n\r\n                        <br/>\r\n                        <h3>Work time in other pharmacies</h3>\r\n                        <table class=\"table table-sm\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Start</th>\r\n                                <th scope=\"col\">End</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <tr>\r\n                                <td>1</td>\r\n                                <td>{\"11:00\"}</td>\r\n                                <td>{\"13:00\"}</td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.handleModalAddDermatologist}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={this.handleModalAddDermatologist}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    renderModalCreatePharmacist = () => {\r\n        return (\r\n            <Modal show={this.state.showModalCreatePharmacist} onHide={this.handleModalCreatePharmacist}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Create Pharmacist</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <CreatePharmacist closeModal = {this.handleModalCreatePharmacist}/>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    handleModalAddDermatologist = () => {\r\n        this.setState({\r\n            showModalAddDermatologist : !this.state.showModalAddDermatologist\r\n        });\r\n    }\r\n\r\n    handleModalCreatePharmacist = () => {\r\n        this.setState({\r\n            showModalCreatePharmacist : !this.state.showModalCreatePharmacist\r\n        });\r\n    }\r\n\r\n    deleteDermatologist = (dermatologist) => {\r\n        let isBoss = window.confirm('Are you sure you want to delete ' + dermatologist.firstName + ' ' + dermatologist.lastName + ' from your employees list?');\r\n        alert( isBoss ); // true if OK is pressed\r\n    }\r\n\r\n    deletePharmacist = (dermatologist) => {\r\n        let isBoss = window.confirm('Are you sure you want to delete ' + dermatologist.firstName + ' ' + dermatologist.lastName + ' from your employees list?');\r\n        alert( isBoss ); // true if OK is pressed\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyMedicationOrders.js",["337","338","339","340"],"import React from 'react';\r\nimport {Button, Modal, FormControl, Navbar} from \"react-bootstrap\";\r\nimport MedicationOrdersList from \"./MedicationOrdersList\";\r\nimport MedicationOffers from \"./MedicationOffers\";\r\nimport CreateOrder from \"./CreateOrder\";\r\n\r\nexport default class PharmacyMedicationOrders extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userType : 'pharmacyAdmin',\r\n            medicationOrders : [],\r\n            showModal : false,\r\n            showContent : 'listOrders'\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (this.state.showContent === 'showOffers' && nextState.showContent === 'showOffers') //when clicking on navbar st default behaviour to listOrders\r\n            this.setState({\r\n                showContent : 'listOrders'\r\n            })\r\n        else if (this.state.showContent === 'showCreateOrder' && nextState.showContent === 'showCreateOrder') //when clicking on navbar st default behaviour to listOrders\r\n            this.setState({\r\n                showContent : 'listOrders'\r\n            })\r\n        return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        let medicationOrders = [\r\n            {\r\n                pharmacyAdmin : {\r\n                    firstName : 'Mirko',\r\n                    lastName : 'Mirkovic'\r\n                },\r\n                deadLine : '21.3.2021.',\r\n                medicationQuantity: {\r\n\r\n                },\r\n                status : 'pending',\r\n                medicationOffers : []\r\n            },\r\n            {\r\n                pharmacyAdmin : {\r\n                    firstName : 'Jelena',\r\n                    lastName : 'Rozga'\r\n                },\r\n                deadLine : '13.5.2021.',\r\n                medicationQuantity: {\r\n\r\n                },\r\n                status : 'processed',\r\n                medicationOffers : []\r\n            }\r\n        ];\r\n\r\n        this.setState({\r\n            medicationOrders : medicationOrders,\r\n            showContent : this.props.showContent\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br/><br/>\r\n                {this.handleContent()}\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n    handleContent = () => {\r\n        if (this.state.showContent === 'listOrders')\r\n            return (\r\n                <MedicationOrdersList showOffers={this.changeContent} showCreateOrder={this.changeContent}/>\r\n            );\r\n        else if (this.state.showContent === 'showOffers')\r\n            return (\r\n              <MedicationOffers order = {this.state.medicationOrders[0]}  />\r\n            );\r\n        else if (this.state.showContent === 'showCreateOrder')\r\n            return (\r\n              <CreateOrder />\r\n            );\r\n    }\r\n\r\n    changeContent = (content) => {\r\n        this.setState({\r\n            showContent : content\r\n        })\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyVacationsRequests.js",["341","342"],"import React from 'react';\r\nimport {Button, Form, FormControl, Modal, Navbar} from \"react-bootstrap\";\r\n\r\nexport default class PharmacyVacationsRequests extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            vacationRequests : [],\r\n            userType : 'pharmacyAdmin',\r\n            showModal : false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let vacationRequests = [\r\n            {\r\n                periodStart : '21.2.2021.',\r\n                periodEnd : '03.03.2021.',\r\n                vacationNote : 'Bahami',\r\n                employeeFirstName : 'Marko',\r\n                employeeLastName : 'Jugovic',\r\n                vacationRequestStatus : 'requested',\r\n                employeeType : 'pharmacist',\r\n                rejectionNote : ''\r\n            },\r\n            {\r\n                periodStart : '21.5.2021.',\r\n                periodEnd : '03.06.2021.',\r\n                vacationNote : 'Covid-19',\r\n                employeeFirstName : 'Dejan',\r\n                employeeLastName : 'Petrovic',\r\n                vacationRequestStatus : 'approved',\r\n                employeeType : 'dermatologist',\r\n                rejectionNote : ''\r\n            },\r\n            {\r\n                periodStart : '21.2.2021.',\r\n                periodEnd : '03.10.2021.',\r\n                vacationNote : 'Beba',\r\n                employeeFirstName : 'Dijana',\r\n                employeeLastName : 'Jankovic',\r\n                vacationRequestStatus : 'rejected',\r\n                employeeType : 'pharmacist',\r\n                rejectionNote : ''\r\n            }\r\n        ];\r\n\r\n        this.setState({\r\n            vacationRequests : vacationRequests\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div>\r\n                    <br/><br/>\r\n                    <h1>Trazena & odobrena odsustva</h1>\r\n\r\n                    <br/>\r\n\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Ime</th>\r\n                            <th scope=\"col\">Prezime</th>\r\n                            <th scope=\"col\">Tip radnika</th>\r\n                            <th scope=\"col\">Razlog</th>\r\n                            <th scope=\"col\">Pocetak odsustva</th>\r\n                            <th scope=\"col\">Kraj odsustva</th>\r\n                            <th scope=\"col\">Status</th>\r\n\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.state.vacationRequests.map((vacationRequest, index) => (\r\n                            <tr>\r\n                                <th scope=\"row\">{index+1}</th>\r\n                                <td>{vacationRequest.employeeFirstName}</td>\r\n                                <td>{vacationRequest.employeeLastName}</td>\r\n                                <td>{vacationRequest.employeeType}</td>\r\n                                <td>{vacationRequest.vacationNote}</td>\r\n                                <td>{vacationRequest.periodStart}</td>\r\n                                <td>{vacationRequest.periodEnd}</td>\r\n                                <td>{vacationRequest.vacationRequestStatus}</td>\r\n\r\n                                <td style={this.state.userType === 'pharmacyAdmin' && vacationRequest.vacationRequestStatus === 'requested' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                                    <Button variant=\"outline-success\" onClick={() => this.acceptVacationRequest(vacationRequest)}>\r\n                                        Accept\r\n                                    </Button>\r\n                                </td >\r\n                                <td style={this.state.userType === 'pharmacyAdmin' && vacationRequest.vacationRequestStatus === 'requested' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                                    <Button variant=\"outline-danger\" onClick={this.handleModal}>\r\n                                        Reject\r\n                                    </Button>\r\n                                </td >\r\n                                <td style={this.state.userType === 'pharmacyAdmin' && vacationRequest.vacationRequestStatus === 'rejected' ? {display : 'none'} : {}}>\r\n                                </td >\r\n                                <td style={this.state.userType === 'pharmacyAdmin' && vacationRequest.vacationRequestStatus === 'rejected' ? {display : 'none'} : {}}>\r\n                                </td >\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </table>\r\n\r\n\r\n\r\n                    <Modal show={this.state.showModal} onHide={this.handleModal}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Modal heading</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                <Form.Label>Please enter a reason of declining the vacation request</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows={3} />\r\n                            </Form.Group>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={this.handleModal}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={this.handleModal}>\r\n                                Confirm\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleModal = () => {\r\n        this.setState({\r\n            showModal : !this.state.showModal\r\n        });\r\n    }\r\n\r\n    acceptVacationRequest = (vacationRequest) => {\r\n        window.confirm('Are you sure you want to accept the vacation request from ' + vacationRequest.employeeFirstName + '?');\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyMedicationQueries.js",["343"],"import React from 'react';\r\n\r\nexport default class PharmacyMedicationQueries extends React.Component{\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                a\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\Promotions.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyDescription.js",["344"],"import React from 'react';\r\nimport { Map, GoogleApiWrapper, InfoWindow, Marker} from 'google-maps-react';\r\nimport {PharmacyPage} from \"../../pages/PharmacyPage\";\r\n\r\nconst mapStyles = {\r\n    width: '50%',\r\n    height: '50%'\r\n};\r\n\r\n\r\nexport class PharmacyDescription extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userType : 'pharmacyAdmin',\r\n            pharmacy : this.props.pharmacy,\r\n            showingInfoWindow: false,  // Hides or shows the InfoWindow\r\n            activeMarker: {},          // Shows the active marker upon click\r\n            selectedPlace: {},\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"card\">\r\n                                <h5 className=\"card-header\">\r\n                                    {this.state.pharmacy.description}\r\n                                </h5>\r\n                                <div className=\"card-body\">\r\n                                    <p className=\"card-text\">\r\n                                        Address : {this.state.pharmacy.address.street} <br/>\r\n                                        Grade : {this.state.pharmacy.grade} <br/>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Map\r\n                    google={this.props.google}\r\n                    zoom={14}\r\n                    style={mapStyles}\r\n                    initialCenter={\r\n                        {\r\n                            lat: this.state.pharmacy.address.latitude,\r\n                            lng: this.state.pharmacy.address.longitude\r\n                        }\r\n                    }\r\n                >\r\n                    <Marker\r\n                        onClick={this.onMarkerClick}\r\n                        name={this.state.pharmacy.address.street}\r\n                    />\r\n                    <InfoWindow\r\n                        marker={this.state.activeMarker}\r\n                        visible={this.state.showingInfoWindow}\r\n                        onClose={this.onClose}\r\n                    >\r\n                        <div>\r\n                            <h4>{this.state.selectedPlace.name}</h4>\r\n                        </div>\r\n                    </InfoWindow>\r\n                </Map>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onMarkerClick = (props, marker, e) =>\r\n        this.setState({\r\n            selectedPlace: props,\r\n            activeMarker: marker,\r\n            showingInfoWindow: true\r\n        });\r\n\r\n    onClose = props => {\r\n        if (this.state.showingInfoWindow) {\r\n            this.setState({\r\n                showingInfoWindow: false,\r\n                activeMarker: null\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyBFrua9P_qHcmF253UAXnw1wHnIC7nD2DY'\r\n})(PharmacyDescription)","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyMedications.js",["345","346"],"import React from 'react';\r\nimport {Button, Form, FormControl, Modal, Navbar, Col} from \"react-bootstrap\";\r\nimport DropdownItem from \"react-bootstrap/DropdownItem\";\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\n\r\nconst options = [\r\n    'one', 'two', 'three'\r\n];\r\nconst defaultOption = options[0];\r\n\r\nexport default class PharmacyMedications extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            medications : [],\r\n            userType : \"\",\r\n            showModal : false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let medications = [\r\n            {\r\n                name: \"Xanax\",\r\n                type: \"antihistamine\",\r\n                dose: 2,\r\n                loyaltyPoints: 3,\r\n                medicationShape: \"pill\",\r\n                manufacturer: \"ABC\",\r\n                medicationIssue: \"withPrescription\",\r\n                note: \"take when hungry\",\r\n                quantity : 10,\r\n                price : 400.00,\r\n                grade : 4,\r\n                ingredient: [\r\n                    {\r\n                        name: \"brufen\"\r\n                    },\r\n                    {\r\n                        name: \"linex\"\r\n                    }\r\n\r\n                ],\r\n                sideEffect: [\r\n                    {\r\n                        name: \"nausea\"\r\n                    },\r\n                    {\r\n                        name: \"blindness\"\r\n                    }\r\n                ],\r\n                alternatives: [\r\n                    {\r\n                        name: \"brufen\"\r\n                    },\r\n                    {\r\n                        name: \"linex\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                name: \"Linex\",\r\n                type: \"antihistamine\",\r\n                dose: 2,\r\n                grade : 4,\r\n                loyaltyPoints: 3,\r\n                medicationShape: \"pill\",\r\n                manufacturer: \"ABC\",\r\n                quantity : 10,\r\n                price : 1300,\r\n                medicationIssue: \"withPrescription\",\r\n                note: \"take when hungry\",\r\n                ingredient: [\r\n                    {\r\n                        name: \"brufen\"\r\n                    },\r\n                    {\r\n                        name: \"linex\"\r\n                    }\r\n\r\n                ],\r\n                sideEffect: [\r\n                    {\r\n                        name: \"nausea\"\r\n                    },\r\n                    {\r\n                        name: \"blindness\"\r\n                    }\r\n                ],\r\n                alternatives: [\r\n                    {\r\n                        name: \"brufen\"\r\n                    },\r\n                    {\r\n                        name: \"linex\"\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n        this.setState({\r\n            medications : medications,\r\n            userType : \"pharmacyAdmin\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={({ marginLeft: '1rem' })}>\r\n                <br/><br/>\r\n                <h1>Lekovi</h1>\r\n\r\n\r\n                <Button variant=\"success\" onClick={this.handleModal} >Dodaj lek</Button>\r\n                <Button variant=\"primary\" style={({ marginLeft: '1rem' })}>Proveri dostupnost preko eRecepta</Button>\r\n                <br/><br/>\r\n\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Form inline>\r\n                            <FormControl type=\"text\" placeholder=\"Search by name\" className=\"mr-sm-2\" />\r\n                            <Button variant=\"outline-success\">Search</Button>\r\n                        </Form>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Naziv</th>\r\n                        <th scope=\"col\">Tip</th>\r\n                        <th scope=\"col\">Ocena</th>\r\n                        <th scope=\"col\">Kolicina</th>\r\n                        <th scope=\"col\">Cena</th>\r\n                        <th scope=\"col\">Sastojci</th>\r\n                        <th scope=\"col\">Alternative</th>\r\n\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.medications.map((medication, index) => (\r\n                        <tr>\r\n                            <th scope=\"row\">{index+1}</th>\r\n                            <td>{medication.name}</td>\r\n                            <td>{medication.type}</td>\r\n                            <td>{medication.grade}</td>\r\n                            <td>{medication.quantity}</td>\r\n                            <td>{medication.price}</td>\r\n                            <td>\r\n                                <Dropdown options={options}  value={defaultOption} />\r\n                            </td>\r\n                            <td>\r\n                                <Dropdown options={options}  value={defaultOption} />\r\n                            </td>\r\n                            <td style={this.state.userType === 'patient' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                                <Button variant=\"primary\" onClick={this.handleModal}>\r\n                                    Rezervisi\r\n                                </Button>\r\n                            </td >\r\n\r\n                            <td style={this.state.userType === 'pharmacyAdmin' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                                <Button variant=\"danger\" onClick={() => this.deleteMedication(medication)}>\r\n                                    Delete\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n\r\n\r\n\r\n                <Modal show={this.state.showModal} onHide={this.handleModal}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Dodavanje leka</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Col>\r\n                                    <Form.Control placeholder=\"Medication\" as={\"select\"} >\r\n                                        <option disabled={true} selected=\"selected\">Choose...</option>\r\n                                        <option >...</option>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Control placeholder=\"Quantity\"  />\r\n                                </Col>\r\n                            </Form.Row>\r\n                        </Form>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleModal}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.handleModal}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n    handleModal = () => {\r\n        this.setState({\r\n            showModal : !this.state.showModal\r\n        });\r\n    }\r\n\r\n    deleteMedication = (medication) => {\r\n        let isBoss = window.confirm('Are you sure you want to delete ' + medication.name + ' from your medications list?');\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PriceList.js",["347"],"import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nexport default class PriceList extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userType : 'pharmacyAdmin'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div>\r\n                        <h3>\r\n                            Price List\r\n                        </h3>\r\n\r\n                        <button type=\"button\" class=\"btn btn-info\">Kreiraj promociju</button>\r\n                        <div className=\"row\">\r\n\r\n\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyReports.js",["348"],"import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nexport default class PharmacyReports extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userType : 'pharmacyAdmin'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div>\r\n                        <h3>\r\n                            Reports\r\n                        </h3>\r\n\r\n                        <button type=\"button\" class=\"btn btn-info\">Kreiraj promociju</button>\r\n                        <div className=\"row\">\r\n\r\n\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\MedicationListing.jsx",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacyListing.jsx",["349"],"import React from 'react';\r\nimport {Card, Col, Row, Badge} from \"react-bootstrap\";\r\nimport PharmacySearch from './PharmacySearch';\r\n\r\nexport default class PharmacyListing extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            pharmacies : [],\r\n        }\r\n        this.search = this.search.bind(this)\r\n        this.cancel = this.cancel.bind(this)\r\n        this.searchValidation = this.searchValidation.bind(this)\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.setState({\r\n            pharmacies : [\r\n                {\r\n                    name : 'Jankovic',\r\n                    address : 'Narodnog Fronta 5, Novi Sad, Serbia',\r\n                    description : 'Fabulozna apoteka za svaciji ukus i svaku priliku :*'\r\n                },\r\n                {\r\n                    name : 'Biljana i Luka',\r\n                    address : 'Bulevar Oslobodjenja 5, Novi Sad, Serbia',\r\n                    description : 'Mi smo biljana i luka ;;;))))'\r\n                }\r\n            ]\r\n        })\r\n\r\n        this.pharmaciesBackup = [...this.state.pharmacies]\r\n    }\r\n\r\n    cancel() {\r\n        console.log(this.pharmaciesBackup)\r\n        this.setState({\r\n            pharmacies : this.pharmaciesBackup\r\n        })\r\n    }\r\n\r\n    search({name, location}) {\r\n        this.setState({\r\n            pharmacies : this.state.pharmacies.filter(p => this.searchValidation(p, name, location))\r\n        })\r\n    }\r\n\r\n    searchValidation(pharmacy, name, location) {\r\n        console.log(location)\r\n        if(name !== '' && !pharmacy.name.toLowerCase().includes(name.toLowerCase()))\r\n            return false\r\n        if(location.street !== '' && !pharmacy.address.toLowerCase().includes(location.street.toLowerCase()))\r\n            return false\r\n        if(location.town !== '' && !pharmacy.address.toLowerCase().includes(location.town.toLowerCase()))\r\n            return false\r\n        if(location.country !== '' && !pharmacy.address.toLowerCase().includes(location.country.toLowerCase()))\r\n            return false    \r\n        return true\r\n    }\r\n\r\n\r\n    render() {\r\n        const pharmacies = this.state.pharmacies.map((pharmacy, index) => {\r\n            return (\r\n                <Col xs={3} >\r\n                <Card bg={'dark'} key={index} text={'white'} style={{ width: '18rem', height: '18rem' }} className=\"mb-2\">\r\n                    <Card.Body>\r\n                    <Card.Title>{pharmacy.name}</Card.Title>\r\n                        <Card.Subtitle className=\"mb-5 mt-2 text-muted\">{pharmacy.address}</Card.Subtitle>\r\n                        <Card.Text>\r\n                        {pharmacy.description}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                </Col>\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                <Row >    \r\n                        <h2 className={'mt-5 ml-3'} id=\"pharmacies\">Pharmacies</h2> \r\n                </Row>\r\n                <PharmacySearch search={this.search} cancel={this.cancel}/>\r\n                <Row className={'mt-4'}>\r\n                    {pharmacies}\r\n                </Row>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\layout\\UnregisteredLayout.jsx",["350","351"],"import React from 'react'\r\nimport { Container, Navbar, NavDropdown, Nav } from 'react-bootstrap';\r\nimport Login from \"../components/Login\";\r\n\r\nexport default class UnregisteredLayout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid style={{'background-color' : '#AEB6BF'}}>\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand href=\"/\">WebPharm</Navbar.Brand>\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"#pharmacies\">Pharmacies</Nav.Link>\r\n                            <Nav.Link href=\"#medications\">Medications</Nav.Link>\r\n                        </Nav>\r\n                        <Nav>\r\n                        <Login/>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                {this.props.children}\r\n            </Container>\r\n        )\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\MedicationOrdersList.js",["352"],"import React from \"react\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport {ButtonGroup, Input} from \"rsuite\";\r\nimport Dropdown from \"react-dropdown\";\r\n\r\nconst options = [\r\n    'Xanax | 3', 'Brufen | 4', 'Linex | 100'\r\n];\r\nconst defaultOption = options[0];\r\n\r\nexport default class MedicationOrdersList extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userType : 'pharmacyAdmin',\r\n            medicationOrders : [],\r\n            showModal : false,\r\n            showContent : 'listOrders',\r\n            radioAll : '1',\r\n            radioPending : '2',\r\n            radioProcessed : '3'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let medicationOrders = [\r\n            {\r\n                pharmacyAdmin : {\r\n                    firstName : 'Mirko',\r\n                    lastName : 'Mirkovic'\r\n                },\r\n                deadLine : '21.3.2021.',\r\n                medicationQuantity: {\r\n\r\n                },\r\n                status : 'pending',\r\n                medicationOffers : []\r\n            },\r\n            {\r\n                pharmacyAdmin : {\r\n                    firstName : 'Jelena',\r\n                    lastName : 'Rozga'\r\n                },\r\n                deadLine : '13.5.2021.',\r\n                medicationQuantity: {\r\n\r\n                },\r\n                status : 'processed',\r\n                medicationOffers : []\r\n            }\r\n        ];\r\n\r\n        this.setState({\r\n            medicationOrders : medicationOrders\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n\r\n                <h1>Narudzbenice</h1>\r\n\r\n                <br/>\r\n                <Button variant=\"success\" onClick={this.createOrder}>Create order</Button>\r\n                <br/><br/>\r\n\r\n                <b>Filter by :</b>\r\n                <ButtonGroup>\r\n                    <Button>All\r\n                        <Input ref=\"input1\" type=\"radio\" name=\"radioButtonSet\" value='input1' standalone defaultChecked/>\r\n                    </Button>\r\n                    <Button>Pending\r\n                        <Input ref=\"input2\" type=\"radio\" name=\"radioButtonSet\" value='input2' standalone/>\r\n                    </Button>\r\n                    <Button>Processed\r\n                        <Input ref=\"input2\" type=\"radio\" name=\"radioButtonSet\" value='input2' standalone/>\r\n                    </Button>\r\n                </ButtonGroup>\r\n                <br/>\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Kreirao</th>\r\n                        <th scope=\"col\">Rok</th>\r\n                        <th scope=\"col\">Lista lekova</th>\r\n                        <th scope=\"col\">Status</th>\r\n                        <th scope=\"col\">Ponude</th>\r\n\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.medicationOrders.map((medicationOrder, index) => (\r\n                        <tr>\r\n                            <th scope=\"row\">{index+1}</th>\r\n                            <td>{medicationOrder.pharmacyAdmin.firstName + ' ' + medicationOrder.pharmacyAdmin.lastName}</td>\r\n                            <td>{medicationOrder.deadLine}</td>\r\n                            <td>\r\n                                <Dropdown options={options}  value={defaultOption} />\r\n                            </td>\r\n                            <td>{medicationOrder.status}</td>\r\n                            <td>\r\n                                <Button variant=\"primary\" onClick={this.showOffersButtonClick}>\r\n                                    Pregledaj ponude\r\n                                </Button>\r\n                            </td>\r\n                            <td>\r\n                                <Button variant=\"info\" >\r\n                                    Izmeni\r\n                                </Button>\r\n                            </td>\r\n                            <td>\r\n                                <Button variant=\"danger\" onClick={() => this.deleteOrder(medicationOrder)}>\r\n                                    Obrisi\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n\r\n                <Modal show={this.state.showModal} onHide={this.handleModal}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Modal heading</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleModal}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.handleModal}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleModal = () => {\r\n        this.setState({\r\n            showModal : !this.state.showModal\r\n        });\r\n    }\r\n\r\n    showOffersButtonClick = () => {\r\n        this.props.showOffers('showOffers');\r\n    }\r\n\r\n    createOrder = () => {\r\n        this.props.showOffers('showCreateOrder');\r\n    }\r\n\r\n    deleteOrder = (order) => {\r\n        let isBoss = window.confirm('Are you sure you want to delete the order from your order list?');\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\MedicationOffers.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\CreateOrder.js",["353"],"import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport AddMedicationQuantity from \"./AddMedicationQuantity\";\r\nimport AllergyPatientListing from \"../AllergyPatientListing\";\r\nimport OrderQuantityListing from \"./OrderQuantityListing\";\r\n\r\nexport default class CreateOrder extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userType : 'pharmacyAdmin',\r\n            medications : [\r\n                {\r\n                    id : 1,\r\n                    name : \"Xantil\"\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name : \"Brufen\"\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name : \"Linex\"\r\n                },\r\n                {\r\n                    id: 4,\r\n                    name : \"Vitamin C\"\r\n                }\r\n            ],\r\n            medicationOrder : {\r\n                deadLine : \"\",\r\n                medicationQuantity : []\r\n            },\r\n            quantities : []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\" style={({ marginLeft: '1rem' })}>\r\n                <div className=\"row\">\r\n                    <div>\r\n                        <h1>\r\n                            Create order\r\n                        </h1>\r\n                        <br/>\r\n                        Choose deadline for medication offers: <i/><i/><i/>\r\n                        <DatePicker  selected={this.state.medicationOrder.deadLine} minDate={new Date()} onChange={date => this.changeDatePicker(date)} />\r\n\r\n                        <AddMedicationQuantity addQuantity={this.addQuantity} medications = {this.state.medications} />\r\n\r\n                        <OrderQuantityListing quantities={this.state.quantities} removeQuantity ={this.removeQuantity}/>\r\n\r\n\r\n                        <Button variant={\"dark\"} onClick={this.handleSubmit}>Submit</Button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    addQuantity = async (quantity) => {\r\n        if(!this.state.quantities.map(a => a.medication).includes(quantity.medication))\r\n            await this.setState({\r\n                quantities : this.state.quantities.concat(quantity)\r\n            })\r\n        console.log(this.state.quantities);\r\n    }\r\n\r\n    removeQuantity = (quantity) => { //in this context quantity is medication name!\r\n        this.setState({\r\n            quantities : this.state.quantities.filter(a => a.medication !== quantity)\r\n        })\r\n    }\r\n\r\n\r\n    changeDatePicker = (date) => {\r\n        this.setState({\r\n            medicationOrder : {\r\n                ...this.state.medicationOrder,\r\n                deadLine : date\r\n            }\r\n            }\r\n        );\r\n    }\r\n\r\n    handleSubmit = async () => {\r\n        await this.setState({\r\n                medicationOrder : {\r\n                    ...this.state.medicationOrder,\r\n                    medicationQuantity : this.state.quantities\r\n                }\r\n            }\r\n        );\r\n        console.log(this.state.medicationOrder);\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\pages\\DermatologistWorkingHours.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\CreatePharmacist.js",["354","355","356","357","358","359","360","361"],"import React from \"react\";\r\nimport {Button, Col, Form, Modal, Table, Grid, FormControl, Row} from \"react-bootstrap\";\r\nimport \"../../App.css\";\r\nimport TimePicker from \"react-time-picker\";\r\n\r\n\r\n\r\nexport default class CreatePharmacist extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                'email': '',\r\n                'password': '',\r\n                'firstName': '',\r\n                'lastName': '',\r\n                'country': '',\r\n                'city': '',\r\n                'street' : '',\r\n                'telephone': '',\r\n                'rePassword' : ''\r\n            },\r\n            errors:{\r\n                user: {\r\n                    'email': 'Enter email',\r\n                    'password': 'Enter password',\r\n                    'firstName': 'Enter First name',\r\n                    'lastName': 'Enter Last name',\r\n                    'country': 'Enter Country',\r\n                    'city': 'Enter City',\r\n                    'street' : 'Enter Street',\r\n                    'telephone': 'Enter Telephone',\r\n                    'rePassword' : 'Repeat password'\r\n                }\r\n            },\r\n            validForm: false,\r\n            submitted: false,\r\n\r\n\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.isValidPassword = this.isValidPassword.bind(this);\r\n\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        const user = this.state.user;\r\n        user[name] = value;\r\n\r\n        this.setState({ user });\r\n        this.validationErrorMessage(event);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <div className=\"row\">\r\n                    <label className=\"col-sm-2 col-form-label\">Name</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.firstName} name=\"firstName\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"First Name\" />\r\n                        { this.state.submitted && this.state.errors.user.firstName.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.firstName}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.lastName} name=\"lastName\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"Last Name\" />\r\n                        { this.state.submitted && this.state.errors.user.lastName.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.lastName}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Email</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"email\" value={this.state.user.email} name=\"email\" onChange={(e) => { this.handleInputChange(e)} }className=\"form-control\" id=\"email\" placeholder=\"example@gmail.com\" />\r\n                        { this.state.submitted && this.state.errors.user.email.length > 0 && <span className=\"text-danger\">{this.state.errors.user.email}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Tel</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.telephone} name=\"telephone\" onChange={(e) => { this.handleInputChange(e)} }  className=\"form-control\" id=\"telephone\" placeholder=\"+3810640333489\" />\r\n                        { this.state.submitted && this.state.errors.user.telephone.length > 0 && <span className=\"text-danger\">{this.state.errors.user.telephone}</span>}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Street</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.street} name=\"street\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" id=\"street\" placeholder=\"Enter street\" />\r\n                        { this.state.submitted && this.state.errors.user.street.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.street}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">City</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.city} name=\"city\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" id=\"city\" placeholder=\"Enter city\" />\r\n                        { this.state.submitted && this.state.errors.user.city.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.city}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Country</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.country} name=\"country\" onChange={(e) => { this.handleInputChange(e)} }  className=\"form-control\" id=\"country\" placeholder=\"Enter country\" />\r\n                        { this.state.submitted && this.state.errors.user.country.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.country}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row\">\r\n                    <label className=\"col-sm-2 col-form-label\">Password</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <FormControl name=\"password\" type=\"password\" placeholder=\"Password\"  value={this.state.user.password} onChange={(e) => { this.handleInputChange(e)} }/>\r\n                        { this.state.submitted && this.state.errors.user.password.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.password}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Repeat password</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <FormControl name=\"rePassword\" type=\"password\" placeholder=\"Repeat new Password\" value={this.state.user.rePassword} onChange={(e) => { this.handleInputChange(e)} }/>\r\n                        { this.state.submitted && this.state.errors.user.rePassword.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.rePassword}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <hr className=\"mt-2 mb-3\"/>\r\n\r\n                <div className=\"row\">\r\n                    <div style={({ marginLeft: '1rem' })}>\r\n                        <label style={({ marginRight: '1rem' })}>Select start of work time : </label>\r\n                        <TimePicker />\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div style={({ marginLeft: '1rem' })}>\r\n                        <label style={({ marginRight: '1rem' })}>Select end of work time : </label>\r\n                        <TimePicker />\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <hr className=\"mt-2 mb-3\"/>\r\n\r\n                <br/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-5 mb-2\">\r\n                    </div>\r\n                    <div >\r\n                        <Button variant=\"primary\" onClick={this.submitForm} style={({ marginRight: '1rem' })}>Submit</Button>\r\n                        <Button variant=\"secondary\" onClick={this.closeModal} >Close</Button>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    submitForm = async (event) => {\r\n        this.setState({ submitted: true });\r\n        const user = this.state.user;\r\n        event.preventDefault();\r\n        if (this.validateForm(this.state.errors)) {\r\n            console.info('Valid Form');\r\n            this.closeModal();\r\n        } else {\r\n            console.log('Invalid Form')\r\n        }\r\n    }\r\n\r\n    validationErrorMessage = (event) => {\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n\r\n        switch (name) {\r\n            case 'firstName':\r\n                errors.user.firstName = value.length < 1 ? 'Enter First Name' : '';\r\n                break;\r\n            case 'lastName':\r\n                errors.user.lastName = value.length < 1 ? 'Enter Last Name' : '';\r\n                break;\r\n            case 'email':\r\n                errors.user.email = this.isValidEmail(value) ? '' : 'Email is not valid!';\r\n                break;\r\n            case 'telephone':\r\n                errors.user.telephone = this.isValidTelephone(value) ? 'Enter valid telephone number' : '';\r\n                break;\r\n            case 'country':\r\n                errors.user.country = value.length < 1 ?  'Enter Country' : '';\r\n                break;\r\n            case 'city':\r\n                errors.user.city = value.length < 1 ?  'Enter City' : '';\r\n                break;\r\n            case 'street':\r\n                errors.user.street = value.length < 1 ?  'Enter Street' : '';\r\n                break;\r\n            case 'password':\r\n                errors.user.password = value.length < 1 ? 'Enter Password' : '';\r\n                break;\r\n            case 'rePassword':\r\n                errors.user.rePassword = this.isValidPassword(value) ? '' : 'This password must match the previous';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({ errors });\r\n    }\r\n\r\n    validateForm = (errors) => {\r\n        let valid = true;\r\n        Object.entries(errors.user).forEach(item => {\r\n            console.log(item)\r\n            item && item[1].length > 0 && (valid = false)\r\n        })\r\n        return valid;\r\n    }\r\n    isValidEmail = (value) => {\r\n        return !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,64}$/i.test(value))\r\n    }\r\n\r\n    isValidTelephone = (value) => {\r\n        return !(value && /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[0-9]{2,3}[-\\s\\./0-9]*$/i.test(value))\r\n    }\r\n\r\n    isValidPassword = (value) => {\r\n        return this.state.user.password === this.state.user.rePassword;\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.props.closeModal();\r\n    }\r\n}","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\PharmacySearch.jsx",["362"],"import React from 'react'\r\nimport { Row, Button, FormControl, Col, Container } from 'react-bootstrap'\r\nimport SearchLocationInput from '../AutoCompleteInput'\r\n\r\nclass PharmacySearch extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name : '',\r\n            street : '',\r\n            town : '',\r\n            country : ''\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.getLocation = this.getLocation.bind(this)\r\n        this.search = this.search.bind(this)\r\n        this.cancel = this.cancel.bind(this)\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target\r\n        this.setState({\r\n            [target.name] : target.value\r\n        })\r\n    }\r\n\r\n    getLocation({address_components}) {\r\n        let street, town, country\r\n        address_components.forEach(component => {\r\n            if (component.types.includes('route'))\r\n                street = component.long_name\r\n            else if (component.types.includes('locality'))\r\n                town = component.long_name\r\n            else if (component.types.includes('country'))\r\n                country = component.long_name\r\n        })\r\n\r\n        this.setState({\r\n            street: street || '',\r\n            town : town || '',\r\n            country : country || ''\r\n        })\r\n    }\r\n\r\n    search() {\r\n        this.props.search({\r\n            name : this.state.name,\r\n            location : {\r\n                street : this.state.street,\r\n                town : this.state.town,\r\n                country : this.state.country\r\n            }\r\n        })\r\n    }\r\n\r\n    cancel() {\r\n        this.props.cancel()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col xs={{ span: 2.5}} className={'ml-3'}>\r\n                    <FormControl name=\"name\" className=\"mt-2 mb-2\" value={this.state.name}\r\n                            placeholder={'Pharmacy Name'} onChange={this.handleInputChange}/>\r\n                </Col>\r\n                <Col className={'pt-2'} xs={{ span: 2.5 }}>\r\n                    <SearchLocationInput getLocation={this.getLocation}/>\r\n                </Col>\r\n                <Col className={'pt-2'} xs={{ span: 0.5  }}>\r\n                    <Button variant={'outline-dark'} onClick={this.cancel}>Cancel</Button>\r\n                </Col>\r\n                <Col className={'pt-2'} xs={{ span: 0.5 }}>\r\n                    <Button variant={'dark'} onClick={this.search}>Go</Button>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PharmacySearch","C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\OrderQuantityListing.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\pharmacy\\AddMedicationQuantity.js",[],"C:\\Users\\Tamara Kovacevic\\Desktop\\InternetPharmacy\\frontend\\src\\components\\AutoCompleteInput.jsx",["363"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { FormControl } from 'react-bootstrap'\r\n\r\n\r\nlet autoComplete;\r\n\r\nconst loadScript = (url, callback) => {\r\n  let script = document.createElement(\"script\");\r\n  script.type = \"text/javascript\";\r\n\r\n  if (script.readyState) {\r\n    script.onreadystatechange = function() {\r\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\r\n        script.onreadystatechange = null;\r\n        callback();\r\n      }\r\n    };\r\n  } else {\r\n    script.onload = () => callback();\r\n  }\r\n\r\n  script.src = url;\r\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\r\n};\r\n\r\nfunction handleScriptLoad(updateQuery, autoCompleteRef, props) {\r\n  autoComplete = new window.google.maps.places.Autocomplete(\r\n    autoCompleteRef.current,\r\n    { types: [\"geocode\"] }\r\n  );\r\n  autoComplete.setFields([\"address_components\", \"formatted_address\"]);\r\n  autoComplete.addListener(\"place_changed\", () =>\r\n    handlePlaceSelect(updateQuery, props)\r\n  );\r\n}\r\n\r\nasync function handlePlaceSelect(updateQuery, props) {\r\n  const addressObject = autoComplete.getPlace();\r\n  const query = addressObject.formatted_address;\r\n  updateQuery(query);\r\n  props.getLocation(addressObject)\r\n  // console.log(addressObject);\r\n\r\n}\r\n\r\nfunction SearchLocationInput(props) {\r\n  const [query, setQuery] = useState(\"\");\r\n  const autoCompleteRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    loadScript(\r\n      `https://maps.googleapis.com/maps/api/js?key=AIzaSyBFrua9P_qHcmF253UAXnw1wHnIC7nD2DY&libraries=places`,\r\n      () => handleScriptLoad(setQuery, autoCompleteRef, props)\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"search-location-input\">\r\n      <FormControl\r\n        ref={autoCompleteRef}\r\n        onChange={event => setQuery(event.target.value)}\r\n        placeholder=\"Pharmacy Address\"\r\n        value={query}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchLocationInput;",{"ruleId":"364","replacedBy":"365"},{"ruleId":"366","replacedBy":"367"},{"ruleId":"368","severity":1,"message":"369","line":9,"column":8,"nodeType":"370","messageId":"371","endLine":9,"endColumn":29},{"ruleId":"368","severity":1,"message":"372","line":11,"column":8,"nodeType":"370","messageId":"371","endLine":11,"endColumn":30},{"ruleId":"368","severity":1,"message":"373","line":2,"column":43,"nodeType":"370","messageId":"371","endLine":2,"endColumn":48},{"ruleId":"374","severity":1,"message":"375","line":150,"column":69,"nodeType":"376","messageId":"377","endLine":150,"endColumn":71},{"ruleId":"368","severity":1,"message":"378","line":5,"column":10,"nodeType":"370","messageId":"371","endLine":5,"endColumn":25},{"ruleId":"368","severity":1,"message":"379","line":2,"column":9,"nodeType":"370","messageId":"371","endLine":2,"endColumn":12},{"ruleId":"368","severity":1,"message":"380","line":2,"column":17,"nodeType":"370","messageId":"371","endLine":2,"endColumn":21},{"ruleId":"368","severity":1,"message":"381","line":2,"column":17,"nodeType":"370","messageId":"371","endLine":2,"endColumn":28},{"ruleId":"368","severity":1,"message":"382","line":2,"column":9,"nodeType":"370","messageId":"371","endLine":2,"endColumn":18},{"ruleId":"368","severity":1,"message":"383","line":2,"column":20,"nodeType":"370","messageId":"371","endLine":2,"endColumn":23},{"ruleId":"368","severity":1,"message":"379","line":2,"column":25,"nodeType":"370","messageId":"371","endLine":2,"endColumn":28},{"ruleId":"368","severity":1,"message":"379","line":2,"column":9,"nodeType":"370","messageId":"371","endLine":2,"endColumn":12},{"ruleId":"368","severity":1,"message":"382","line":2,"column":17,"nodeType":"370","messageId":"371","endLine":2,"endColumn":26},{"ruleId":"374","severity":1,"message":"384","line":99,"column":34,"nodeType":"376","messageId":"377","endLine":99,"endColumn":36},{"ruleId":"374","severity":1,"message":"384","line":101,"column":41,"nodeType":"376","messageId":"377","endLine":101,"endColumn":43},{"ruleId":"374","severity":1,"message":"384","line":103,"column":44,"nodeType":"376","messageId":"377","endLine":103,"endColumn":46},{"ruleId":"374","severity":1,"message":"384","line":105,"column":44,"nodeType":"376","messageId":"377","endLine":105,"endColumn":46},{"ruleId":"368","severity":1,"message":"385","line":109,"column":9,"nodeType":"370","messageId":"371","endLine":109,"endColumn":24},{"ruleId":"374","severity":1,"message":"384","line":111,"column":20,"nodeType":"376","messageId":"377","endLine":111,"endColumn":22},{"ruleId":"374","severity":1,"message":"384","line":111,"column":43,"nodeType":"376","messageId":"377","endLine":111,"endColumn":45},{"ruleId":"374","severity":1,"message":"384","line":111,"column":57,"nodeType":"376","messageId":"377","endLine":111,"endColumn":59},{"ruleId":"374","severity":1,"message":"384","line":111,"column":78,"nodeType":"376","messageId":"377","endLine":111,"endColumn":80},{"ruleId":"374","severity":1,"message":"384","line":111,"column":95,"nodeType":"376","messageId":"377","endLine":111,"endColumn":97},{"ruleId":"374","severity":1,"message":"384","line":111,"column":119,"nodeType":"376","messageId":"377","endLine":111,"endColumn":121},{"ruleId":"386","severity":1,"message":"387","line":116,"column":13,"nodeType":"388","endLine":116,"endColumn":23},{"ruleId":"386","severity":1,"message":"387","line":117,"column":13,"nodeType":"388","endLine":117,"endColumn":23},{"ruleId":"374","severity":1,"message":"384","line":118,"column":24,"nodeType":"376","messageId":"377","endLine":118,"endColumn":26},{"ruleId":"386","severity":1,"message":"387","line":119,"column":17,"nodeType":"388","endLine":119,"endColumn":27},{"ruleId":"386","severity":1,"message":"387","line":121,"column":17,"nodeType":"388","endLine":121,"endColumn":27},{"ruleId":"374","severity":1,"message":"384","line":128,"column":18,"nodeType":"376","messageId":"377","endLine":128,"endColumn":20},{"ruleId":"368","severity":1,"message":"389","line":226,"column":15,"nodeType":"370","messageId":"371","endLine":226,"endColumn":19},{"ruleId":"390","severity":1,"message":"391","line":284,"column":73,"nodeType":"392","messageId":"393","endLine":284,"endColumn":74,"suggestions":"394"},{"ruleId":"368","severity":1,"message":"379","line":2,"column":17,"nodeType":"370","messageId":"371","endLine":2,"endColumn":20},{"ruleId":"395","severity":1,"message":"396","line":39,"column":25,"nodeType":"397","endLine":39,"endColumn":109},{"ruleId":"395","severity":1,"message":"396","line":42,"column":25,"nodeType":"397","endLine":42,"endColumn":107},{"ruleId":"395","severity":1,"message":"396","line":45,"column":25,"nodeType":"397","endLine":45,"endColumn":102},{"ruleId":"395","severity":1,"message":"396","line":48,"column":25,"nodeType":"397","endLine":48,"endColumn":104},{"ruleId":"395","severity":1,"message":"396","line":51,"column":25,"nodeType":"397","endLine":51,"endColumn":103},{"ruleId":"395","severity":1,"message":"396","line":54,"column":25,"nodeType":"397","endLine":54,"endColumn":101},{"ruleId":"395","severity":1,"message":"396","line":57,"column":25,"nodeType":"397","endLine":57,"endColumn":107},{"ruleId":"374","severity":1,"message":"384","line":91,"column":34,"nodeType":"376","messageId":"377","endLine":91,"endColumn":36},{"ruleId":"374","severity":1,"message":"384","line":93,"column":41,"nodeType":"376","messageId":"377","endLine":93,"endColumn":43},{"ruleId":"374","severity":1,"message":"384","line":95,"column":44,"nodeType":"376","messageId":"377","endLine":95,"endColumn":46},{"ruleId":"374","severity":1,"message":"384","line":97,"column":44,"nodeType":"376","messageId":"377","endLine":97,"endColumn":46},{"ruleId":"368","severity":1,"message":"385","line":101,"column":9,"nodeType":"370","messageId":"371","endLine":101,"endColumn":24},{"ruleId":"374","severity":1,"message":"384","line":103,"column":20,"nodeType":"376","messageId":"377","endLine":103,"endColumn":22},{"ruleId":"374","severity":1,"message":"384","line":103,"column":43,"nodeType":"376","messageId":"377","endLine":103,"endColumn":45},{"ruleId":"374","severity":1,"message":"384","line":103,"column":57,"nodeType":"376","messageId":"377","endLine":103,"endColumn":59},{"ruleId":"374","severity":1,"message":"384","line":103,"column":78,"nodeType":"376","messageId":"377","endLine":103,"endColumn":80},{"ruleId":"374","severity":1,"message":"384","line":103,"column":95,"nodeType":"376","messageId":"377","endLine":103,"endColumn":97},{"ruleId":"374","severity":1,"message":"384","line":103,"column":119,"nodeType":"376","messageId":"377","endLine":103,"endColumn":121},{"ruleId":"386","severity":1,"message":"387","line":108,"column":13,"nodeType":"388","endLine":108,"endColumn":23},{"ruleId":"386","severity":1,"message":"387","line":109,"column":13,"nodeType":"388","endLine":109,"endColumn":23},{"ruleId":"374","severity":1,"message":"384","line":110,"column":24,"nodeType":"376","messageId":"377","endLine":110,"endColumn":26},{"ruleId":"386","severity":1,"message":"387","line":111,"column":17,"nodeType":"388","endLine":111,"endColumn":27},{"ruleId":"386","severity":1,"message":"387","line":113,"column":17,"nodeType":"388","endLine":113,"endColumn":27},{"ruleId":"374","severity":1,"message":"384","line":120,"column":18,"nodeType":"376","messageId":"377","endLine":120,"endColumn":20},{"ruleId":"368","severity":1,"message":"398","line":223,"column":15,"nodeType":"370","messageId":"371","endLine":223,"endColumn":23},{"ruleId":"390","severity":1,"message":"391","line":275,"column":73,"nodeType":"392","messageId":"393","endLine":275,"endColumn":74,"suggestions":"399"},{"ruleId":"374","severity":1,"message":"384","line":111,"column":34,"nodeType":"376","messageId":"377","endLine":111,"endColumn":36},{"ruleId":"374","severity":1,"message":"384","line":113,"column":41,"nodeType":"376","messageId":"377","endLine":113,"endColumn":43},{"ruleId":"374","severity":1,"message":"384","line":115,"column":44,"nodeType":"376","messageId":"377","endLine":115,"endColumn":46},{"ruleId":"374","severity":1,"message":"384","line":117,"column":44,"nodeType":"376","messageId":"377","endLine":117,"endColumn":46},{"ruleId":"368","severity":1,"message":"385","line":121,"column":9,"nodeType":"370","messageId":"371","endLine":121,"endColumn":24},{"ruleId":"374","severity":1,"message":"384","line":123,"column":20,"nodeType":"376","messageId":"377","endLine":123,"endColumn":22},{"ruleId":"374","severity":1,"message":"384","line":123,"column":43,"nodeType":"376","messageId":"377","endLine":123,"endColumn":45},{"ruleId":"374","severity":1,"message":"384","line":123,"column":57,"nodeType":"376","messageId":"377","endLine":123,"endColumn":59},{"ruleId":"374","severity":1,"message":"384","line":123,"column":78,"nodeType":"376","messageId":"377","endLine":123,"endColumn":80},{"ruleId":"374","severity":1,"message":"384","line":123,"column":95,"nodeType":"376","messageId":"377","endLine":123,"endColumn":97},{"ruleId":"374","severity":1,"message":"384","line":123,"column":119,"nodeType":"376","messageId":"377","endLine":123,"endColumn":121},{"ruleId":"386","severity":1,"message":"387","line":128,"column":13,"nodeType":"388","endLine":128,"endColumn":23},{"ruleId":"386","severity":1,"message":"387","line":129,"column":13,"nodeType":"388","endLine":129,"endColumn":23},{"ruleId":"374","severity":1,"message":"384","line":130,"column":24,"nodeType":"376","messageId":"377","endLine":130,"endColumn":26},{"ruleId":"386","severity":1,"message":"387","line":131,"column":17,"nodeType":"388","endLine":131,"endColumn":27},{"ruleId":"386","severity":1,"message":"387","line":133,"column":17,"nodeType":"388","endLine":133,"endColumn":27},{"ruleId":"374","severity":1,"message":"384","line":144,"column":18,"nodeType":"376","messageId":"377","endLine":144,"endColumn":20},{"ruleId":"368","severity":1,"message":"400","line":173,"column":15,"nodeType":"370","messageId":"371","endLine":173,"endColumn":23},{"ruleId":"368","severity":1,"message":"382","line":2,"column":17,"nodeType":"370","messageId":"371","endLine":2,"endColumn":26},{"ruleId":"374","severity":1,"message":"384","line":93,"column":34,"nodeType":"376","messageId":"377","endLine":93,"endColumn":36},{"ruleId":"374","severity":1,"message":"384","line":95,"column":41,"nodeType":"376","messageId":"377","endLine":95,"endColumn":43},{"ruleId":"374","severity":1,"message":"384","line":97,"column":44,"nodeType":"376","messageId":"377","endLine":97,"endColumn":46},{"ruleId":"374","severity":1,"message":"384","line":99,"column":44,"nodeType":"376","messageId":"377","endLine":99,"endColumn":46},{"ruleId":"368","severity":1,"message":"385","line":103,"column":9,"nodeType":"370","messageId":"371","endLine":103,"endColumn":24},{"ruleId":"374","severity":1,"message":"384","line":105,"column":20,"nodeType":"376","messageId":"377","endLine":105,"endColumn":22},{"ruleId":"374","severity":1,"message":"384","line":105,"column":43,"nodeType":"376","messageId":"377","endLine":105,"endColumn":45},{"ruleId":"374","severity":1,"message":"384","line":105,"column":57,"nodeType":"376","messageId":"377","endLine":105,"endColumn":59},{"ruleId":"374","severity":1,"message":"384","line":105,"column":78,"nodeType":"376","messageId":"377","endLine":105,"endColumn":80},{"ruleId":"374","severity":1,"message":"384","line":105,"column":95,"nodeType":"376","messageId":"377","endLine":105,"endColumn":97},{"ruleId":"374","severity":1,"message":"384","line":105,"column":119,"nodeType":"376","messageId":"377","endLine":105,"endColumn":121},{"ruleId":"386","severity":1,"message":"387","line":110,"column":13,"nodeType":"388","endLine":110,"endColumn":23},{"ruleId":"386","severity":1,"message":"387","line":111,"column":13,"nodeType":"388","endLine":111,"endColumn":23},{"ruleId":"374","severity":1,"message":"384","line":112,"column":24,"nodeType":"376","messageId":"377","endLine":112,"endColumn":26},{"ruleId":"386","severity":1,"message":"387","line":113,"column":17,"nodeType":"388","endLine":113,"endColumn":27},{"ruleId":"386","severity":1,"message":"387","line":115,"column":17,"nodeType":"388","endLine":115,"endColumn":27},{"ruleId":"374","severity":1,"message":"384","line":122,"column":18,"nodeType":"376","messageId":"377","endLine":122,"endColumn":20},{"ruleId":"368","severity":1,"message":"401","line":224,"column":15,"nodeType":"370","messageId":"371","endLine":224,"endColumn":28},{"ruleId":"390","severity":1,"message":"391","line":276,"column":73,"nodeType":"392","messageId":"393","endLine":276,"endColumn":74,"suggestions":"402"},{"ruleId":"395","severity":1,"message":"396","line":88,"column":25,"nodeType":"397","endLine":88,"endColumn":105},{"ruleId":"395","severity":1,"message":"396","line":91,"column":25,"nodeType":"397","endLine":91,"endColumn":110},{"ruleId":"395","severity":1,"message":"396","line":94,"column":25,"nodeType":"397","endLine":94,"endColumn":105},{"ruleId":"395","severity":1,"message":"396","line":97,"column":25,"nodeType":"397","endLine":97,"endColumn":201},{"ruleId":"395","severity":1,"message":"396","line":100,"column":25,"nodeType":"397","endLine":100,"endColumn":104},{"ruleId":"395","severity":1,"message":"396","line":103,"column":25,"nodeType":"397","endLine":103,"endColumn":201},{"ruleId":"395","severity":1,"message":"396","line":106,"column":25,"nodeType":"397","endLine":106,"endColumn":202},{"ruleId":"395","severity":1,"message":"396","line":109,"column":25,"nodeType":"397","endLine":109,"endColumn":194},{"ruleId":"395","severity":1,"message":"396","line":112,"column":25,"nodeType":"397","endLine":112,"endColumn":192},{"ruleId":"368","severity":1,"message":"403","line":2,"column":9,"nodeType":"370","messageId":"371","endLine":2,"endColumn":15},{"ruleId":"404","severity":1,"message":"405","line":8,"column":5,"nodeType":"406","messageId":"407","endLine":10,"endColumn":6},{"ruleId":"368","severity":1,"message":"383","line":6,"column":22,"nodeType":"370","messageId":"371","endLine":6,"endColumn":25},{"ruleId":"368","severity":1,"message":"408","line":7,"column":8,"nodeType":"370","messageId":"371","endLine":7,"endColumn":14},{"ruleId":"368","severity":1,"message":"409","line":9,"column":8,"nodeType":"370","messageId":"371","endLine":9,"endColumn":20},{"ruleId":"368","severity":1,"message":"410","line":60,"column":15,"nodeType":"370","messageId":"371","endLine":60,"endColumn":21},{"ruleId":"368","severity":1,"message":"403","line":2,"column":9,"nodeType":"370","messageId":"371","endLine":2,"endColumn":15},{"ruleId":"368","severity":1,"message":"411","line":2,"column":17,"nodeType":"370","messageId":"371","endLine":2,"endColumn":22},{"ruleId":"368","severity":1,"message":"381","line":2,"column":24,"nodeType":"370","messageId":"371","endLine":2,"endColumn":35},{"ruleId":"368","severity":1,"message":"412","line":2,"column":37,"nodeType":"370","messageId":"371","endLine":2,"endColumn":43},{"ruleId":"368","severity":1,"message":"381","line":2,"column":23,"nodeType":"370","messageId":"371","endLine":2,"endColumn":34},{"ruleId":"368","severity":1,"message":"412","line":2,"column":43,"nodeType":"370","messageId":"371","endLine":2,"endColumn":49},{"ruleId":"404","severity":1,"message":"405","line":4,"column":5,"nodeType":"406","messageId":"407","endLine":6,"endColumn":6},{"ruleId":"368","severity":1,"message":"413","line":3,"column":9,"nodeType":"370","messageId":"371","endLine":3,"endColumn":21},{"ruleId":"368","severity":1,"message":"414","line":3,"column":8,"nodeType":"370","messageId":"371","endLine":3,"endColumn":20},{"ruleId":"368","severity":1,"message":"415","line":214,"column":13,"nodeType":"370","messageId":"371","endLine":214,"endColumn":19},{"ruleId":"368","severity":1,"message":"403","line":2,"column":9,"nodeType":"370","messageId":"371","endLine":2,"endColumn":15},{"ruleId":"368","severity":1,"message":"403","line":2,"column":9,"nodeType":"370","messageId":"371","endLine":2,"endColumn":15},{"ruleId":"368","severity":1,"message":"416","line":2,"column":25,"nodeType":"370","messageId":"371","endLine":2,"endColumn":30},{"ruleId":"368","severity":1,"message":"417","line":2,"column":29,"nodeType":"370","messageId":"371","endLine":2,"endColumn":40},{"ruleId":"404","severity":1,"message":"405","line":6,"column":5,"nodeType":"406","messageId":"407","endLine":8,"endColumn":6},{"ruleId":"368","severity":1,"message":"415","line":157,"column":13,"nodeType":"370","messageId":"371","endLine":157,"endColumn":19},{"ruleId":"368","severity":1,"message":"418","line":5,"column":8,"nodeType":"370","messageId":"371","endLine":5,"endColumn":29},{"ruleId":"368","severity":1,"message":"379","line":2,"column":17,"nodeType":"370","messageId":"371","endLine":2,"endColumn":20},{"ruleId":"368","severity":1,"message":"419","line":2,"column":22,"nodeType":"370","messageId":"371","endLine":2,"endColumn":26},{"ruleId":"368","severity":1,"message":"411","line":2,"column":28,"nodeType":"370","messageId":"371","endLine":2,"endColumn":33},{"ruleId":"368","severity":1,"message":"420","line":2,"column":35,"nodeType":"370","messageId":"371","endLine":2,"endColumn":40},{"ruleId":"368","severity":1,"message":"421","line":2,"column":42,"nodeType":"370","messageId":"371","endLine":2,"endColumn":46},{"ruleId":"368","severity":1,"message":"383","line":2,"column":61,"nodeType":"370","messageId":"371","endLine":2,"endColumn":64},{"ruleId":"368","severity":1,"message":"389","line":182,"column":15,"nodeType":"370","messageId":"371","endLine":182,"endColumn":19},{"ruleId":"390","severity":1,"message":"391","line":244,"column":73,"nodeType":"392","messageId":"393","endLine":244,"endColumn":74,"suggestions":"422"},{"ruleId":"368","severity":1,"message":"382","line":2,"column":41,"nodeType":"370","messageId":"371","endLine":2,"endColumn":50},{"ruleId":"423","severity":1,"message":"424","line":55,"column":6,"nodeType":"425","endLine":55,"endColumn":8,"suggestions":"426"},"no-native-reassign",["427"],"no-negated-in-lhs",["428"],"no-unused-vars","'PharmacistProfilePage' is defined but never used.","Identifier","unusedVar","'PharmacistWorkingHours' is defined but never used.","'Toast' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'DateRangePicker' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'FormControl' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","Expected '===' and instead saw '=='.","'completeAddress' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'user' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["429","430"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'supplier' is assigned a value but never used.",["431","432"],"'pharmacy' is assigned a value but never used.","'dermatologist' is assigned a value but never used.",["433","434"],"'Button' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'moment' is defined but never used.","'Registration' is defined but never used.","'format' is assigned a value but never used.","'Modal' is defined but never used.","'Navbar' is defined but never used.","'PharmacyPage' is defined but never used.","'DropdownItem' is defined but never used.","'isBoss' is assigned a value but never used.","'Badge' is defined but never used.","'NavDropdown' is defined but never used.","'AllergyPatientListing' is defined but never used.","'Form' is defined but never used.","'Table' is defined but never used.","'Grid' is defined but never used.",["435","436"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["437"],"no-global-assign","no-unsafe-negation",{"messageId":"438","fix":"439","desc":"440"},{"messageId":"441","fix":"442","desc":"443"},{"messageId":"438","fix":"444","desc":"440"},{"messageId":"441","fix":"445","desc":"443"},{"messageId":"438","fix":"446","desc":"440"},{"messageId":"441","fix":"447","desc":"443"},{"messageId":"438","fix":"448","desc":"440"},{"messageId":"441","fix":"449","desc":"443"},{"desc":"450","fix":"451"},"removeEscape",{"range":"452","text":"453"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"454","text":"455"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"456","text":"453"},{"range":"457","text":"455"},{"range":"458","text":"453"},{"range":"459","text":"455"},{"range":"460","text":"453"},{"range":"461","text":"455"},"Update the dependencies array to be: [props]",{"range":"462","text":"463"},[12634,12635],"",[12634,12634],"\\",[12449,12450],[12449,12449],[12750,12751],[12750,12750],[11083,11084],[11083,11083],[1624,1626],"[props]"]