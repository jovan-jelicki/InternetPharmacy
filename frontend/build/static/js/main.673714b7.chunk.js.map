{"version":3,"sources":["components/AutoCompleteInput.jsx","components/Login.js","layout/UnregisteredLayout.jsx","components/pharmacy/PharmacySearch.jsx","components/pharmacy/PharmacyListing.jsx","components/MedicationListing.jsx","pages/IndexPage.js","components/UserInfo.js","components/AllergyPatientListing.js","components/AddAllergy.js","components/ChangePassword.js","layout/PatientLayout.jsx","pages/patient/PatientProfilePage.js","components/pharmacy/Promotions.js","pages/Registration.js","components/pharmacy/CreatePharmacistModal.js","components/pharmacy/AddAppointmentModal.js","components/pharmacy/PharmacyEmployees.js","components/pharmacy/PharmacyMedications.js","components/pharmacy/PharmacyVacationsRequests.js","components/pharmacy/MedicationOrdersList.js","components/pharmacy/MedicationOffers.js","components/pharmacy/AddMedicationQuantity.js","components/pharmacy/OrderQuantityListing.js","components/pharmacy/CreateOrder.js","components/pharmacy/PharmacyMedicationOrders.js","components/pharmacy/PharmacyMedicationQueries.js","components/pharmacy/PharmacyDescription.js","components/pharmacy/PriceList.js","components/pharmacy/PharmacyReports.js","components/pharmacy/AppointmentsList.js","pages/PharmacyPage.js","pages/ReviewedClients.js","pages/VacationRequest.js","pages/patient/PatientHomePage.jsx","pages/Dermatologist/DermatologistsProfilePage.js","components/WorkingHoursCalendar.js","pages/Dermatologist/DermatologistWorkingHours.js","components/ScheduledAppointments.js","components/ChooseTherapy.js","components/ScheduleByDateTime.js","components/Appointment.js","pages/Dermatologist/DermatologistAppointmentStart.js","pages/Dermatologist/DermatologistHomePage.js","pages/Pharmacist/PharmacistProfilePage.js","pages/Pharmacist/PharmacistWorkingHours.js","pages/Pharmacist/PharmacistConsultationStart.js","pages/Pharmacist/PharmacistGiveMedicine.js","pages/Pharmacist/PharmacistHomePage.js","components/PharmacyRegistration.js","components/DermatologistRegistration.js","components/SupplierRegistration.js","components/AddNewMedication.js","components/Complaints.js","components/LoyaltyProgram.js","components/PharmacyAdminRegistration.js","pages/ISAdminHomePage.js","layout/PharmacyAdminLayout.js","pages/PharmacyAdminProfilePage.js","components/Supplier/MedicationOrdersForSupplier.js","components/Supplier/CreateNewOffer.js","components/Supplier/SupplierMedicationOffers.js","components/Supplier/SupplierProfile.js","pages/SupplierHomePage.js","components/DateTime.jsx","components/ScheduleCounsel.js","pages/patient/PatientCounselScheduling.jsx","pages/RegistrationConfirmation.js","App.js","index.js"],"names":["autoComplete","Login","props","handleModal","setState","showModal","state","password","validationErrorMessage","event","target","name","value","errors","email","isValidEmail","length","validateForm","valid","Object","entries","forEach","item","console","log","test","loginForm","a","submitted","preventDefault","sendData","handleInputChange","bind","alert","this","axios","post","user","then","res","className","Button","type","onClick","Modal","show","onHide","Header","closeButton","Title","Body","Form","onSubmit","handleSubmit","Group","size","controlId","Label","Control","autoFocus","placeholder","onChange","e","Footer","variant","React","Component","UnregisteredLayout","Container","fluid","style","Navbar","collapseOnSelect","expand","bg","Brand","href","Collapse","id","Nav","Link","children","handleScriptLoad","updateQuery","autoCompleteRef","window","google","maps","places","Autocomplete","current","types","setFields","addListener","handlePlaceSelect","addressObject","getPlace","query","formatted_address","getLocation","SearchLocationInput","useState","setQuery","useRef","useEffect","url","callback","script","document","createElement","readyState","onreadystatechange","onload","src","getElementsByTagName","appendChild","loadScript","FormControl","ref","PharmacySearch","street","town","country","search","cancel","address_components","component","includes","long_name","location","Row","Col","xs","span","PharmacyListing","pharmacies","get","data","pharmaciesBackup","map","pharmacy","index","address","Card","text","width","height","Subtitle","Text","description","MedicationListing","medications","medication","ingredients","ingredient","i","manufacturer","note","IndexPage","UserInfo","edit","Table","striped","hover","firstName","lastName","phoneNumber","AllergyPatientListing","removeAllergy","allergy","allergies","AddAllergy","handleChange","addAllergy","filter","disabled","ChangePassword","validatePassword","repErr","val","newPass","pass","substr","Math","min","trim","disable","PatientLayout","as","NavLink","to","NavDropdown","title","Item","PatientProfilePage","createBackupUser","activateUpdateMode","resetData","editMode","changePasswordMode","activateChangePasswordMode","changePass","put","oldPass","repPass","catch","disableSave","save","userType","penaltyCount","patient","credentials","contact","passwords","defaultActiveKey","saveDisabled","Promotions","promotions","content","periodStart","periodEnd","marginLeft","class","promotion","alt","Registration","confirmForm","localStorage","getItem","JSON","parse","sendParams","setItem","stringify","submitForm","info","buttonSubmit","buttonConfirm","sendMail","handlePassChange","rePassword","input","getElementById","setAddressParams","addressPom","streetP","townP","countryP","latitude","geometry","lat","longitude","lng","addressErrors","number","city","undefined","bool","telephone","isValidTelephone","isValidPassword","validForm","background","color","marginTop","textAlignVertical","textAlign","Alert","display","justifyContent","alignItems","onLoad","CreatePharmacistModal","workingHours","period","startShift","endShift","closeModal","fetchPharmacists","setStartShift","date","setEndShift","marginRight","AddAppointmentModal","appointmentDate","day","getDate","month","parseInt","getMonth","fullYear","getFullYear","examinerId","dermatologist","appointmentStatus","setDate","setPeriodStart","setPeriodEnd","selected","dateFormat","minDate","Date","format","PharmacyEmployees","handleDermatologistForAddingChange","path","dermatologistForAdding","renderModalAddDermatologist","showModalAddDermatologist","handleModalAddDermatologist","notWorkingDermatologists","scope","addDermatologist","openModalAddDermatologist","fetchDermatologistNotWorkingInThisPharmacy","finalDermatologist","push","fetchWorkingDermatologists","renderModalCreatePharmacist","showModalCreatePharmacist","handleModalCreatePharmacist","renderModalAddAppointment","showModalAddAppointment","handleModalAddAppointment","dermatologistModalAddAppointment","deleteDermatologist","isBoss","confirm","deletePharmacist","pharmacists","backupPharmacists","dermatologists","backupDermatologists","changeSearchPharmacist","searchPharmacist","resetSearchPharmacist","pharmacist","filterPharmacists","Toggle","aria-controls","inline","grade","moment","workingHour","options","defaultOption","PharmacyMedications","deleteMedication","dose","loyaltyPoints","medicationShape","medicationIssue","quantity","price","sideEffect","alternatives","PharmacyVacationsRequests","handleRejectionNoteChange","modalVacationRequest","rejectionNote","rejectRequest","fetchVacationRequests","vacationRequest","acceptVacationRequest","employeeFirstName","vacationRequests","employeeLastName","employeeType","vacationNote","vacationRequestStatus","MedicationOrdersList","showOffersButtonClick","showOffers","createOrder","deleteOrder","order","medicationOrders","showContent","radioAll","radioPending","radioProcessed","pharmacyAdmin","deadLine","medicationQuantity","status","medicationOffers","ButtonGroup","Input","standalone","defaultChecked","medicationOrder","MedicationOffers","supplier","shippingDate","medicationOffer","AddMedicationQuantity","inputOrder","addQuantity","isNaN","OrderQuantityListing","quantities","removeQuantity","CreateOrder","concat","changeDatePicker","PharmacyMedicationOrders","handleContent","changeContent","showCreateOrder","nextProps","nextState","nextContext","PharmacyMedicationQueries","mapStyles","PharmacyDescription","onMarkerClick","marker","selectedPlace","activeMarker","showingInfoWindow","onClose","zoom","initialCenter","visible","GoogleApiWrapper","apiKey","PriceList","PharmacyReports","AppointmentsList","fetchAppointments","appointments","appointment","dermatologistFirstName","dermatologistLastName","cost","dermatologistGrade","PharmacyPage","navbar","renderNavbar","pharmacyId","medicationReservation","ReviewedClients","clients","searchClients","c","toLowerCase","replace","sortByFirstName","sortType","sort","b","sortByLastName","ssearchClients","sortByDateOfAppointment","dateOfAppointment","role","Id","process","REACT_APP_BACKEND_ADDRESS","Clients","client","key","pharmacyName","patientFirstName","patientLastName","FormGroup","VacationRequest","startDate","endDate","hours","getHours","minutes","getMinutes","fullYearStart","fullYearEnd","PharmaciesTag","rows","cols","PatientHomePage","DermatologistsProfilePage","WorkingHoursCalendar","ColoredDateCellWrapper","cloneElement","Children","only","backgroundColor","MyCalendar","localizer","momentLocalizer","events","popup","views","keys","Views","k","step","timeslots","showMultiDayTimes","onDoubleClickEvent","components","timeSlotWrapper","backdrop","desc","start","end","DermatologistWorkingHours","myEvents","ScheduledAppointments","renderAll","Events","handleClickStart","handleClickCancel","renderParent","ChooseTherapy","createEPrescription","showModalDialog","Ingredients","SideEffect","effect","setStartDate","setEndDate","chooseMedication","removeMedication","Drugs","dateStartTherapy","dateEndTherapy","ScheduleByDateTime","setTimeForNewAppointment","timeForScheduling","message","float","Appointment","getPatientsInfo","fontSize","textDecoration","patientId","es","showScheduling","scheduleNewAppointment","m","finishAppointment","report","clear","DermatologistAppointmentStart","startedAppointment","dermatologistEvents","DermatologistHomePage","PharmacistProfilePage","PharmacistWorkingHours","PharmacistConsultationStart","startedConsultation","componentDidMount","PharmacistGiveMedicine","showReservation","reservation","giveMedicine","reservationFound","medicineCode","getReservation","pharmacistId","medicationId","marginBottom","margin","PharmacistHomePage","label","PharmacyRegistration","handleAdminChange","selectedOption","newitems","selectErrors","numberOfRows","isSearchable","DermatologistRegistration","SupplierRegistration","AddNewMedication","handleMultiChange","l","sideEffects","meditation","handleSelectChange","shape","ingredientsTag","shapeTag","sideEffectsTag","alternativesTag","typeTag","multiple","Complaints","LoyaltyProgram","PharmacyAdminRegistration","ISAdminHomePage","PharmacyAdminLayout","PharmacyAdminProfilePage","MedicationOrdersForSupplier","CreateNewOffer","SupplierMedicationOffers","onValueChange","option","medicationOffersPom","filteredData","column","indexOf","checked","SupplierProfile","SupplierHomePage","DateTime","extendDate","dateTime","year","hour","minute","second","getSeconds","offset","ScheduleCounsel","schedule","p","pharmacyDTO","pharmacistPlain","pharmacistPlainDTO","ListGroup","Accordion","eventKey","PatientCounselScheduling","Set","x","RegistrationConfirmation","confirmation","opener","open","close","Heading","App","updateUserData","username","userRole","exact","render","ReactDOM"],"mappings":"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","file":"static/js/main.673714b7.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { FormControl } from 'react-bootstrap'\r\n\r\n\r\nlet autoComplete;\r\n\r\nconst loadScript = (url, callback) => {\r\n  let script = document.createElement(\"script\");\r\n  script.type = \"text/javascript\";\r\n\r\n  if (script.readyState) {\r\n    script.onreadystatechange = function() {\r\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\r\n        script.onreadystatechange = null;\r\n        callback();\r\n      }\r\n    };\r\n  } else {\r\n    script.onload = () => callback();\r\n  }\r\n\r\n  script.src = url;\r\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\r\n};\r\n\r\nfunction handleScriptLoad(updateQuery, autoCompleteRef, props) {\r\n  autoComplete = new window.google.maps.places.Autocomplete(\r\n    autoCompleteRef.current,\r\n    { types: [\"geocode\"] }\r\n  );\r\n  autoComplete.setFields([\"address_components\", \"formatted_address\"]);\r\n  autoComplete.addListener(\"place_changed\", () =>\r\n    handlePlaceSelect(updateQuery, props)\r\n  );\r\n}\r\n\r\nasync function handlePlaceSelect(updateQuery, props) {\r\n  const addressObject = autoComplete.getPlace();\r\n  const query = addressObject.formatted_address;\r\n  updateQuery(query);\r\n  props.getLocation(addressObject)\r\n  // console.log(addressObject);\r\n\r\n}\r\n\r\nfunction SearchLocationInput(props) {\r\n  const [query, setQuery] = useState(\"\");\r\n  const autoCompleteRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    loadScript(\r\n      `https://maps.googleapis.com/maps/api/js?key=AIzaSyBFrua9P_qHcmF253UAXnw1wHnIC7nD2DY&libraries=places`,\r\n      () => handleScriptLoad(setQuery, autoCompleteRef, props)\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"search-location-input\">\r\n      <FormControl\r\n        ref={autoCompleteRef}\r\n        onChange={event => setQuery(event.target.value)}\r\n        placeholder=\"Pharmacy Address\"\r\n        value={query}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchLocationInput;","import React from \"react\";\r\nimport {Button, Col, Form, Modal} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'password': '',\r\n            'email': '',\r\n            errors: {\r\n                'email': 'Enter Email.',\r\n                'password': 'Enter Password.'\r\n            },\r\n            submitted: false\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        alert('A name was submitted: ' + this.state.value);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n        this.validationErrorMessage(event);\r\n    }\r\n    handleModal = () => {\r\n        this.setState({\r\n            showModal : !this.state.showModal,\r\n            password: '',\r\n            'email': '',\r\n        });\r\n    }\r\n    validationErrorMessage = (event) => {\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n        switch (name) {\r\n            case 'email':\r\n                errors.email = this.isValidEmail(value) ? '' : 'Wrong email format. Please check and try again.';\r\n                break;\r\n            case 'password':\r\n                errors.password = value.length < 1 ? 'Enter Password' : '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({ errors });\r\n    }\r\n\r\n    validateForm = (errors) => {\r\n        let valid = true;\r\n        Object.entries(errors).forEach(item => {\r\n            console.log(item)\r\n            item && item[1].length > 0 && (valid = false)\r\n        })\r\n        return valid;\r\n    }\r\n    isValidEmail = (value) => {\r\n        return !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,64}$/i.test(value))\r\n    }\r\n\r\n    async sendData() {\r\n        axios\r\n            .post('http://localhost:8080/api/users', {\r\n                'email':this.state.user.email,\r\n                'password':this.state.user.password\r\n            })\r\n            .then(res => {\r\n\r\n            });\r\n\r\n    }\r\n\r\n    loginForm = async (event) => {\r\n        this.setState({ submitted: true });\r\n        event.preventDefault();\r\n        if (this.validateForm(this.state.errors)) {\r\n            console.log('Valid Form')\r\n            this.sendData();\r\n        } else {\r\n            console.log('Invalid Form')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Button type=\"button\" className=\"btn btn-secondary\"  onClick={this.handleModal}>Login</Button>\r\n\r\n                <Modal show={this.state.showModal} onHide={this.handleModal}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Login</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group size=\"lg\" controlId=\"email\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control autoFocus name=\"email\" placeholder=\"email\"  type=\"email\" value={this.state.email} onChange={(e) => { this.handleInputChange(e)} } />\r\n                                { this.state.submitted && this.state.errors.email.length > 0 &&  <span className=\"text-danger\">{this.state.errors.email}</span>}\r\n                            </Form.Group>\r\n                            <Form.Group size=\"lg\" controlId=\"password\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\"  name=\"password\" placeholder=\"password\"  value={this.state.password} onChange={(e) => { this.handleInputChange(e)} } />\r\n                                { this.state.submitted && this.state.errors.password.length > 0 &&  <span className=\"text-danger\">{this.state.errors.password}</span>}\r\n\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleModal}  >\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.loginForm}>\r\n                            Ok\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n\r\n}","import React from 'react'\r\nimport { Container, Navbar, NavDropdown, Nav } from 'react-bootstrap';\r\nimport Login from \"../components/Login\";\r\n\r\nexport default class UnregisteredLayout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid style={{'background-color' : '#AEB6BF'}}>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"/\">WebPharm</Navbar.Brand>\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"#pharmacies\">Pharmacies</Nav.Link>\r\n                        <Nav.Link href=\"#medications\">Medications</Nav.Link>\r\n                    </Nav>\r\n                    <Nav>\r\n                    <Login/>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            {this.props.children}\r\n        </Container>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Row, Button, FormControl, Col, Container } from 'react-bootstrap'\r\nimport SearchLocationInput from '../AutoCompleteInput'\r\n\r\nclass PharmacySearch extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name : '',\r\n            street : '',\r\n            town : '',\r\n            country : ''\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.getLocation = this.getLocation.bind(this)\r\n        this.search = this.search.bind(this)\r\n        this.cancel = this.cancel.bind(this)\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target\r\n        this.setState({\r\n            [target.name] : target.value\r\n        })\r\n    }\r\n\r\n    getLocation({address_components}) {\r\n        let street, town, country\r\n        address_components.forEach(component => {\r\n            if (component.types.includes('route'))\r\n                street = component.long_name\r\n            else if (component.types.includes('locality'))\r\n                town = component.long_name\r\n            else if (component.types.includes('country'))\r\n                country = component.long_name\r\n        })\r\n\r\n        this.setState({\r\n            street: street || '',\r\n            town : town || '',\r\n            country : country || ''\r\n        })\r\n    }\r\n\r\n    search() {\r\n        this.props.search({\r\n            name : this.state.name,\r\n            location : {\r\n                street : this.state.street,\r\n                town : this.state.town,\r\n                country : this.state.country\r\n            }\r\n        })\r\n    }\r\n\r\n    cancel() {\r\n        this.props.cancel()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col xs={{ span: 2.5}} className={'ml-3'}>\r\n                    <FormControl name=\"name\" className=\"mt-2 mb-2\" value={this.state.name}\r\n                            placeholder={'Pharmacy Name'} onChange={this.handleInputChange}/>\r\n                </Col>\r\n                <Col className={'pt-2'} xs={{ span: 2.5 }}>\r\n                    <SearchLocationInput getLocation={this.getLocation}/>\r\n                </Col>\r\n                <Col className={'pt-2'} xs={{ span: 0.5  }}>\r\n                    <Button variant={'outline-dark'} onClick={this.cancel}>Cancel</Button>\r\n                </Col>\r\n                <Col className={'pt-2'} xs={{ span: 0.5 }}>\r\n                    <Button variant={'dark'} onClick={this.search}>Go</Button>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PharmacySearch","import React from 'react';\r\nimport {Card, Col, Row, Badge} from \"react-bootstrap\";\r\nimport PharmacySearch from './PharmacySearch';\r\nimport axios from 'axios';\r\n\r\nexport default class PharmacyListing extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            pharmacies : [],\r\n        }\r\n        this.search = this.search.bind(this)\r\n        this.cancel = this.cancel.bind(this)\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await axios\r\n        .get('http://localhost:8080/api/pharmacy')\r\n        .then((res) => {\r\n            this.setState({\r\n                pharmacies : res.data\r\n            })\r\n        })\r\n\r\n        this.pharmaciesBackup = [...this.state.pharmacies]\r\n    }\r\n\r\n    cancel() {\r\n        console.log(this.pharmaciesBackup)\r\n        this.setState({\r\n            pharmacies : this.pharmaciesBackup\r\n        })\r\n    }\r\n\r\n    search({name, location}) {\r\n        console.log(name, location)\r\n        axios\r\n        .post('http://localhost:8080/api/pharmacy/search', {\r\n            'name' : name,\r\n            'street' : location.street,\r\n            'town' : location.town,\r\n            'country': location.country\r\n        })\r\n        .then((res) => {\r\n            this.setState({\r\n                pharmacies : res.data\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const pharmacies = this.state.pharmacies.map((pharmacy, index) => {\r\n            const address = pharmacy.address.street + ', ' + pharmacy.address.town + ', ' + pharmacy.address.country \r\n            return (\r\n                <Col xs={4} >\r\n                <Card bg={'dark'} key={index} text={'white'} style={{ width: '25rem', height: '20rem' }} className=\"mb-2\">\r\n                    <Card.Body>\r\n                    <Card.Title>{pharmacy.name}</Card.Title>\r\n                        <Card.Subtitle className=\"mb-5 mt-2 text-muted\">{address}</Card.Subtitle>\r\n                        <Card.Text>\r\n                        {pharmacy.description}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                </Col>\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                <Row >    \r\n                        <h2 className={'mt-5 ml-3'} id=\"pharmacies\">Pharmacies</h2> \r\n                </Row>\r\n                <PharmacySearch search={this.search} cancel={this.cancel}/>\r\n                <Row className={'mt-4'}>\r\n                    {pharmacies}\r\n                </Row>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}","import React from 'react'\r\nimport {Card, Col, Row} from \"react-bootstrap\";\r\nimport axios from 'axios';\r\n\r\nexport default class MedicationListing extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            medications : []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await axios\r\n        .get('http://localhost:8080/api/medications')\r\n        .then((res) => {\r\n            this.setState({\r\n                medications : res.data\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const medications = this.state.medications.map((medication, index) => {\r\n            let ingredients = ''\r\n            medication.ingredient.forEach(i => ingredients += ' ' + i.name)\r\n            return (\r\n                <Col xs={4} key={index}>\r\n                <Card \r\n                    bg={'dark'}\r\n                    key={index}\r\n                    text={'white'}\r\n                    style={{ width: '25rem', height: '20rem' }}\r\n                    className=\"mb-2\"\r\n                >\r\n                    <Card.Body>\r\n                    <Card.Title>{medication.name}</Card.Title>\r\n                        <Card.Subtitle className=\"mb-5 mt-2 text-muted\">{medication.manufacturer}</Card.Subtitle>\r\n                        <Card.Text>\r\n                        {medication.note}\r\n                        <hr style={{'background-color' : 'gray'}}/>\r\n                        {ingredients}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                </Col>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <Row>\r\n                <h2 className={'mt-5 ml-3'} id=\"medications\">Medications</h2>\r\n                </Row>\r\n                <Row className={'mt-4'}>\r\n                    {medications}\r\n                </Row>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\nimport UnregisteredLayout from \"../layout/UnregisteredLayout\"\r\nimport PharmacyListing from \"../components/pharmacy/PharmacyListing\"\r\nimport MedicationListing from \"../components/MedicationListing\"\r\n\r\nexport default class IndexPage extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <UnregisteredLayout>\r\n                    <PharmacyListing/>\r\n                    <MedicationListing/>\r\n                </UnregisteredLayout>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {Container, Row, Col, Table, FormControl} from \"react-bootstrap\";\r\n\r\nclass UserInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        this.props.onChange(event)\r\n    }\r\n\r\n    render() {\r\n        let {user, edit} = this.props;\r\n\r\n        return (\r\n            <Table striped hover variant={'dark'}>\r\n                <tbody>\r\n                <tr>\r\n                    <td>First Name</td>\r\n                    {edit\r\n                        ? <FormControl name=\"firstName\" className=\"mt-2 mb-2\" value={user.firstName}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.firstName}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Last Name</td>\r\n                    {edit\r\n                        ? <FormControl name=\"lastName\" className=\"mt-2 mb-2\" value={user.lastName}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.lastName}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Email</td>\r\n                    <td>{user.email}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Address</td>\r\n                    {edit\r\n                        ? <FormControl name=\"address\" className=\"mt-2 mb-2\" value={user.address}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.address}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Town</td>\r\n                    {edit\r\n                        ? <FormControl name=\"town\" className=\"mt-2 mb-2\" value={user.town}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.town}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Country</td>\r\n                    {edit\r\n                        ? <FormControl name=\"country\" className=\"mt-2 mb-2\" value={user.country}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.country}</td>\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    <td>Phone Number</td>\r\n                    {edit\r\n                        ? <FormControl name=\"phoneNumber\" className=\"mt-2 mb-2\" value={user.phoneNumber}\r\n                                       onChange={this.handleInputChange}/>\r\n                        : <td>{user.phoneNumber}</td>\r\n                    }\r\n                </tr>\r\n                </tbody>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserInfo;","import React from \"react\";\r\nimport {Button, Card, Col, Row} from \"react-bootstrap\";\r\n\r\nclass AllergyPatientListing extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.removeAllergy = this.removeAllergy.bind(this);\r\n    }\r\n\r\n    removeAllergy(allergy) {\r\n        this.props.removeAllergy(allergy)\r\n    }\r\n\r\n    render() {\r\n        \r\n        const allergies = this.props.allergies.map((allergy, index) => {\r\n            return (\r\n                <Col xs={3}>\r\n                    <div className=\"m-2 bg-primary p-2\" style={{ height: '3rem' }}>\r\n                        {this.props.edit && <Button variant=\"primary\" className=\"mr-3 p-0\" style={{width: '1rem'}}\r\n                                 onClick={this.removeAllergy.bind(this, allergy.id)}>X</Button>}\r\n                        <label className='text-light'>{allergy.name}</label>\r\n                    </div>\r\n                </Col>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <Row>\r\n                {allergies}\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllergyPatientListing;","import React from \"react\";\r\nimport {Button, FormControl} from \"react-bootstrap\";\r\nimport axios from 'axios';\r\n\r\nclass AddAllergy extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'allergy' : 'Add allergy',\r\n            'allergies' : []\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addAllergy = this.addAllergy.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await axios\r\n            .get('http://localhost:8080/api/ingredients')\r\n            .then(res => {\r\n                this.setState({\r\n                    'allergies' : res.data\r\n                })\r\n            });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({allergy: event.target.value});\r\n    }\r\n\r\n    addAllergy() {\r\n        this.props.addAllergy(this.state.allergies.filter(a => a.name === this.state.allergy)[0])\r\n    }\r\n\r\n    render() {\r\n        const allergies = this.state.allergies.map((allergy, index) => {\r\n            return <option value={allergy.name} key={index}>{allergy.name}</option>\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <select value={this.state.allergy} style={{width: '15rem'}} className=\"mr-2\"\r\n                        onChange={this.handleChange}>\r\n                    <option disabled>Add allergy</option>\r\n                    {allergies}\r\n                </select>\r\n                <Button variant=\"success\" className=\"mb-3\" onClick={this.addAllergy}>Add</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AddAllergy;","import React from \"react\";\r\nimport {Col, Container, FormControl, Row} from \"react-bootstrap\";\r\n\r\nclass ChangePassword extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'repErr' : ''\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.validatePassword = this.validatePassword.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        this.props.onChange(event);\r\n        this.validatePassword(event);\r\n    }\r\n\r\n    validatePassword(event) {\r\n        let repErr = ''\r\n        let val = event.target.value;\r\n        let newPass = this.props.pass[1]\r\n\r\n        if (event.target.name === 'repPass')\r\n            if(val !== newPass.substr(0, Math.min(val.length, newPass.length)) ||\r\n                (val.trim() === '' && newPass.trim() !== '')) {\r\n                repErr = 'This password must match the previous';\r\n                this.props.disable(true);\r\n            }\r\n            else\r\n                this.props.disable(false);\r\n\r\n        this.setState({\r\n            'repErr': repErr\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h2 className=\"pt-4 pb-3\">Change Password</h2>\r\n                <Row className=\"m-2\">\r\n                    <FormControl name=\"oldPass\" type=\"password\" placeholder=\"Password\"\r\n                                 value={this.props.pass[0]} onChange={this.handleInputChange}/>\r\n                </Row>\r\n                <Row className=\"m-2\">\r\n                    <FormControl name=\"newPass\" type=\"password\" placeholder=\"New Password\"\r\n                                 value={this.props.pass[1]} onChange={this.handleInputChange}/>\r\n                </Row>\r\n                <Row className=\"m-2\">\r\n                    <FormControl name=\"repPass\" type=\"password\" placeholder=\"Repeat new Password\"\r\n                                 value={this.props.pass[2]} onChange={this.handleInputChange}/>\r\n                    <label className=\"text-danger\">{this.state.repErr}</label>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChangePassword;","import React from 'react'\r\nimport { Container, Navbar, NavDropdown, Nav } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass PatientLayout extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid style={{'background-color' : '#AEB6BF'}}>\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand as={NavLink} to=\"/\">WebPharm</Navbar.Brand>\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                        <NavDropdown title=\"Pharmacies\" id=\"collasible-nav-dropdow\">\r\n                                <NavDropdown.Item href=\"javascript:;\">All Pharmacies</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"javascript:;\">Promotions</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Schedule\" id=\"collasible-nav-dropdow\">\r\n                                <NavDropdown.Item href=\"javascript:;\">Dermatologist Examination</NavDropdown.Item>\r\n                                <NavDropdown.Item as={NavLink} to='/patient-counsel-schedule'>Pharmacist Counseling</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"javascript:;\">All Schedules</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Medications\" id=\"collasible-nav-dropdow\">\r\n                                <NavDropdown.Item href=\"javascript:;\">Reservations</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"javascript:;\">Pick Up</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"ePrescription\" id=\"collasible-nav-dropdow\">\r\n                                <NavDropdown.Item href=\"javascript:;\">Prescriptions History</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"javascript:;\">Medication History</NavDropdown.Item>\r\n                            </NavDropdown>    \r\n                        </Nav>\r\n                        <Nav>\r\n                            <NavDropdown title=\"Account\" id=\"collasible-nav-dropdow\">\r\n                                <NavDropdown.Item as={NavLink} to='/patient-profile'>My Account</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"javascript:;\">Penalties</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <Nav.Link as={NavLink} to='javascript:;'>File a Complaint</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                {this.props.children}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PatientLayout","import React from \"react\";\r\nimport {Col, Container, Nav, Row, Button, Toast} from \"react-bootstrap\";\r\nimport UserInfo from \"../../components/UserInfo\";\r\nimport AllergyPatientListing from \"../../components/AllergyPatientListing\";\r\nimport AddAllergy from \"../../components/AddAllergy\";\r\nimport ChangePassword from \"../../components/ChangePassword\";\r\nimport axios from \"axios\"\r\nimport PatientLayout from \"../../layout/PatientLayout\";\r\n\r\nexport default class PatientProfilePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'firstName' : '',\r\n            'lastName' : '',\r\n            'email' : '',\r\n            'address' : '',\r\n            'town' : '',\r\n            'country' : '',\r\n            'phoneNumber' : '',\r\n            'oldPass' : '',\r\n            'newPass' : '',\r\n            'repPass' : '',\r\n            'allergies' : [],\r\n            'editMode' : false,\r\n            'saveDisabled' : false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        await axios\r\n            .get('http://localhost:8080/api/patients/0')\r\n            .then(res => {\r\n                let patient = res.data;\r\n                console.log(patient)\r\n                this.setState({\r\n                    'id' : patient.id,\r\n                    'firstName' : patient.firstName,\r\n                    'lastName' : patient.lastName,\r\n                    'email' : patient.credentials.email,\r\n                    'password' : patient.credentials.password,\r\n                    'penaltyCount' : patient.penaltyCount,\r\n                    'userType' : patient.userType,\r\n                    'editMode' : false,\r\n                    'changePasswordMode' : false,\r\n                    'address' : patient.contact.address.street,\r\n                    'town' : patient.contact.address.town,\r\n                    'country' : patient.contact.address.country,\r\n                    'phoneNumber' : patient.contact.phoneNumber\r\n                })\r\n            });\r\n\r\n        await axios\r\n            .get('http://localhost:8080/api/patients/allergies/0')\r\n            .then(res => {\r\n                this.setState({\r\n                    'allergies' : res.data\r\n                })\r\n            });\r\n\r\n        this.createBackupUser();\r\n    }\r\n\r\n    createBackupUser = () => {\r\n        this.user = {\r\n            'firstName' : this.state.firstName,\r\n            'lastName' : this.state.lastName,\r\n            'email' : this.state.email,\r\n            'address' : this.state.address,\r\n            'town' : this.state.town,\r\n            'country' : this.state.country,\r\n            'phoneNumber' : this.state.phoneNumber,\r\n            'allergies' : [...this.state.allergies]\r\n        }\r\n\r\n        this.setState({\r\n            'editMode' : false,\r\n            'changePasswordMode' : false\r\n        })\r\n    }\r\n\r\n    activateUpdateMode = () => {\r\n        this.resetData();\r\n        this.setState({\r\n            editMode : !this.state.editMode,\r\n            changePasswordMode : false\r\n        })\r\n    }\r\n\r\n    activateChangePasswordMode = () => {\r\n        this.setState({\r\n            'saveDisabled' : !this.state.changePasswordMode,\r\n            'changePasswordMode' : !this.state.changePasswordMode,\r\n            'oldPass' : '',\r\n            'newPass' : '',\r\n            'repPass' : ''\r\n        })\r\n    }\r\n\r\n    changePass = () => {\r\n        axios\r\n        .put('http://localhost:8080/api/patients/pass', {\r\n            'userId' : this.state.id,\r\n            'oldPassword' : this.state.oldPass,\r\n            'newPassword' : this.state.newPass,\r\n            'repeatedPassword' : this.state.repPass\r\n        })\r\n        .then(res => {\r\n            this.setState({\r\n                'password' : this.state.newPass\r\n            })\r\n        })\r\n        .catch(e => alert('Nisam pijana i nece moci!!!'));\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        this.setState({\r\n            [target.name] : target.value,\r\n        })\r\n    }\r\n\r\n    resetData = () => {\r\n        this.setState({\r\n            'firstName' : this.user.firstName,\r\n            'lastName' : this.user.lastName,\r\n            'address' : this.user.address,\r\n            'town' : this.user.town,\r\n            'country' : this.user.country,\r\n            'phoneNumber' : this.user.phoneNumber,\r\n            'allergies' : this.user.allergies\r\n        })\r\n    }\r\n\r\n    disableSave = (disable) => {\r\n        this.setState({\r\n            'saveDisabled' : disable\r\n        })\r\n    }\r\n\r\n    addAllergy = (allergy) => {\r\n        if(!this.state.allergies.map(a => a.id).includes(allergy.id))\r\n            this.setState({\r\n                'allergies' : [...this.state.allergies, allergy]\r\n            })\r\n    }\r\n\r\n    removeAllergy = (allergy) => {\r\n        this.setState({\r\n            'allergies' : [...this.state.allergies.filter(a => a.id != allergy)]\r\n        })\r\n    }\r\n\r\n    save = () => {\r\n        axios\r\n        .put('http://localhost:8080/api/patients', {\r\n            'id' : this.state.id,\r\n            'firstName' : this.state.firstName,\r\n            'lastName' : this.state.lastName,\r\n            'userType' : this.state.userType,\r\n            'allergies' : this.state.allergies,\r\n            'credentials' : {\r\n                'email' : this.state.email,\r\n                'password' : this.state.password\r\n            },\r\n            'penaltyCount' : this.state.penaltyCount,\r\n            'contact' : {\r\n                'phoneNumber' : this.state.phoneNumber,\r\n                'address' : {\r\n                    'street' : this.state.address,\r\n                    'town' : this.state.town,\r\n                    'country' : this.state.country\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            if(this.state.changePasswordMode)\r\n                this.changePass();\r\n            this.createBackupUser();\r\n        });\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        const {oldPass, newPass, repPass} = this.state;\r\n        const passwords = [oldPass, newPass, repPass]\r\n\r\n        return (\r\n            <PatientLayout>\r\n                <Row className=\"pt-5\">\r\n                    <Col xs={2}>\r\n                        <Nav defaultActiveKey=\"/home\" className=\"flex-column\">\r\n                            {!this.state.editMode\r\n                                ? <Button variant=\"dark\" onClick={this.activateUpdateMode}>Edit</Button>\r\n                                : <Button variant=\"outline-secondary\" onClick={this.activateUpdateMode}>Cancel</Button>\r\n                            }\r\n                            {this.state.editMode && <Button variant=\"primary mt-2\"\r\n                                                            onClick={this.activateChangePasswordMode}>\r\n                                Change Password</Button>}\r\n                            {this.state.editMode && <Button variant=\"success mt-2\" \r\n                            disabled={this.state.saveDisabled} onClick={this.save}>Save</Button>}\r\n                        </Nav>\r\n                    </Col>\r\n                    <Col>\r\n                        <UserInfo user={this.state} edit={this.state.editMode} onChange={this.handleInputChange}/>\r\n                        <h2 className=\"pt-4 pb-3\">Allergies</h2>\r\n                        {this.state.editMode && <AddAllergy addAllergy={this.addAllergy}/>}\r\n                        <AllergyPatientListing edit={this.state.editMode}\r\n                            allergies={this.state.allergies} removeAllergy={this.removeAllergy}/>\r\n                        {this.state.changePasswordMode &&\r\n                        <ChangePassword pass={passwords} onChange={this.handleInputChange} disable={this.disableSave}/>}\r\n                    </Col>\r\n                </Row>\r\n            </PatientLayout>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nexport default class Promotions extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            promotions : [],\r\n            userType : 'pharmacyAdmin'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let promotions = [\r\n            {\r\n                content : \"Svakog petka 20% popusta na sve!\",\r\n                periodStart : '21.5.2021.',\r\n                periodEnd : '01.09.2021.'\r\n            },\r\n            {\r\n                content : \"Svake srede 5% popusta na sve!\",\r\n                periodStart : '11.2.2021.',\r\n                periodEnd : '11.09.2021.'\r\n            }\r\n        ];\r\n\r\n        this.setState({\r\n            promotions : promotions\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\" style={({ marginLeft: '1rem' })}>\r\n                <div className=\"row\">\r\n                    <div>\r\n                        <br/><br/>\r\n                        <h1>Akcije & Promocije</h1>\r\n\r\n                        <button type=\"button\" class=\"btn btn-info\">Kreiraj promociju</button>\r\n                        <div className=\"row\">\r\n\r\n\r\n\r\n\r\n\r\n                        {this.state.promotions.map((promotion, index) => (\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <div className=\"card\">\r\n                                        <img className=\"card-img-top\" alt=\"Bootstrap Thumbnail First\"\r\n                                             src=\"https://www.layoutit.com/img/people-q-c-600-200-1.jpg\"/>\r\n                                        <div className=\"card-block\">\r\n                                            <h5 className=\"card-title\">\r\n                                                {promotion.content}\r\n                                            </h5>\r\n                                            <p className=\"card-text\">\r\n                                                {'Vazi od ' + promotion.periodStart + ' do ' + promotion.periodEnd}\r\n                                            </p>\r\n                                            <p>\r\n                                                <Button variant={\"success\"} >Pretplati se</Button>\r\n                                                <Button variant={\"danger\"}>Otkazi</Button>\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {Alert, Button, Container, FormControl} from \"react-bootstrap\";\r\nimport \"../App.css\";\r\nimport Script from \"react-load-script\";\r\nimport axios from \"axios\";\r\nimport {Redirect} from \"react-router\";\r\n\r\n\r\nexport default class Registration extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                id:'',\r\n                email: '',\r\n                password: '',\r\n                firstName: '',\r\n                lastName: '',\r\n                address: {\r\n                    street: \"\",\r\n                    town: \"\",\r\n                    country: \"\",\r\n                    latitude: 51.507351,\r\n                    longitude: -0.127758\r\n                },\r\n                telephone: '',\r\n            },\r\n            rePassword : '',\r\n            addressPom: {\r\n                street: \"\",\r\n                town: \"\",\r\n                country: \"\",\r\n                latitude: 51.507351,\r\n                longitude: -0.127758\r\n            },\r\n            errors:{\r\n                user: {\r\n                    'email': 'Enter email',\r\n                    'password': 'Enter password',\r\n                    'firstName': 'Enter First name',\r\n                    'lastName': 'Enter Last name',\r\n                    'address':'Enter address',\r\n                    'telephone': 'Enter Telephone',\r\n                    'rePassword' : 'Repeat password'\r\n                }\r\n            },\r\n            validForm: false,\r\n            submitted: false,\r\n            buttonConfirm: false,\r\n            buttonSubmit:false\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.isValidPassword = this.isValidPassword.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        localStorage.setItem(\"confirmed\", JSON.stringify(false));\r\n    }\r\n\r\n    async sendParams() {\r\n        axios\r\n            .post('http://localhost:8080/api/patients/save', {\r\n                'id':'',\r\n                'firstName' : this.state.user.firstName,\r\n                'lastName' : this.state.user.lastName,\r\n                'userType' : 4,\r\n                'credentials' : {\r\n                    'email' : this.state.user.email,\r\n                    'password' : this.state.user.password\r\n                },\r\n                'contact' : {\r\n                    'phoneNumber' : this.state.user.telephone,\r\n                    'address' : {\r\n                        'street' : this.state.user.address.street,\r\n                        'town' : this.state.user.address.town,\r\n                        'country' : this.state.user.address.country,\r\n                        'latitude' : this.state.user.address.latitude,\r\n                        'longitude' : this.state.user.address.longitude\r\n                    }\r\n                }\r\n            })\r\n            .then(res => {\r\n\r\n            });\r\n\r\n    }\r\n    async sendMail() {\r\n        axios\r\n            .put('http://localhost:8080/api/email/confirm', {\r\n                'to':\"t.kovacevic98@gmail.com\",\r\n                'subject':\"Confirm registration\",\r\n                'body':\"Hi \"+this.state.user.firstName+\" You've created a InternetPharmacy account.\"+\r\n                        \" Please take a moment to confirm your account. Please click the confirmation link.\",\r\n                'link':\"http://localhost:3000/confirmRegistration\"\r\n            })\r\n            .then(res => {\r\n\r\n            });\r\n    }\r\n\r\n    confirmForm = (event) => {\r\n        if(!!localStorage.getItem(\"confirmed\") ? JSON.parse(localStorage.getItem(\"confirmed\")) : false) {\r\n            this.sendParams();\r\n            window.location = '/';\r\n            localStorage.setItem(\"confirmed\", JSON.stringify(false));\r\n        }\r\n    }\r\n\r\n    submitForm =  (event) => {\r\n        this.setState({ submitted: true });\r\n        const user = this.state.user;\r\n        console.log(this.state.user)\r\n\r\n        event.preventDefault();\r\n        if (this.validateForm(this.state.errors)) {\r\n            console.info('Valid Form')\r\n            this.state.buttonSubmit=true;\r\n            this.state.buttonConfirm=true;\r\n            this.sendMail();\r\n            //zakljucaj button\r\n            //this.sendParams()\r\n        } else {\r\n            console.log('Invalid Form')\r\n        }\r\n        console.log(this.state.user)\r\n\r\n    }\r\n\r\n\r\n    handleInputChange = (event) => {\r\n        console.log(event.target.value)\r\n        const { name, value } = event.target;\r\n        const user = this.state.user;\r\n        user[name] = value;\r\n\r\n        this.setState({ user });\r\n        console.log(this.state.user.password)\r\n\r\n        this.validationErrorMessage(event);\r\n    }\r\n\r\n    handlePassChange = (event) => {\r\n        console.log(\"dosao\")\r\n        console.log(event.target.value)\r\n        this.state.rePassword=event.target.value;\r\n        // this.setState({\r\n        //     rePassword: event.target.value\r\n        // });\r\n        console.log(this.state.rePassword)\r\n        this.validationErrorMessage(event);\r\n    }\r\n\r\n    handleScriptLoad = () => {\r\n        var input = document.getElementById('street');\r\n        var options = {\r\n            types: ['geocode'] //this should work !\r\n        };\r\n        const google = window.google\r\n\r\n        this.street = new google.maps.places.Autocomplete(input, options);\r\n        this.street.addListener('place_changed', this.handlePlaceSelect);\r\n    }\r\n\r\n    handlePlaceSelect = () => {\r\n        const addressObject = this.street.getPlace();\r\n        try {\r\n            //console.log( addressObject.address_components)\r\n            const address = addressObject.address_components;\r\n            if (address) {\r\n                if (this.setAddressParams(address)) {\r\n                    this.setState(\r\n                        {\r\n                            addressPom: {\r\n                                street: this.state.streetP,\r\n                                town: this.state.townP,\r\n                                country: this.state.countryP,\r\n                                latitude: addressObject.geometry.location.lat(),\r\n                                longitude: addressObject.geometry.location.lng(),\r\n\r\n\r\n                            },\r\n                        }\r\n                    );\r\n                    this.state.user.address=this.state.addressPom;\r\n                }\r\n            } else {\r\n                this.addressErrors(false)\r\n            }\r\n        } catch {\r\n            this.addressErrors(false)\r\n        }\r\n    }\r\n\r\n    setAddressParams = (address) => {\r\n        var street, number, city, country, completeAddress, i;\r\n        for (i = 0; i < address.length; i++) {\r\n            if (address[i].types == \"route\") {\r\n                street = address[i].long_name;\r\n            } else if (address[i].types == \"street_number\") {\r\n                number = address[i].long_name;\r\n            } else if (address[i].types[0] == \"locality\") {\r\n                city = address[i].long_name;\r\n            } else if (address[i].types[0] == \"country\") {\r\n                country = address[i].long_name;\r\n            }\r\n        }\r\n        completeAddress = street + \" \" + number + \" \" + city + \" \" + country;\r\n\r\n        if (street == undefined || street == \"\" || city == undefined || city == \"\" || country == undefined || country == \"\") {\r\n            this.addressErrors(false)\r\n            return false;\r\n        } else {\r\n            this.addressErrors(true)\r\n            this.state.townP = city;\r\n            this.state.countryP = country;\r\n            if (number == undefined)\r\n                this.state.streetP = street;\r\n            else\r\n                this.state.streetP = street +\" \"+number;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    addressErrors = (bool) => {\r\n        let errors = this.state.errors;\r\n        if (bool == false) {\r\n            //.log(\"Nisam dobro prosla\")\r\n            errors.user.address = 'Please choose valid address';\r\n        } else {\r\n            //console.log(\"DObro sam prosla \");\r\n            errors.user.address = \"\";\r\n        }\r\n        this.setState({errors});\r\n    }\r\n\r\n\r\n\r\n    validationErrorMessage = (event) => {\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n\r\n        switch (name) {\r\n            case 'firstName':\r\n                errors.user.firstName = value.length < 1 ? 'Enter First Name' : '';\r\n                break;\r\n            case 'lastName':\r\n                errors.user.lastName = value.length < 1 ? 'Enter Last Name' : '';\r\n                break;\r\n            case 'email':\r\n                errors.user.email = this.isValidEmail(value) ? '' : 'Email is not valid!';\r\n                break;\r\n            case 'telephone':\r\n                errors.user.telephone = this.isValidTelephone(value) ? 'Enter valid telephone number' : '';\r\n                break;\r\n            case 'country':\r\n                errors.user.country = value.length < 1 ?  'Enter Country' : '';\r\n                break;\r\n            case 'city':\r\n                errors.user.city = value.length < 1 ?  'Enter City' : '';\r\n                break;\r\n            case 'password':\r\n                errors.user.password = value.length < 1 ? 'Enter Password' : '';\r\n                break;\r\n            case 'rePassword':\r\n                errors.user.rePassword = this.isValidPassword(value) ? '' : 'This password must match the previous';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({ errors });\r\n    }\r\n\r\n\r\n\r\n    validateForm = (errors) => {\r\n        let valid = true;\r\n        Object.entries(errors.user).forEach(item => {\r\n            console.log(item)\r\n            item && item[1].length > 0 && (valid = false)\r\n        })\r\n        return valid;\r\n    }\r\n    isValidEmail = (value) => {\r\n        return !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,64}$/i.test(value))\r\n    }\r\n\r\n    isValidTelephone = (value) => {\r\n        return !(value && /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[0-9]{2,3}[-\\s\\./0-9]*$/i.test(value))\r\n    }\r\n\r\n    isValidPassword = (value) => {\r\n        if(this.state.user.password !== this.state.rePassword) {\r\n            return false;\r\n        }else{\r\n            return  true\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"jumbotron jumbotron-fluid\"  style={{ background: 'rgb(232, 244, 248 )', color: 'rgb(0, 92, 230)'}}>\r\n                <div className=\"container\">\r\n                    <h1 style={({marginTop: '1rem', textAlignVertical: \"center\", textAlign: \"center\"})} className=\"display-4\">User registration</h1>\r\n                </div>\r\n                {\r\n                    this.state.buttonConfirm &&\r\n                    <Alert variant='success' show={true}  style={({textAlignVertical: \"center\", textAlign: \"center\"})}>\r\n                        Please click on the link that has just been sent to your email to verify your account and\r\n                        finish the registration process.\r\n                    </Alert>\r\n                }\r\n\r\n                    <div className=\"row\" style={{\r\n                        marginTop: '3rem',\r\n                        marginLeft: '20rem',\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center'\r\n                    }}>\r\n                        <label className=\"col-sm-2 col-form-label\">Name</label>\r\n                        <div className=\"col-sm-3 mb-2\">\r\n                            <input type=\"text\" value={this.state.user.firstName} name=\"firstName\" onChange={(e) => {\r\n                                this.handleInputChange(e)\r\n                            }} className=\"form-control\" placeholder=\"First Name\"/>\r\n                            {this.state.submitted && this.state.errors.user.firstName.length > 0 &&\r\n                            <span className=\"text-danger\">{this.state.errors.user.firstName}</span>}\r\n\r\n                        </div>\r\n                        <div className=\"col-sm-3 mb-2\">\r\n                            <input type=\"text\" value={this.state.lastName} name=\"lastName\" onChange={(e) => {\r\n                                this.handleInputChange(e)\r\n                            }} className=\"form-control\" placeholder=\"Last Name\"/>\r\n                            {this.state.submitted && this.state.errors.user.lastName.length > 0 &&\r\n                            <span className=\"text-danger\">{this.state.errors.user.lastName}</span>}\r\n\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label  className=\"col-sm-2 col-form-label\">Email</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                    <input type=\"email\" value={this.state.user.email} name=\"email\" onChange={(e) => {this.handleInputChange(e)}}className=\"form-control\" id=\"email\" placeholder=\"example@gmail.com\" />\r\n                        {this.state.submitted && this.state.errors.user.email.length > 0 && <span className=\"text-danger\">{this.state.errors.user.email}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label  className=\"col-sm-2 col-form-label\">Tel</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                    <input type=\"text\" value={this.state.user.telephone} name=\"telephone\" onChange={(e) => {this.handleInputChange(e)}}  className=\"form-control\" id=\"telephone\" placeholder=\"+3810640333489\" />\r\n                        {this.state.submitted && this.state.errors.user.telephone.length > 0 && <span className=\"text-danger\">{this.state.errors.user.telephone}</span>}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label  className=\"col-sm-2 col-form-label\">Address</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                    <Script type=\"text/javascript\" url=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBFrua9P_qHcmF253UAXnw1wHnIC7nD2DY&libraries=places\" onLoad={this.handleScriptLoad}/>\r\n                    <input type=\"text\" id=\"street\" placeholder=\"Enter Address\" value={this.query}/>\r\n                        {this.state.submitted && this.state.errors.user.address.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.address}</span>}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label className=\"col-sm-2 col-form-label\">Password</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                    <FormControl name=\"password\" type=\"password\" placeholder=\"Password\"  value={this.state.user.password} onChange={(e) => {this.handleInputChange(e)}}/>\r\n                     {this.state.submitted && this.state.errors.user.password.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.password}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label  className=\"col-sm-2 col-form-label\">Repeat password</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                    <FormControl name=\"rePassword\" type=\"password\" placeholder=\"Repeat new Password\" value={this.state.rePassword} onChange={(e) => {this.handlePassChange(e)}}/>\r\n                     {this.state.submitted && this.state.errors.user.rePassword.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.rePassword}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\" style={{marginTop: '1rem'}}>\r\n                        <div className=\"col-sm-5 mb-2\">\r\n                        </div>\r\n                        {\r\n                            !this.state.buttonConfirm &&\r\n                            <div className=\"col-sm-4\">\r\n                                <Button disabled={this.state.buttonSubmit} variant=\"primary\"\r\n                                        onClick={this.submitForm}>Submit</Button>\r\n                            </div>\r\n                        }\r\n                        {\r\n                            this.state.buttonConfirm &&\r\n                            <div className=\"row\" style={{marginTop: '1rem'}}>\r\n                                <div className=\"col-sm-5 mb-2\">\r\n                                </div>\r\n                                <div className=\"col-sm-4\">\r\n                                    <Button  variant=\"success\" onClick={this.confirmForm}>Confirm</Button>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {Button, Col, Form, Modal, Table, Grid, FormControl, Row} from \"react-bootstrap\";\r\nimport \"../../App.css\";\r\nimport TimePicker from \"react-time-picker\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nexport default class CreatePharmacistModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                'email': '',\r\n                'password': '',\r\n                'firstName': '',\r\n                'lastName': '',\r\n                'country': '',\r\n                'city': '',\r\n                'street' : '',\r\n                'telephone': '',\r\n                'rePassword' : '',\r\n                'startShift' : '',\r\n                'endShift' : ''\r\n            },\r\n            errors:{\r\n                user: {\r\n                    'email': 'Enter email',\r\n                    'password': 'Enter password',\r\n                    'firstName': 'Enter First name',\r\n                    'lastName': 'Enter Last name',\r\n                    'country': 'Enter Country',\r\n                    'city': 'Enter City',\r\n                    'street' : 'Enter Street',\r\n                    'telephone': 'Enter Telephone',\r\n                    'rePassword' : 'Repeat password'\r\n                }\r\n            },\r\n            validForm: false,\r\n            submitted: false,\r\n\r\n\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.isValidPassword = this.isValidPassword.bind(this);\r\n\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        const user = this.state.user;\r\n        user[name] = value;\r\n\r\n        this.setState({ user });\r\n        this.validationErrorMessage(event);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <div className=\"row\">\r\n                    <label className=\"col-sm-2 col-form-label\">Name</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.firstName} name=\"firstName\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"First Name\" />\r\n                        { this.state.submitted && this.state.errors.user.firstName.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.firstName}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.lastName} name=\"lastName\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"Last Name\" />\r\n                        { this.state.submitted && this.state.errors.user.lastName.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.lastName}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Email</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"email\" value={this.state.user.email} name=\"email\" onChange={(e) => { this.handleInputChange(e)} }className=\"form-control\" id=\"email\" placeholder=\"example@gmail.com\" />\r\n                        { this.state.submitted && this.state.errors.user.email.length > 0 && <span className=\"text-danger\">{this.state.errors.user.email}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Tel</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.telephone} name=\"telephone\" onChange={(e) => { this.handleInputChange(e)} }  className=\"form-control\" id=\"telephone\" placeholder=\"+3810640333489\" />\r\n                        { this.state.submitted && this.state.errors.user.telephone.length > 0 && <span className=\"text-danger\">{this.state.errors.user.telephone}</span>}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Street</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.street} name=\"street\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" id=\"street\" placeholder=\"Enter street\" />\r\n                        { this.state.submitted && this.state.errors.user.street.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.street}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">City</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.city} name=\"city\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" id=\"city\" placeholder=\"Enter city\" />\r\n                        { this.state.submitted && this.state.errors.user.city.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.city}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Country</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.country} name=\"country\" onChange={(e) => { this.handleInputChange(e)} }  className=\"form-control\" id=\"country\" placeholder=\"Enter country\" />\r\n                        { this.state.submitted && this.state.errors.user.country.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.country}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row\">\r\n                    <label className=\"col-sm-2 col-form-label\">Password</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <FormControl name=\"password\" type=\"password\" placeholder=\"Password\"  value={this.state.user.password} onChange={(e) => { this.handleInputChange(e)} }/>\r\n                        { this.state.submitted && this.state.errors.user.password.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.password}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label  className=\"col-sm-2 col-form-label\">Repeat password</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <FormControl name=\"rePassword\" type=\"password\" placeholder=\"Repeat new Password\" value={this.state.user.rePassword} onChange={(e) => { this.handleInputChange(e)} }/>\r\n                        { this.state.submitted && this.state.errors.user.rePassword.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.rePassword}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <hr className=\"mt-2 mb-3\"/>\r\n\r\n                <div className=\"row\">\r\n                    <div style={({ marginLeft: '1rem' })}>\r\n                        <label style={({ marginRight: '1rem' })}>Select start of work time : </label>\r\n                        <TimePicker  name=\"startShift\" value={this.state.user.startShift} onChange={this.setStartShift}/>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div style={({ marginLeft: '1rem' })}>\r\n                        <label style={({ marginRight: '1rem' })}>Select end of work time : </label>\r\n                        <TimePicker  name=\"endShift\" value={this.state.user.endShift} onChange={this.setEndShift}/>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <hr className=\"mt-2 mb-3\"/>\r\n\r\n                <br/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-5 mb-2\">\r\n                    </div>\r\n                    <div >\r\n                        <Button variant=\"primary\" onClick={this.submitForm} style={({ marginRight: '1rem' })}>Submit</Button>\r\n                        <Button variant=\"secondary\" onClick={this.closeModal} >Close</Button>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    submitForm = async (event) => {\r\n        this.setState({ submitted: true });\r\n        const user = this.state.user;\r\n        event.preventDefault();\r\n        if (this.validateForm(this.state.errors)) {\r\n            console.info('Valid Form');\r\n            console.log(this.state.user);\r\n\r\n            await axios.post('http://localhost:8080/api/pharmacist', {\r\n                firstName: this.state.user.firstName,\r\n                lastName: this.state.user.lastName,\r\n                userType : 0,\r\n                credentials: {\r\n                    email: this.state.user.email,\r\n                    password: this.state.user.password\r\n                },\r\n                contact: {\r\n                    phoneNumber: this.state.user.telephone,\r\n                    address: {\r\n                        town: this.state.user.city,\r\n                        street: this.state.user.street,\r\n                        country: this.state.user.country,\r\n                        latitude: 42,\r\n                        longitude: 34\r\n                    }\r\n                },\r\n                workingHours: {\r\n                        period: {\r\n                            periodStart: \"2017-01-01 \" + this.state.user.startShift + \":00\",\r\n                            periodEnd: \"2017-01-01 \" + this.state.user.endShift + \":00\"\r\n                        },\r\n                        pharmacy : {\r\n                            id : 1\r\n                        }\r\n                    }\r\n\r\n            });\r\n\r\n            this.closeModal();\r\n            this.props.fetchPharmacists();\r\n        } else {\r\n            console.log('Invalid Form')\r\n        }\r\n    }\r\n\r\n    validationErrorMessage = (event) => {\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n\r\n        switch (name) {\r\n            case 'firstName':\r\n                errors.user.firstName = value.length < 1 ? 'Enter First Name' : '';\r\n                break;\r\n            case 'lastName':\r\n                errors.user.lastName = value.length < 1 ? 'Enter Last Name' : '';\r\n                break;\r\n            case 'email':\r\n                errors.user.email = this.isValidEmail(value) ? '' : 'Email is not valid!';\r\n                break;\r\n            case 'telephone':\r\n                errors.user.telephone = this.isValidTelephone(value) ? 'Enter valid telephone number' : '';\r\n                break;\r\n            case 'country':\r\n                errors.user.country = value.length < 1 ?  'Enter Country' : '';\r\n                break;\r\n            case 'city':\r\n                errors.user.city = value.length < 1 ?  'Enter City' : '';\r\n                break;\r\n            case 'street':\r\n                errors.user.street = value.length < 1 ?  'Enter Street' : '';\r\n                break;\r\n            case 'password':\r\n                errors.user.password = value.length < 1 ? 'Enter Password' : '';\r\n                break;\r\n            case 'rePassword':\r\n                errors.user.rePassword = this.isValidPassword(value) ? '' : 'This password must match the previous';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({ errors });\r\n    }\r\n\r\n    validateForm = (errors) => {\r\n        let valid = true;\r\n        Object.entries(errors.user).forEach(item => {\r\n            console.log(item)\r\n            item && item[1].length > 0 && (valid = false)\r\n        })\r\n        return valid;\r\n    }\r\n    isValidEmail = (value) => {\r\n        return !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,64}$/i.test(value))\r\n    }\r\n\r\n    isValidTelephone = (value) => {\r\n        return !(value && /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[0-9]{2,3}[-\\s\\./0-9]*$/i.test(value))\r\n    }\r\n\r\n    isValidPassword = (value) => {\r\n        return this.state.user.password === this.state.user.rePassword;\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.props.closeModal();\r\n    }\r\n\r\n    setStartShift =(date) => {\r\n        const user = this.state.user;\r\n        user['startShift'] = date;\r\n        this.setState({ user });\r\n    }\r\n\r\n    setEndShift =(date) => {\r\n        const user = this.state.user;\r\n        user['endShift'] = date;\r\n        this.setState({ user });\r\n    }\r\n}","import React from \"react\";\r\nimport {Button, Col, Form, Modal, Table, Grid, FormControl, Row} from \"react-bootstrap\";\r\nimport \"../../App.css\";\r\nimport TimePicker from \"react-time-picker\";\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\n\r\n\r\nexport default class AddAppointmentModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dermatologist : this.props.dermatologist,\r\n            period : {\r\n                periodStart : \"\",\r\n                periodEnd : \"\"\r\n            },\r\n            appointmentDate : \"\"\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <Form>\r\n                    <label style={{marginRight : 10}}>Select date of appointment: </label>\r\n                    <DatePicker selected={this.state.appointmentDate} dateFormat=\"dd MMMM yyyy\"  name=\"appointmentDate\" minDate={new Date()} onChange={this.setDate} />\r\n                    <br/>\r\n                    <label style={{marginRight : 10}}>Select start time of appointment: </label>\r\n                    <TimePicker  name=\"startShift\" format=\"h:m a\" value={this.state.period.periodStart} onChange={this.setPeriodStart}/>\r\n                    <br/>\r\n                    <label style={{marginRight : 10}}>Select end time of appointment: </label>\r\n                    <TimePicker  name=\"endShift\" format=\"h:m a\" value={this.state.period.periodEnd} onChange={this.setPeriodEnd}/>\r\n\r\n                    <hr className=\"mt-2 mb-3\"/>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-5 mb-2\">\r\n                        </div>\r\n                        <div >\r\n                            <Button variant=\"primary\"  style={({ marginRight: '1rem' })} onClick={this.submitForm}>Submit</Button>\r\n                            <Button variant=\"secondary\" onClick={this.props.closeModal}>Close</Button>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    submitForm = () => {\r\n        let date = this.state.appointmentDate;\r\n        let b = this.state.period.periodStart;\r\n        let c = this.state.period.periodEnd;\r\n        //let momentDate = moment(date);\r\n        let day = date.getDate();\r\n        let month = parseInt(date.getMonth())+1;\r\n        if (month < 10)\r\n            month = \"0\" + month;\r\n        if (parseInt(day)<10)\r\n            day = \"0\"+day;\r\n\r\n        let fullYear = date.getFullYear() + \"-\" + month + \"-\" + day;\r\n        let check = fullYear + \" \" + this.state.period.periodStart + \":00\";\r\n        let  a = \"2020-01-01 12:00:00\";\r\n        axios.post('http://localhost:8080/api/appointment', {\r\n            examinerId: this.props.dermatologist.id,\r\n            pharmacy: {\r\n                id : 1\r\n            },\r\n            type : 'dermatologist',\r\n            appointmentStatus : 'available',\r\n            period : {\r\n                periodStart : fullYear + \" \" + this.state.period.periodStart + \":00\",\r\n                periodEnd : fullYear + \" \" + this.state.period.periodEnd + \":00\",\r\n            }\r\n        }).then( () =>\r\n            {\r\n                alert(\"Appointment successfully created!\");\r\n                this.props.closeModal();\r\n            }\r\n        ).catch(() => {\r\n            alert(\"Appointment was not created!\");\r\n        });\r\n    }\r\n\r\n    setDate = (date) => {\r\n        this.setState({\r\n            appointmentDate : date\r\n        })\r\n    }\r\n\r\n    setPeriodStart =(date) => {\r\n        const period = this.state.period;\r\n        period['periodStart'] = date;\r\n        this.setState({ period });\r\n    }\r\n\r\n    setPeriodEnd =(date) => {\r\n        const period = this.state.period;\r\n        period['periodEnd'] = date;\r\n        this.setState({ period });\r\n    }\r\n}","import React from 'react';\r\nimport {Button, Col} from \"react-bootstrap\";\r\nimport {Modal} from \"react-bootstrap\";\r\nimport {Navbar} from \"react-bootstrap\";\r\nimport {Form} from \"react-bootstrap\";\r\nimport {FormControl, Row} from \"react-bootstrap\";\r\nimport moment from 'moment';\r\nimport TimePicker from 'react-time-picker';\r\nimport Registration from \"../../pages/Registration\";\r\nimport CreatePharmacistModal from \"./CreatePharmacistModal\";\r\nimport axios from \"axios\";\r\nimport AddAppointmentModal from \"./AddAppointmentModal\";\r\n\r\n\r\n\r\n\r\nexport default class PharmacyEmployees extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dermatologists: [],\r\n            pharmacists: [],\r\n            showModalAddDermatologist : false,\r\n            showModalCreatePharmacist : false,\r\n            showModalAddAppointment : false,\r\n            userType : \"pharmacyAdmin\",\r\n            dermatologistModalAddAppointment : {},\r\n            searchPharmacist : {\r\n                firstName : '',\r\n                lastName : ''\r\n            },\r\n            backupPharmacists : [],\r\n            backupDermatologists : [],\r\n            notWorkingDermatologists : [],\r\n            dermatologistForAdding : {\r\n                id : 0,\r\n                workingHours : []\r\n            },\r\n            workingHours : {\r\n                period : {\r\n                    periodStart : \"\",\r\n                    periodEnd : \"\"\r\n                },\r\n                pharmacy : {\r\n                    id : 2 //todo change pharmacy ID\r\n                }\r\n            }\r\n        }\r\n    }\r\n// definise slobodne termine,pretražuje, kreira i uklanja farmaceute/dermatologe\r\n    async componentDidMount() {\r\n        await this.fetchPharmacists();\r\n\r\n        await this.fetchWorkingDermatologists();\r\n\r\n        console.log(this.state.pharmacists);\r\n        await this.fetchDermatologistNotWorkingInThisPharmacy();\r\n\r\n    }\r\n\r\n    render() {\r\n        const format = \"HH:mm\"\r\n        return (\r\n           <div style={({ marginLeft: '1rem' })}>\r\n               <br/><br/>\r\n               <h1>Dermatolozi</h1>\r\n               \r\n               <Button variant=\"success\" onClick={this.openModalAddDermatologist}>Dodaj dermatologa</Button>\r\n               <br/><br/>\r\n\r\n               <Navbar bg=\"light\" expand=\"lg\">\r\n                   <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                   <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                       <Form inline>\r\n                           <FormControl type=\"text\" placeholder=\"Search by first name\" className=\"mr-sm-2\" />\r\n                           <FormControl type=\"text\" placeholder=\"Search by last name\" className=\"mr-sm-2\" />\r\n                           <Button variant=\"outline-success\">Search</Button>\r\n                       </Form>\r\n                   </Navbar.Collapse>\r\n               </Navbar>\r\n\r\n               <table className=\"table table-hover\">\r\n                   <thead>\r\n                   <tr>\r\n                       <th scope=\"col\">#</th>\r\n                       <th scope=\"col\">Ime</th>\r\n                       <th scope=\"col\">Prezime</th>\r\n                       <th scope=\"col\">Ocena</th>\r\n                       <th scope=\"col\">Pocetak smene</th>\r\n                       <th scope=\"col\">Kraj smene</th>\r\n                   </tr>\r\n                   </thead>\r\n                   <tbody>\r\n               {this.state.dermatologists.map((dermatologist, index) => (\r\n                   <tr>\r\n                       <th scope=\"row\">{index+1}</th>\r\n                       <td>{dermatologist.firstName}</td>\r\n                       <td>{dermatologist.lastName}</td>\r\n                       <td>{dermatologist.grade}</td>\r\n                       <td>{moment(dermatologist.workingHours.filter(workingHour => workingHour.pharmacy.id === 1)[0].period.periodStart).format('hh:mm a')}</td>\r\n                       <td>{moment(dermatologist.workingHours.filter(workingHour => workingHour.pharmacy.id === 1)[0].period.periodEnd).format('hh:mm a')}</td>\r\n\r\n                       <td style={this.state.userType === 'patient' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                           <Button variant=\"primary\" onClick={this.handleModalAddDermatologist}>\r\n                                Zakazi pregled\r\n                           </Button>\r\n                       </td >\r\n                       <td style={this.state.userType === 'pharmacyAdmin' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                           <Button variant=\"warning\" onClick={(e) => this.handleModalAddAppointment(dermatologist)}>\r\n                               Definisi slobodne termine\r\n                           </Button>\r\n                       </td>\r\n                       <td style={this.state.userType === 'pharmacyAdmin' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                           <Button variant=\"danger\" onClick={() => this.deleteDermatologist(dermatologist)}>\r\n                               Izbrisi dermatologa\r\n                           </Button>\r\n                       </td>\r\n                   </tr>\r\n               ))}\r\n                   </tbody>\r\n               </table>\r\n\r\n\r\n               <br/><br/>\r\n               <h1>Farmaceuti</h1>\r\n               <Button variant=\"success\" onClick={this.handleModalCreatePharmacist}>Kreiraj farmaceuta</Button>\r\n               <br/><br/>\r\n               <Navbar bg=\"light\" expand=\"lg\">\r\n                   <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                   <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                       <Form inline>\r\n                           <FormControl type=\"text\" placeholder=\"Search by first name\" className=\"mr-sm-2\" name={'firstName'} value={this.state.searchPharmacist.firstName} onChange={this.changeSearchPharmacist}/>\r\n                           <FormControl type=\"text\" placeholder=\"Search by last name\" className=\"mr-sm-2\" name={'lastName'} value={this.state.searchPharmacist.lastName} onChange={this.changeSearchPharmacist}/>\r\n                           <Button variant=\"outline-success\" onClick={this.searchPharmacist}>Search</Button>\r\n                           <Button variant=\"outline-info\" onClick={this.resetSearchPharmacist}>Reset</Button>\r\n\r\n                       </Form>\r\n                   </Navbar.Collapse>\r\n               </Navbar>\r\n               <table className=\"table table-hover\">\r\n                   <thead>\r\n                   <tr>\r\n                       <th scope=\"col\">#</th>\r\n                       <th scope=\"col\">Ime</th>\r\n                       <th scope=\"col\">Prezime</th>\r\n                       <th scope=\"col\">Ocena</th>\r\n                       <th scope=\"col\">Pocetak smene</th>\r\n                       <th scope=\"col\">Kraj smene</th>\r\n\r\n                   </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                   {this.state.pharmacists.map((pharmacist, index) => (\r\n                       <tr>\r\n                           <th scope=\"row\">{index+1}</th>\r\n                           <td>{pharmacist.firstName}</td>\r\n                           <td>{pharmacist.lastName}</td>\r\n                           <td>{pharmacist.grade}</td>\r\n                           <td>{moment(pharmacist.workingHours.period.periodStart).format('hh:mm a')}</td>\r\n                           <td>{moment(pharmacist.workingHours.period.periodEnd).format('hh:mm a')}</td>\r\n                           <td style={this.state.userType === 'patient' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                               <Button variant=\"primary\" onClick={this.handleModalAddDermatologist}>\r\n                                   Zakazi savetovanje\r\n                               </Button>\r\n                           </td >\r\n                           <td style={this.state.userType === 'pharmacyAdmin' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                               <Button variant=\"warning\" onClick={this.handleModalAddDermatologist}>\r\n                                   Definisi slobodne termine\r\n                               </Button>\r\n                           </td>\r\n                           <td style={this.state.userType === 'pharmacyAdmin' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                               <Button variant=\"danger\" onClick={() => this.deletePharmacist(pharmacist)}>\r\n                                   Izbrisi farmaceuta\r\n                               </Button>\r\n                           </td>\r\n                       </tr>\r\n                   ))}\r\n                   </tbody>\r\n               </table>\r\n\r\n               {this.renderModalAddDermatologist()}\r\n               {this.renderModalCreatePharmacist()}\r\n               {this.renderModalAddAppointment()}\r\n\r\n           </div>\r\n        );\r\n    }\r\n// <select  name=\"medication\" onChange={this.handleInputChange} value={this.state.inputOrder.medication}>\r\n// <option disabled>select medication</option>\r\n// {this.props.medications.map((medication) => <option key={medication.id} value={medication.name}>{medication.name}</option>)}\r\n// </select>\r\n\r\n    handleDermatologistForAddingChange = async (event) => {\r\n        const target = event.target;\r\n        let value = event.target.value;\r\n\r\n        const path = \"http://localhost:8080/api/dermatologists/\" + value;\r\n        await axios.get(path).then(res => {\r\n            this.setState({\r\n                dermatologistForAdding : res.data\r\n            });\r\n\r\n        })\r\n\r\n        console.log(this.state.dermatologistForAdding);\r\n\r\n\r\n    }\r\n\r\n\r\n    renderModalAddDermatologist = () => {\r\n        return (\r\n            <Modal show={this.state.showModalAddDermatologist} onHide={this.handleModalAddDermatologist}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add Dermatologist</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Row>\r\n                            <Col>\r\n                                <Form.Control placeholder=\"Dermatologist\" as={\"select\"} value={this.state.dermatologistForAdding.id} onChange={this.handleDermatologistForAddingChange}>\r\n                                    <option disabled={true} selected=\"selected\">Choose</option>\r\n                                    {this.state.notWorkingDermatologists.map(dermatologist =>\r\n                                    <option key={dermatologist.id} value={dermatologist.id}>{dermatologist.firstName + \" \" + dermatologist.lastName}</option>\r\n                                    )}\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <br/>\r\n                        <Form.Row>\r\n                            <div style={({ marginLeft: '1rem' })}>\r\n                                <label style={({ marginRight: '1rem' })}>Select start of work time : </label>\r\n                                <TimePicker  name=\"periodStart\" value={this.state.workingHours.period.periodStart} onChange={this.setPeriodStart}/>\r\n                            </div>\r\n                        </Form.Row>\r\n                        <br/>\r\n                        <Form.Row>\r\n                            <div style={({ marginLeft: '1rem' })}>\r\n                                <label style={({ marginRight: '1rem' })}>Select end of work time : </label>\r\n                                <TimePicker  name=\"periodEnd\" value={this.state.workingHours.period.periodEnd} onChange={this.setPeriodEnd}/>\r\n                            </div>\r\n                        </Form.Row>\r\n\r\n                        <div style={this.state.dermatologistForAdding.workingHours.length !== 0 ? {display : 'block'} : {display : 'none'}}>\r\n                            <br/>\r\n                            <h3>Work time in other pharmacies</h3>\r\n                            <table class=\"table table-sm\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">#</th>\r\n                                    <th scope=\"col\">Start</th>\r\n                                    <th scope=\"col\">End</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td>1</td>\r\n                                    <td>{\"11:00\"}</td>\r\n                                    <td>{\"13:00\"}</td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.handleModalAddDermatologist}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={this.addDermatologist}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    openModalAddDermatologist = async () => {\r\n        await this.fetchDermatologistNotWorkingInThisPharmacy();\r\n        if (this.state.notWorkingDermatologists.length !== 0)\r\n            this.handleModalAddDermatologist();\r\n        else\r\n            alert(\"All available dermatologists are already working in this pharmacy!\");\r\n    }\r\n\r\n    addDermatologist = async () => {\r\n        let finalDermatologist = this.state.dermatologistForAdding;\r\n        let workingHours = this.state.workingHours;\r\n        workingHours.period.periodStart = '2017-01-13 ' + workingHours.period.periodStart + \":00\";\r\n        workingHours.period.periodEnd = '2017-01-13 ' + workingHours.period.periodEnd + \":00\";\r\n        finalDermatologist.workingHours.push(workingHours);\r\n        console.log(finalDermatologist);\r\n        await axios.put(\"http://localhost:8080/api/dermatologists/addDermatologistToPharmacy\", finalDermatologist).then(() => {\r\n                this.setState({\r\n                    dermatologistForAdding : {\r\n                        id : 0,\r\n                        workingHours : []\r\n                    },\r\n                    workingHours : {\r\n                        period : {\r\n                            periodStart : \"\",\r\n                            periodEnd : \"\"\r\n                        },\r\n                        pharmacy : {\r\n                            id : 2 //todo change pharmacy ID\r\n                        }\r\n                    }\r\n                });\r\n                alert(\"Dermatologist added successfully!\");\r\n                this.handleModalAddDermatologist();\r\n                this.fetchWorkingDermatologists();\r\n            }\r\n        ).catch(() => {\r\n            alert(\"Dermatologist was not added!\");\r\n            this.setState({\r\n                dermatologistForAdding : {\r\n                    id : 0,\r\n                    workingHours : []\r\n                },\r\n                workingHours : {\r\n                    period : {\r\n                        periodStart : \"\",\r\n                        periodEnd : \"\"\r\n                    },\r\n                    pharmacy : {\r\n                        id : 2 //todo change pharmacy ID\r\n                    }\r\n                }\r\n            });\r\n        })\r\n        await this.setState({\r\n            dermatologistForAdding : {\r\n                id : 0,\r\n                workingHours : {\r\n                    period : {\r\n                        periodStart : \"\",\r\n                        periodEnd : \"\"\r\n                    },\r\n                    pharmacy : {\r\n                        id : 2 //todo change pharmacy ID\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    renderModalCreatePharmacist = () => {\r\n        return (\r\n            <Modal show={this.state.showModalCreatePharmacist} onHide={this.handleModalCreatePharmacist}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Create Pharmacist</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <CreatePharmacistModal closeModal = {this.handleModalCreatePharmacist} fetchPharmacists = {this.fetchPharmacists}/>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    renderModalAddAppointment = () => {\r\n        return (\r\n            <Modal show={this.state.showModalAddAppointment} onHide={this.handleModalAddAppointment}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Create Appointment</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <AddAppointmentModal closeModal = {this.handleModalAddAppointment} dermatologist={this.state.dermatologistModalAddAppointment}/>\r\n                </Modal.Body>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    handleModalAddAppointment = (dermatologist) => {\r\n        this.setState({\r\n            showModalAddAppointment : !this.state.showModalAddAppointment,\r\n            dermatologistModalAddAppointment : dermatologist\r\n        });\r\n    }\r\n    handleModalAddDermatologist = () => {\r\n        this.setState({\r\n            showModalAddDermatologist : !this.state.showModalAddDermatologist\r\n        });\r\n    }\r\n\r\n    handleModalCreatePharmacist = () => {\r\n        this.setState({\r\n            showModalCreatePharmacist : !this.state.showModalCreatePharmacist\r\n        });\r\n    }\r\n\r\n    deleteDermatologist = (dermatologist) => {\r\n        let isBoss = window.confirm('Are you sure you want to delete ' + dermatologist.firstName + ' ' + dermatologist.lastName + ' from your employees list?');\r\n        alert( isBoss ); // true if OK is pressed\r\n    }\r\n\r\n    deletePharmacist = (dermatologist) => {\r\n        let isBoss = window.confirm('Are you sure you want to delete ' + dermatologist.firstName + ' ' + dermatologist.lastName + ' from your employees list?');\r\n        alert( isBoss ); // true if OK is pressed\r\n    }\r\n\r\n    fetchPharmacists = async () => {\r\n        axios\r\n            .get('http://localhost:8080/api/pharmacist/getByPharmacy/1') //todo change pharmacy id\r\n            .then(res => {\r\n                this.setState({\r\n                    pharmacists : res.data,\r\n                    backupPharmacists : res.data\r\n                })\r\n            });\r\n    }\r\n\r\n    fetchWorkingDermatologists = async () => {\r\n        axios\r\n            .get('http://localhost:8080/api/dermatologists/getAllDermatologistWorkingInPharmacy/1')//todo change pharmacy ID\r\n            .then(res => {\r\n                this.setState({\r\n                    dermatologists : res.data,\r\n                    backupDermatologists : res.data\r\n                })\r\n            });\r\n    }\r\n\r\n    changeSearchPharmacist = (event) => {\r\n        const { name, value } = event.target;\r\n        const searchPharmacist = this.state.searchPharmacist;\r\n        searchPharmacist[name] = value;\r\n\r\n        this.setState({ searchPharmacist });\r\n    }\r\n    resetSearchPharmacist = () => {\r\n        this.setState({\r\n            searchPharmacist : {\r\n                firstName : '',\r\n                lastName : ''\r\n            },\r\n            pharmacists : this.state.backupPharmacists\r\n        })\r\n    }\r\n\r\n    searchPharmacist = async () => {\r\n        let filterPharmacists = await this.state.pharmacists.filter(pharmacist => {\r\n            if (this.state.searchPharmacist.firstName !== '' && this.state.searchPharmacist.lastName !== '')\r\n                return pharmacist.firstName.includes(this.state.searchPharmacist.firstName) && pharmacist.lastName.includes(this.state.searchPharmacist.lastName);\r\n            else if (this.state.searchPharmacist.firstName !== '')\r\n                return pharmacist.firstName.includes(this.state.searchPharmacist.firstName);\r\n            else if (this.state.searchPharmacist.lastName !== '')\r\n                return pharmacist.lastName.includes(this.state.searchPharmacist.lastName);\r\n            return true;\r\n        });\r\n        this.setState({\r\n            pharmacists : filterPharmacists\r\n        })\r\n    }\r\n\r\n    fetchDermatologistNotWorkingInThisPharmacy = async () => {\r\n        await axios.get(\"http://localhost:8080/api/dermatologists/getAllDermatologistNotWorkingInPharmacy/2\").then( //todo change pharmacy id\r\n            res => {\r\n                this.setState({\r\n                    notWorkingDermatologists : res.data,\r\n                })\r\n            }\r\n        )\r\n        if (this.state.notWorkingDermatologists.length !== 0)\r\n            this.setState({\r\n                dermatologistForAdding : this.state.notWorkingDermatologists[0],\r\n                workingHours : {\r\n                    period : {\r\n                        periodStart : \"\",\r\n                        periodEnd : \"\"\r\n                    },\r\n                    pharmacy : {\r\n                        id : 1 //todo change pharmacy ID\r\n                    }\r\n                }\r\n            })\r\n        else {\r\n            this.setState({\r\n                dermatologistForAdding : {\r\n                    id : 0,\r\n                    workingHours : []\r\n                },\r\n                workingHours : {\r\n                    period : {\r\n                        periodStart : \"\",\r\n                        periodEnd : \"\"\r\n                    },\r\n                    pharmacy : {\r\n                        id : 1 //todo change pharmacy ID\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    setPeriodStart = (date) => {\r\n        const workingHours = this.state.workingHours;\r\n        workingHours.period.periodStart = date;\r\n        this.setState({\r\n            workingHours : workingHours\r\n        })\r\n    }\r\n\r\n    setPeriodEnd = (date) => {\r\n        const workingHours = this.state.workingHours;\r\n        workingHours.period.periodEnd = date;\r\n        this.setState({\r\n            workingHours : workingHours\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport {Button, Form, FormControl, Modal, Navbar, Col} from \"react-bootstrap\";\r\nimport DropdownItem from \"react-bootstrap/DropdownItem\";\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\n\r\nconst options = [\r\n    'one', 'two', 'three'\r\n];\r\nconst defaultOption = options[0];\r\n\r\nexport default class PharmacyMedications extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            medications : [],\r\n            userType : \"\",\r\n            showModal : false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let medications = [\r\n            {\r\n                name: \"Xanax\",\r\n                type: \"antihistamine\",\r\n                dose: 2,\r\n                loyaltyPoints: 3,\r\n                medicationShape: \"pill\",\r\n                manufacturer: \"ABC\",\r\n                medicationIssue: \"withPrescription\",\r\n                note: \"take when hungry\",\r\n                quantity : 10,\r\n                price : 400.00,\r\n                grade : 4,\r\n                ingredient: [\r\n                    {\r\n                        name: \"brufen\"\r\n                    },\r\n                    {\r\n                        name: \"linex\"\r\n                    }\r\n\r\n                ],\r\n                sideEffect: [\r\n                    {\r\n                        name: \"nausea\"\r\n                    },\r\n                    {\r\n                        name: \"blindness\"\r\n                    }\r\n                ],\r\n                alternatives: [\r\n                    {\r\n                        name: \"brufen\"\r\n                    },\r\n                    {\r\n                        name: \"linex\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                name: \"Linex\",\r\n                type: \"antihistamine\",\r\n                dose: 2,\r\n                grade : 4,\r\n                loyaltyPoints: 3,\r\n                medicationShape: \"pill\",\r\n                manufacturer: \"ABC\",\r\n                quantity : 10,\r\n                price : 1300,\r\n                medicationIssue: \"withPrescription\",\r\n                note: \"take when hungry\",\r\n                ingredient: [\r\n                    {\r\n                        name: \"brufen\"\r\n                    },\r\n                    {\r\n                        name: \"linex\"\r\n                    }\r\n\r\n                ],\r\n                sideEffect: [\r\n                    {\r\n                        name: \"nausea\"\r\n                    },\r\n                    {\r\n                        name: \"blindness\"\r\n                    }\r\n                ],\r\n                alternatives: [\r\n                    {\r\n                        name: \"brufen\"\r\n                    },\r\n                    {\r\n                        name: \"linex\"\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n        this.setState({\r\n            medications : medications,\r\n            userType : \"pharmacyAdmin\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={({ marginLeft: '1rem' })}>\r\n                <br/><br/>\r\n                <h1>Lekovi</h1>\r\n\r\n\r\n                <Button variant=\"success\" onClick={this.handleModal} >Dodaj lek</Button>\r\n                <Button variant=\"primary\" style={({ marginLeft: '1rem' })}>Proveri dostupnost preko eRecepta</Button>\r\n                <br/><br/>\r\n\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Form inline>\r\n                            <FormControl type=\"text\" placeholder=\"Search by name\" className=\"mr-sm-2\" />\r\n                            <Button variant=\"outline-success\">Search</Button>\r\n                        </Form>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Naziv</th>\r\n                        <th scope=\"col\">Tip</th>\r\n                        <th scope=\"col\">Ocena</th>\r\n                        <th scope=\"col\">Kolicina</th>\r\n                        <th scope=\"col\">Cena</th>\r\n                        <th scope=\"col\">Sastojci</th>\r\n                        <th scope=\"col\">Alternative</th>\r\n\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.medications.map((medication, index) => (\r\n                        <tr>\r\n                            <th scope=\"row\">{index+1}</th>\r\n                            <td>{medication.name}</td>\r\n                            <td>{medication.type}</td>\r\n                            <td>{medication.grade}</td>\r\n                            <td>{medication.quantity}</td>\r\n                            <td>{medication.price}</td>\r\n                            <td>\r\n                                <Dropdown options={options}  value={defaultOption} />\r\n                            </td>\r\n                            <td>\r\n                                <Dropdown options={options}  value={defaultOption} />\r\n                            </td>\r\n                            <td style={this.state.userType === 'patient' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                                <Button variant=\"primary\" onClick={this.handleModal}>\r\n                                    Rezervisi\r\n                                </Button>\r\n                            </td >\r\n\r\n                            <td style={this.state.userType === 'pharmacyAdmin' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                                <Button variant=\"danger\" onClick={() => this.deleteMedication(medication)}>\r\n                                    Delete\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n\r\n\r\n\r\n                <Modal show={this.state.showModal} onHide={this.handleModal}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Dodavanje leka</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Col>\r\n                                    <Form.Control placeholder=\"Medication\" as={\"select\"} >\r\n                                        <option disabled={true} selected=\"selected\">Choose...</option>\r\n                                        <option >...</option>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Control placeholder=\"Quantity\"  />\r\n                                </Col>\r\n                            </Form.Row>\r\n                        </Form>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleModal}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.handleModal}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n    handleModal = () => {\r\n        this.setState({\r\n            showModal : !this.state.showModal\r\n        });\r\n    }\r\n\r\n    deleteMedication = (medication) => {\r\n        let isBoss = window.confirm('Are you sure you want to delete ' + medication.name + ' from your medications list?');\r\n    }\r\n}","import React from 'react';\r\nimport {Button, Form, FormControl, Modal, Navbar} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\n\r\nexport default class PharmacyVacationsRequests extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            vacationRequests : [],\r\n            userType : 'pharmacyAdmin',\r\n            showModal : false,\r\n            modalVacationRequest : {\r\n                rejectionNote:\"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let vacationRequests = [\r\n            {\r\n                periodStart : '21.2.2021.',\r\n                periodEnd : '03.03.2021.',\r\n                vacationNote : 'Bahami',\r\n                employeeFirstName : 'Marko',\r\n                employeeLastName : 'Jugovic',\r\n                vacationRequestStatus : 'requested',\r\n                employeeType : 'pharmacist',\r\n                rejectionNote : ''\r\n            },\r\n            {\r\n                periodStart : '21.5.2021.',\r\n                periodEnd : '03.06.2021.',\r\n                vacationNote : 'Covid-19',\r\n                employeeFirstName : 'Dejan',\r\n                employeeLastName : 'Petrovic',\r\n                vacationRequestStatus : 'approved',\r\n                employeeType : 'dermatologist',\r\n                rejectionNote : ''\r\n            },\r\n            {\r\n                periodStart : '21.2.2021.',\r\n                periodEnd : '03.10.2021.',\r\n                vacationNote : 'Beba',\r\n                employeeFirstName : 'Dijana',\r\n                employeeLastName : 'Jankovic',\r\n                vacationRequestStatus : 'rejected',\r\n                employeeType : 'pharmacist',\r\n                rejectionNote : ''\r\n            }\r\n        ];\r\n\r\n        axios\r\n            .get('http://localhost:8080/api/vacationRequest/findByPharmacyAndEmployeeType/1/pharmacist') //todo change pharmacyId\r\n            .then(res => {\r\n                this.setState({\r\n                    vacationRequests : res.data\r\n                })\r\n            });\r\n\r\n        // this.setState({\r\n        //     vacationRequests : vacationRequests\r\n        // })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div>\r\n                    <br/><br/>\r\n                    <h1>Trazena & odobrena odsustva</h1>\r\n\r\n                    <br/>\r\n\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Ime</th>\r\n                            <th scope=\"col\">Prezime</th>\r\n                            <th scope=\"col\">Tip radnika</th>\r\n                            <th scope=\"col\">Razlog</th>\r\n                            <th scope=\"col\">Pocetak odsustva</th>\r\n                            <th scope=\"col\">Kraj odsustva</th>\r\n                            <th scope=\"col\">Status</th>\r\n\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.state.vacationRequests.map((vacationRequest, index) => (\r\n                            <tr>\r\n                                <th scope=\"row\">{index+1}</th>\r\n                                <td>{vacationRequest.employeeFirstName}</td>\r\n                                <td>{vacationRequest.employeeLastName}</td>\r\n                                <td>{vacationRequest.employeeType}</td>\r\n                                <td>{vacationRequest.vacationNote}</td>\r\n                                <td>{moment(vacationRequest.period.periodStart).format('DD.MM.YYYY') }</td>\r\n                                <td>{moment(vacationRequest.period.periodEnd).format('DD.MM.YYYY') }</td>\r\n                                <td>{vacationRequest.vacationRequestStatus}</td>\r\n\r\n                                <td style={this.state.userType === 'pharmacyAdmin' && vacationRequest.vacationRequestStatus === 'requested' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                                    <Button variant=\"outline-success\" onClick={() => this.acceptVacationRequest(vacationRequest)}>\r\n                                        Accept\r\n                                    </Button>\r\n                                </td >\r\n                                <td style={this.state.userType === 'pharmacyAdmin' && vacationRequest.vacationRequestStatus === 'requested' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                                    <Button variant=\"outline-danger\" onClick={() => this.handleModal(vacationRequest)}>\r\n                                        Reject\r\n                                    </Button>\r\n                                </td >\r\n                                <td style={this.state.userType === 'pharmacyAdmin' && vacationRequest.vacationRequestStatus === 'rejected' ? {display : 'none'} : {}}>\r\n                                </td >\r\n                                <td style={this.state.userType === 'pharmacyAdmin' && vacationRequest.vacationRequestStatus === 'rejected' ? {display : 'none'} : {}}>\r\n                                </td >\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </table>\r\n\r\n\r\n\r\n                    <Modal show={this.state.showModal} onHide={this.handleModal}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Modal heading</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                <Form.Label>Please enter a reason of declining the vacation request</Form.Label>\r\n                                <Form.Control type='text' value={this.state.modalVacationRequest.rejectionNote !== undefined ? this.state.modalVacationRequest.rejectionNote : \"\"} onChange={(event) => this.handleRejectionNoteChange(event)} />\r\n                            </Form.Group>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={this.handleModal}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={this.rejectRequest}>\r\n                                Confirm\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleRejectionNoteChange = (event) => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            modalVacationRequest : {\r\n                ...this.state.modalVacationRequest,\r\n                rejectionNote : value\r\n            }\r\n        })\r\n    }\r\n\r\n    rejectRequest = () => {\r\n        axios.put(\"http://localhost:8080/api/vacationRequest/rejectVacationRequest/\", this.state.modalVacationRequest).then(() => {\r\n            this.fetchVacationRequests();\r\n            this.setState({\r\n                showModal : !this.state.showModal\r\n            });\r\n        })\r\n    }\r\n\r\n    handleModal = (vacationRequest) => {\r\n        this.setState({\r\n            showModal : !this.state.showModal,\r\n            modalVacationRequest : vacationRequest\r\n        });\r\n    }\r\n\r\n    acceptVacationRequest = (vacationRequest) => {\r\n        let answer = window.confirm('Are you sure you want to accept the vacation request from ' + vacationRequest.employeeFirstName + '?');\r\n        if (answer) {\r\n            let path = \"http://localhost:8080/api/vacationRequest/confirmVacationRequest/\" + vacationRequest.id\r\n            axios.get(path).then(() => this.fetchVacationRequests());\r\n\r\n        }\r\n    }\r\n\r\n    fetchVacationRequests = () => {\r\n        axios\r\n            .get('http://localhost:8080/api/vacationRequest/findByPharmacyAndEmployeeType/1/pharmacist') //todo change pharmacyId\r\n            .then(res => {\r\n                this.setState({\r\n                    vacationRequests : res.data,\r\n                    modalVacationRequest : {\r\n                        rejectionNote:\"\"\r\n                    }\r\n                })\r\n            });\r\n\r\n    }\r\n}","import React from \"react\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport {ButtonGroup, Input} from \"rsuite\";\r\nimport Dropdown from \"react-dropdown\";\r\n\r\nconst options = [\r\n    'Xanax | 3', 'Brufen | 4', 'Linex | 100'\r\n];\r\nconst defaultOption = options[0];\r\n\r\nexport default class MedicationOrdersList extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userType : 'pharmacyAdmin',\r\n            medicationOrders : [],\r\n            showModal : false,\r\n            showContent : 'listOrders',\r\n            radioAll : '1',\r\n            radioPending : '2',\r\n            radioProcessed : '3'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let medicationOrders = [\r\n            {\r\n                pharmacyAdmin : {\r\n                    firstName : 'Mirko',\r\n                    lastName : 'Mirkovic'\r\n                },\r\n                deadLine : '21.3.2021.',\r\n                medicationQuantity: {\r\n\r\n                },\r\n                status : 'pending',\r\n                medicationOffers : []\r\n            },\r\n            {\r\n                pharmacyAdmin : {\r\n                    firstName : 'Jelena',\r\n                    lastName : 'Rozga'\r\n                },\r\n                deadLine : '13.5.2021.',\r\n                medicationQuantity: {\r\n\r\n                },\r\n                status : 'processed',\r\n                medicationOffers : []\r\n            }\r\n        ];\r\n\r\n        this.setState({\r\n            medicationOrders : medicationOrders\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n\r\n                <h1>Narudzbenice</h1>\r\n\r\n                <br/>\r\n                <Button variant=\"success\" onClick={this.createOrder}>Create order</Button>\r\n                <br/><br/>\r\n\r\n                <b>Filter by :</b>\r\n                <ButtonGroup>\r\n                    <Button>All\r\n                        <Input ref=\"input1\" type=\"radio\" name=\"radioButtonSet\" value='input1' standalone defaultChecked/>\r\n                    </Button>\r\n                    <Button>Pending\r\n                        <Input ref=\"input2\" type=\"radio\" name=\"radioButtonSet\" value='input2' standalone/>\r\n                    </Button>\r\n                    <Button>Processed\r\n                        <Input ref=\"input2\" type=\"radio\" name=\"radioButtonSet\" value='input2' standalone/>\r\n                    </Button>\r\n                </ButtonGroup>\r\n                <br/>\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Kreirao</th>\r\n                        <th scope=\"col\">Rok</th>\r\n                        <th scope=\"col\">Lista lekova</th>\r\n                        <th scope=\"col\">Status</th>\r\n                        <th scope=\"col\">Ponude</th>\r\n\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.medicationOrders.map((medicationOrder, index) => (\r\n                        <tr>\r\n                            <th scope=\"row\">{index+1}</th>\r\n                            <td>{medicationOrder.pharmacyAdmin.firstName + ' ' + medicationOrder.pharmacyAdmin.lastName}</td>\r\n                            <td>{medicationOrder.deadLine}</td>\r\n                            <td>\r\n                                <Dropdown options={options}  value={defaultOption} />\r\n                            </td>\r\n                            <td>{medicationOrder.status}</td>\r\n                            <td>\r\n                                <Button variant=\"primary\" onClick={this.showOffersButtonClick}>\r\n                                    Pregledaj ponude\r\n                                </Button>\r\n                            </td>\r\n                            <td>\r\n                                <Button variant=\"info\" >\r\n                                    Izmeni\r\n                                </Button>\r\n                            </td>\r\n                            <td>\r\n                                <Button variant=\"danger\" onClick={() => this.deleteOrder(medicationOrder)}>\r\n                                    Obrisi\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n\r\n                <Modal show={this.state.showModal} onHide={this.handleModal}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Modal heading</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleModal}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.handleModal}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleModal = () => {\r\n        this.setState({\r\n            showModal : !this.state.showModal\r\n        });\r\n    }\r\n\r\n    showOffersButtonClick = () => {\r\n        this.props.showOffers('showOffers');\r\n    }\r\n\r\n    createOrder = () => {\r\n        this.props.showOffers('showCreateOrder');\r\n    }\r\n\r\n    deleteOrder = (order) => {\r\n        let isBoss = window.confirm('Are you sure you want to delete the order from your order list?');\r\n    }\r\n}","import React from \"react\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\n\r\nexport default class MedicationOffers extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            order : {\r\n                pharmacyAdmin : {\r\n                    firstName : 'Mirko',\r\n                    lastName : 'Mirkovic'\r\n                },\r\n                deadLine : '21.3.2021.',\r\n                medicationQuantity: {\r\n\r\n                },\r\n                status : 'pending',\r\n            },\r\n            medicationOffers : []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let medicationOffers = [\r\n            {\r\n                supplier : \"Bayern\",\r\n                price : 12443,\r\n                shippingDate : '20.10.2021.',\r\n                status : 'pending'\r\n            },\r\n            {\r\n                supplier : \"Hemofarm\",\r\n                price : 23533,\r\n                shippingDate : '30.10.2021.',\r\n                status : 'pending'\r\n            },\r\n            {\r\n                supplier : \"ABC\",\r\n                price : 12400,\r\n                shippingDate : '10.10.2021.',\r\n                status : 'pending'\r\n            }\r\n        ]\r\n\r\n        this.setState({\r\n            medicationOffers : medicationOffers\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"card\">\r\n                                <h5 className=\"card-header\">\r\n                                    Narudzbenica\r\n                                </h5>\r\n                                <div className=\"card-body\">\r\n                                    <p className=\"card-text\">\r\n                                        Kreirao : {this.state.order.pharmacyAdmin.firstName + \" \" + this.state.order.pharmacyAdmin.lastName}\r\n                                        <br/>\r\n                                        Status : {this.state.order.status}\r\n                                        <br/>\r\n                                        Rok isporuke : {this.state.order.deadLine}\r\n                                        <br/>\r\n                                        <br/>\r\n                                        Lekovi\r\n                                        <ul>\r\n                                            <li>Bromazepan : 4</li>\r\n                                            <li>Brufen : 1000</li>\r\n                                            <li>Gaze : 2</li>\r\n                                        </ul>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <br/>\r\n                <h2>Ponude</h2>\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Supplier</th>\r\n                        <th scope=\"col\">Price</th>\r\n                        <th scope=\"col\">Shipping date</th>\r\n                        <th scope=\"col\">Status</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.medicationOffers.map((medicationOffer, index) => (\r\n                        <tr>\r\n                            <th scope=\"row\">{index+1}</th>\r\n                            <td>{medicationOffer.supplier}</td>\r\n                            <td>{medicationOffer.price}</td>\r\n                            <td>{medicationOffer.shippingDate}</td>\r\n                            <td>{medicationOffer.status}</td>\r\n                            <td style={medicationOffer.status === 'pending' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                                <Button variant=\"outline-success\" onClick={this.handleModal}>\r\n                                    Accept\r\n                                </Button>\r\n                            </td >\r\n                            <td style={medicationOffer.status === 'pending' ? {display : 'inline-block'} : {display : 'none'}}>\r\n                                <Button variant=\"outline-danger\" onClick={this.handleModal}>\r\n                                    Reject\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n\r\n                <Modal show={this.state.showModal} onHide={this.handleModal}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Modal heading</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleModal}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.handleModal}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleModal = () => {\r\n        this.setState({\r\n            showModal : !this.state.showModal\r\n        });\r\n    }\r\n}","import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nexport default class AddMedicationQuantity extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userType : 'pharmacyAdmin',\r\n            inputOrder : {\r\n                medication : 'select medication',\r\n                quantity : 0\r\n            },\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table className=\"table table-hover\" >\r\n                <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Medication</th>\r\n                    <th scope=\"col\">Quantity</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <select  name=\"medication\" onChange={this.handleInputChange} value={this.state.inputOrder.medication}>\r\n                                <option disabled>select medication</option>\r\n                                {this.props.medications.map((medication) => <option key={medication.id} value={medication.name}>{medication.name}</option>)}\r\n                            </select>\r\n                        </td>\r\n                        <td onChange={this.handleInputChange}>\r\n                            <input type=\"text\" className=\"in-text medium\"  name=\"quantity\" value={this.state.inputOrder.quantity}/>\r\n                        </td>\r\n                        <td>\r\n                            <Button variant={\"outline-primary\"} onClick={this.addQuantity}>+</Button>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        let name = target.name;\r\n        let value = event.target.value;\r\n\r\n        this.setState({\r\n            inputOrder : {\r\n                ...this.state.inputOrder,\r\n                [name] : value\r\n            }\r\n        })\r\n    }\r\n\r\n    addQuantity = async () => {\r\n        console.log(this.state.inputOrder);\r\n\r\n        if (this.state.inputOrder.medication === 'select medication' || isNaN(this.state.inputOrder.quantity) || parseInt(this.state.inputOrder.quantity) <= 0)\r\n            return;\r\n        await this.props.addQuantity(this.state.inputOrder);\r\n        this.setState({\r\n            inputOrder : {\r\n                medication : 'select medication',\r\n                quantity : 0\r\n            }\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport {Button, Col, Row} from \"react-bootstrap\";\r\n\r\nexport default class OrderQuantityListing extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userType : 'pharmacyAdmin'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n\r\n        const quantities = this.props.quantities.map((quantity, index) => {\r\n            return (\r\n                <Col xs={10}>\r\n                    <div className=\"m-2 bg-primary p-2\" style={{ height: '3rem' }} key={index}>\r\n                        <Button variant=\"primary\" className=\"mr-3 p-0\" style={{width: '1rem'}} onClick={ () => this.removeQuantity(quantity.medication)}>\r\n                            X\r\n                        </Button>\r\n                        <label className='text-light'>{quantity.medication + \"  |  \" + quantity.quantity}</label>\r\n                    </div>\r\n                </Col>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <Row>\r\n                {quantities}\r\n            </Row>\r\n        )\r\n    }\r\n\r\n    removeQuantity(quantity) {\r\n        this.props.removeQuantity(quantity)\r\n    }\r\n}","import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport AddMedicationQuantity from \"./AddMedicationQuantity\";\r\nimport AllergyPatientListing from \"../AllergyPatientListing\";\r\nimport OrderQuantityListing from \"./OrderQuantityListing\";\r\n\r\nexport default class CreateOrder extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userType : 'pharmacyAdmin',\r\n            medications : [\r\n                {\r\n                    id : 1,\r\n                    name : \"Xantil\"\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name : \"Brufen\"\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name : \"Linex\"\r\n                },\r\n                {\r\n                    id: 4,\r\n                    name : \"Vitamin C\"\r\n                }\r\n            ],\r\n            medicationOrder : {\r\n                deadLine : \"\",\r\n                medicationQuantity : []\r\n            },\r\n            quantities : []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\" style={({ marginLeft: '1rem' })}>\r\n                <div className=\"row\">\r\n                    <div>\r\n                        <h1>\r\n                            Create order\r\n                        </h1>\r\n                        <br/>\r\n                        Choose deadline for medication offers: <i/><i/><i/>\r\n                        <DatePicker  selected={this.state.medicationOrder.deadLine} minDate={new Date()} onChange={date => this.changeDatePicker(date)} />\r\n\r\n                        <AddMedicationQuantity addQuantity={this.addQuantity} medications = {this.state.medications} />\r\n\r\n                        <OrderQuantityListing quantities={this.state.quantities} removeQuantity ={this.removeQuantity}/>\r\n\r\n\r\n                        <Button variant={\"dark\"} onClick={this.handleSubmit}>Submit</Button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    addQuantity = async (quantity) => {\r\n        if(!this.state.quantities.map(a => a.medication).includes(quantity.medication))\r\n            await this.setState({\r\n                quantities : this.state.quantities.concat(quantity)\r\n            })\r\n        console.log(this.state.quantities);\r\n    }\r\n\r\n    removeQuantity = (quantity) => { //in this context quantity is medication name!\r\n        this.setState({\r\n            quantities : this.state.quantities.filter(a => a.medication !== quantity)\r\n        })\r\n    }\r\n\r\n\r\n    changeDatePicker = (date) => {\r\n        this.setState({\r\n            medicationOrder : {\r\n                ...this.state.medicationOrder,\r\n                deadLine : date\r\n            }\r\n            }\r\n        );\r\n    }\r\n\r\n    handleSubmit = async () => {\r\n        await this.setState({\r\n                medicationOrder : {\r\n                    ...this.state.medicationOrder,\r\n                    medicationQuantity : this.state.quantities\r\n                }\r\n            }\r\n        );\r\n        console.log(this.state.medicationOrder);\r\n    }\r\n}","import React from 'react';\r\nimport {Button, Modal, FormControl, Navbar} from \"react-bootstrap\";\r\nimport MedicationOrdersList from \"./MedicationOrdersList\";\r\nimport MedicationOffers from \"./MedicationOffers\";\r\nimport CreateOrder from \"./CreateOrder\";\r\n\r\nexport default class PharmacyMedicationOrders extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userType : 'pharmacyAdmin',\r\n            medicationOrders : [],\r\n            showModal : false,\r\n            showContent : 'listOrders'\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (this.state.showContent === 'showOffers' && nextState.showContent === 'showOffers') //when clicking on navbar st default behaviour to listOrders\r\n            this.setState({\r\n                showContent : 'listOrders'\r\n            })\r\n        else if (this.state.showContent === 'showCreateOrder' && nextState.showContent === 'showCreateOrder') //when clicking on navbar st default behaviour to listOrders\r\n            this.setState({\r\n                showContent : 'listOrders'\r\n            })\r\n        return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        let medicationOrders = [\r\n            {\r\n                pharmacyAdmin : {\r\n                    firstName : 'Mirko',\r\n                    lastName : 'Mirkovic'\r\n                },\r\n                deadLine : '21.3.2021.',\r\n                medicationQuantity: {\r\n\r\n                },\r\n                status : 'pending',\r\n                medicationOffers : []\r\n            },\r\n            {\r\n                pharmacyAdmin : {\r\n                    firstName : 'Jelena',\r\n                    lastName : 'Rozga'\r\n                },\r\n                deadLine : '13.5.2021.',\r\n                medicationQuantity: {\r\n\r\n                },\r\n                status : 'processed',\r\n                medicationOffers : []\r\n            }\r\n        ];\r\n\r\n        this.setState({\r\n            medicationOrders : medicationOrders,\r\n            showContent : this.props.showContent\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br/><br/>\r\n                {this.handleContent()}\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n    handleContent = () => {\r\n        if (this.state.showContent === 'listOrders')\r\n            return (\r\n                <MedicationOrdersList showOffers={this.changeContent} showCreateOrder={this.changeContent}/>\r\n            );\r\n        else if (this.state.showContent === 'showOffers')\r\n            return (\r\n              <MedicationOffers order = {this.state.medicationOrders[0]}  />\r\n            );\r\n        else if (this.state.showContent === 'showCreateOrder')\r\n            return (\r\n              <CreateOrder />\r\n            );\r\n    }\r\n\r\n    changeContent = (content) => {\r\n        this.setState({\r\n            showContent : content\r\n        })\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class PharmacyMedicationQueries extends React.Component{\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                a\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Map, GoogleApiWrapper, InfoWindow, Marker} from 'google-maps-react';\r\nimport {PharmacyPage} from \"../../pages/PharmacyPage\";\r\n\r\nconst mapStyles = {\r\n    width: '50%',\r\n    height: '50%'\r\n};\r\n\r\n\r\nexport class PharmacyDescription extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userType : 'pharmacyAdmin',\r\n            pharmacy : this.props.pharmacy,\r\n            showingInfoWindow: false,  // Hides or shows the InfoWindow\r\n            activeMarker: {},          // Shows the active marker upon click\r\n            selectedPlace: {},\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"card\">\r\n                                <h5 className=\"card-header\">\r\n                                    {this.state.pharmacy.description}\r\n                                </h5>\r\n                                <div className=\"card-body\">\r\n                                    <p className=\"card-text\">\r\n                                        Address : {this.state.pharmacy.address.street} <br/>\r\n                                        Grade : {this.state.pharmacy.grade} <br/>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Map\r\n                    google={this.props.google}\r\n                    zoom={14}\r\n                    style={mapStyles}\r\n                    initialCenter={\r\n                        {\r\n                            lat: this.state.pharmacy.address.latitude,\r\n                            lng: this.state.pharmacy.address.longitude\r\n                        }\r\n                    }\r\n                >\r\n                    <Marker\r\n                        onClick={this.onMarkerClick}\r\n                        name={this.state.pharmacy.address.street}\r\n                    />\r\n                    <InfoWindow\r\n                        marker={this.state.activeMarker}\r\n                        visible={this.state.showingInfoWindow}\r\n                        onClose={this.onClose}\r\n                    >\r\n                        <div>\r\n                            <h4>{this.state.selectedPlace.name}</h4>\r\n                        </div>\r\n                    </InfoWindow>\r\n                </Map>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onMarkerClick = (props, marker, e) =>\r\n        this.setState({\r\n            selectedPlace: props,\r\n            activeMarker: marker,\r\n            showingInfoWindow: true\r\n        });\r\n\r\n    onClose = props => {\r\n        if (this.state.showingInfoWindow) {\r\n            this.setState({\r\n                showingInfoWindow: false,\r\n                activeMarker: null\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyBFrua9P_qHcmF253UAXnw1wHnIC7nD2DY'\r\n})(PharmacyDescription)","import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nexport default class PriceList extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userType : 'pharmacyAdmin'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div>\r\n                        <h3>\r\n                            Price List\r\n                        </h3>\r\n\r\n                        <button type=\"button\" class=\"btn btn-info\">Kreiraj promociju</button>\r\n                        <div className=\"row\">\r\n\r\n\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nexport default class PharmacyReports extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userType : 'pharmacyAdmin'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div>\r\n                        <h3>\r\n                            Reports\r\n                        </h3>\r\n\r\n                        <button type=\"button\" class=\"btn btn-info\">Kreiraj promociju</button>\r\n                        <div className=\"row\">\r\n\r\n\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {Button, Col, Form, FormControl, Modal, Navbar} from \"react-bootstrap\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nexport default class AppointmentsList extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userType : 'pharmacyAdmin',\r\n            appointments : []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchAppointments();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={({ marginLeft: '1rem' })}>\r\n                <br/><br/>\r\n                <h1>Pregledi dermatologa</h1>\r\n\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Dermatolog</th>\r\n                        <th scope=\"col\">Datum i vreme</th>\r\n                        <th scope=\"col\">Cena</th>\r\n                        <th scope=\"col\">Ocena dermatologa</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.appointments.map((appointment, index) => (\r\n                        <tr>\r\n                            <th scope=\"row\">{index+1}</th>\r\n                            <td>{appointment.dermatologistFirstName + \" \" + appointment.dermatologistLastName}</td>\r\n                            <td>{moment(appointment.period.periodStart).format('DD.MM.YYYY hh:mm a') + \" - \" + moment(appointment.period.periodEnd).format('hh:mm a')}</td>\r\n                            <td>{appointment.cost}</td>\r\n                            <td>{appointment.dermatologistGrade}</td>\r\n\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    fetchAppointments = () => {\r\n        axios.get(\"http://localhost:8080/api/appointment/getAllAvailableAppointmentsByPharmacy/0\").then(res => {\r\n            this.setState({\r\n                appointments : res.data\r\n            });\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport Promotions from \"../components/pharmacy/Promotions\";\r\nimport PharmacyEmployees from \"../components/pharmacy/PharmacyEmployees\";\r\nimport PharmacyMedications from \"../components/pharmacy/PharmacyMedications\";\r\nimport PharmacyVacationsRequests from \"../components/pharmacy/PharmacyVacationsRequests\";\r\nimport PharmacyMedicationOrders from \"../components/pharmacy/PharmacyMedicationOrders\";\r\nimport PharmacyMedicationQueries from \"../components/pharmacy/PharmacyMedicationQueries\";\r\nimport PharmacyDescription from \"../components/pharmacy/PharmacyDescription\";\r\nimport PriceList from \"../components/pharmacy/PriceList\";\r\nimport PharmacyReports from \"../components/pharmacy/PharmacyReports\";\r\nimport AppointmentsList from \"../components/pharmacy/AppointmentsList\";\r\n\r\n\r\nexport default class PharmacyPage extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pharmacy : {\r\n                id : 0,\r\n                name : \"\",\r\n                address : {\r\n                    street : \"\",\r\n                    town : \"\",\r\n                    country : \"\",\r\n                    latitude : 51.507351,\r\n                    longitude : -0.127758\r\n                },\r\n                description : \"\",\r\n                dermatologist : [],\r\n                pharmacist : [],\r\n                medicationQuantity : [],\r\n                medicationReservation : [],\r\n                grade : 0\r\n            },\r\n            navbar : \"description\",\r\n            userType : \"pharmacyAdmin\"\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let pharmacy = {\r\n            id: 0,\r\n            name: \"Jankovic\",\r\n            grade : 3.89,\r\n            address: {\r\n                street: \"Gunduliceva 1A\",\r\n                town: \"Novi Sad\",\r\n                country: \"Serbia\",\r\n                longitude: -0.118092,\r\n                latitude: 51.509865\r\n            },\r\n            description: \"Apoteka za sve!\",\r\n            dermatologist: [\r\n                {\r\n                    id: 0,\r\n                    firstName: \"Marko\",\r\n                    lastName: \"Markovic\",\r\n                    userType: \"dermatologist\"\r\n                }\r\n            ],\r\n            pharmacist: [\r\n                {\r\n                    id: 0,\r\n                    firstName: \"Dragana\",\r\n                    lastName: \"Markovic\",\r\n                    userType: \"dermatologist\"\r\n                }\r\n            ],\r\n        }\r\n        this.setState({\r\n            pharmacy : pharmacy\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron jumbotron-fluid\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-4\">{this.state.pharmacy.name}</h1>\r\n                </div>\r\n                <br/>\r\n\r\n                <ul className=\"nav justify-content-center\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"description\" onClick={this.handleChange}>Description</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" href='#' onClick={this.handleChange} name=\"employees\">Dermatolozi & farmaceuti</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" href='#' onClick={this.handleChange} name=\"appointments\">Pregledi dermatologa</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"medications\" onClick={this.handleChange}>Lekovi</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"vacationRequests\" onClick={this.handleChange} style={this.state.userType === 'pharmacyAdmin' ? {display : 'block'} : {display : 'none'}}>Godisnji odmori</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"promotions\" onClick={this.handleChange}>Akcije & promocije</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"medicationOrders\" onClick={this.handleChange} style={this.state.userType === 'pharmacyAdmin' ? {display : 'block'} : {display : 'none'}}>Narudzbenice & ponude</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"medicationQueries\" onClick={this.handleChange} style={this.state.userType === 'pharmacyAdmin' ? {display : 'block'} : {display : 'none'}}>Upiti nad lekovima</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"priceList\" onClick={this.handleChange} style={this.state.userType === 'pharmacyAdmin' ? {display : 'block'} : {display : 'none'}}>Price list</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"reports\" onClick={this.handleChange} style={this.state.userType === 'pharmacyAdmin' ? {display : 'block'} : {display : 'none'}}>Reports</a>\r\n                    </li>\r\n                </ul>\r\n                {this.renderNavbar()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            navbar : name\r\n        });\r\n    }\r\n\r\n    renderNavbar = () => {\r\n        if (this.state.navbar === \"promotions\")\r\n            return (\r\n                <Promotions/>\r\n            );\r\n        else if (this.state.navbar === 'description')\r\n            return (\r\n                <PharmacyDescription pharmacy = {this.state.pharmacy } />\r\n            )\r\n        else if (this.state.navbar === 'appointments')\r\n            return (\r\n                <AppointmentsList pharmacy = {this.state.pharmacy } />\r\n            )\r\n        else if (this.state.navbar === 'reports')\r\n            return (\r\n                <PharmacyReports pharmacy = {this.state.pharmacy } />\r\n            )\r\n        else if (this.state.navbar === 'priceList')\r\n            return (\r\n                <PriceList pharmacy = {this.state.pharmacy } />\r\n            )\r\n        else if (this.state.navbar === \"employees\")\r\n            return (\r\n                <PharmacyEmployees pharmacyId = {this.state.pharmacy.id}/>\r\n            );\r\n        else if (this.state.navbar === \"medications\")\r\n            return (\r\n                <PharmacyMedications/>\r\n            );\r\n        else if (this.state.navbar === 'vacationRequests')\r\n            return (\r\n              <PharmacyVacationsRequests />\r\n            );\r\n        else if (this.state.navbar === 'medicationOrders')\r\n            return (\r\n                <PharmacyMedicationOrders showContent = 'listOrders'/>\r\n            );\r\n        else if (this.state.navbar === 'medicationQueries')\r\n            return (\r\n                <PharmacyMedicationQueries />\r\n            );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Col, Container, Row, Button, Table, FormControl, FormGroup} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nexport default class ReviewedClients extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            role : props.role,\r\n            Id : props.Id,\r\n            clients : [],\r\n            searchClients : [],\r\n            query : \"\",\r\n            sortType : \"desc\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios\r\n            .post(process.env.REACT_APP_BACKEND_ADDRESS ?? 'http://localhost:8080/api/appointment/getFinishedByExaminer', {\r\n                id : 3,\r\n                type : 1\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    searchClients: res.data,\r\n                    clients : res.data\r\n                })\r\n            })\r\n            .catch(res => {\r\n                \r\n            })\r\n    }\r\n\r\n    render() {\r\n        const Clients = this.state.searchClients.map((client, key) =>\r\n            <tr>\r\n                <td>{client.pharmacyName}</td>\r\n                <td>{client.patientFirstName}</td>\r\n                <td>{client.patientLastName}</td>\r\n                <td>{client.dateOfAppointment}</td>\r\n            </tr>\r\n        );\r\n        return (\r\n\r\n            <Container>\r\n                <br/>\r\n                <FormGroup as={Row} >\r\n                    <Button onClick={this.sortByFirstName} style={{height : 40}}  type=\"button\" className=\"btn btn-secondary\"> Sort by first name</Button>\r\n                    <Button onClick={this.sortByLastName} style={{height : 40}} type=\"button\" className=\"btn btn-secondary\"> Sort by last name</Button>\r\n                    <Button onClick={this.sortByDateOfAppointment} style={{height : 40}} type=\"button\" className=\"btn btn-secondary\"> Sort by date of appointment</Button>\r\n                    <FormControl className=\"mt-2 mb-2\" style={{width : 200, marginLeft : 200}} value={this.state.query} placeholder={\"Search clients...\"} onChange={this.handleInputChange} />\r\n                </FormGroup>\r\n                <Table style={{\"borderWidth\":\"1px\", 'borderColor':\"#aaaaaa\", 'borderStyle':'solid'}} striped hover>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Pharmacy</th>\r\n                            <th>First name</th>\r\n                            <th>Last name</th>\r\n                            <th>Date of appointment</th>\r\n                        </tr>\r\n                        {Clients}\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n\r\n        );\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const query = event.target.value;\r\n        const clients = this.state.clients;\r\n        if (query !== \"\" && query)\r\n            this.setState({\r\n                searchClients : clients.filter(c => (c.firstName + c.lastName).toLowerCase().includes(query.toLowerCase().replace(/\\s/g, ''))),\r\n                query : query\r\n            })\r\n        else\r\n            this.setState(({\r\n                searchClients : this.state.clients,\r\n                query : query\r\n            }))\r\n    }\r\n\r\n    sortByFirstName = () => {\r\n        if(this.state.sortType === \"desc\")\r\n            this.setState({\r\n                searchClients: this.state.searchClients.sort((a, b) => (a.firstName > b.firstName) ? -1 : 1),\r\n                sortType : \"asc\"\r\n            })\r\n        else\r\n            this.setState({\r\n                searchClients: this.state.searchClients.sort((a, b) => (a.firstName > b.firstName) ? 1 : -1),\r\n                sortType : \"desc\"\r\n            })\r\n    }\r\n    sortByLastName = () => {\r\n        if(this.state.sortType === \"desc\")\r\n            this.setState({\r\n                ssearchClients: this.state.searchClients.sort((a, b) => (a.lastName > b.lastName) ? -1 : 1),\r\n                sortType : \"asc\"\r\n            })\r\n        else\r\n            this.setState({\r\n                searchClients: this.state.searchClients.sort((a, b) => (a.lastName > b.lastName) ? 1 : -1),\r\n                sortType : \"desc\"\r\n            })\r\n    }\r\n    sortByDateOfAppointment = () => {\r\n        if(this.state.sortType === \"desc\")\r\n            this.setState({\r\n                searchClients: this.state.searchClients.sort((a, b) => (a.dateOfAppointment > b.dateOfAppointment) ? -1 : 1),\r\n                sortType : \"asc\"\r\n            })\r\n        else\r\n            this.setState({\r\n                searchClients: this.state.searchClients.sort((a, b) => (a.dateOfAppointment > b.dateOfAppointment) ? 1 : -1),\r\n                sortType : \"desc\"\r\n            })\r\n    }\r\n}","import React from \"react\";\r\nimport {Col, Container,  Row, Button} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default class VacationRequest extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startDate : new Date(),\r\n            endDate : new Date(),\r\n            pharmacy : \"\",\r\n            pharmacies : [],\r\n            vacationNote : \"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n     /*   if(this.props.role == \"Pharmacist\"){*/\r\n            axios\r\n                .get(process.env.REACT_APP_BACKEND_ADDRESS ?? 'http://localhost:8080/api/pharmacist/getPharmacy/' + 1)\r\n                .then(res => {\r\n                    this.setState({\r\n                        pharmacies : [res.data],\r\n                        pharmacy : res.data\r\n                    })\r\n                })\r\n                .catch(res => alert(\"Wrong!\"));\r\n   /*     }else if (this.props.role == \"Dermatologist\"){\r\n            axios\r\n                .get(process.env.REACT_APP_BACKEND_ADDRESS ?? 'http://localhost:8080/api/dermatologist/getPharmacy/' + this.props.Id)\r\n                .then(res => {\r\n                    this.setState({\r\n                        pharmacies : res.data\r\n                    })\r\n                })\r\n                .catch(res => alert(\"Wrong!\"));\r\n        }*/\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n    render() {\r\n        const  PharmaciesTag = this.state.pharmacies.map((pharmacy, key) =>\r\n            <option value={pharmacy.name}> {pharmacy.name} </option>\r\n        );\r\n        return (\r\n            <Container>\r\n                <br/>\r\n                <h2> Create request for vacation or absence</h2>\r\n                <br/>\r\n                <Row>\r\n                    <Col xs={2}> <p> Choose period: </p> </Col>\r\n                    <Col xs={-4}> <DatePicker selected={this.state.startDate} minDate={new Date()} onChange={date => this.setState({startDate : date})} /> </Col>\r\n                    <Col xs={-4}> <DatePicker  selected={this.state.endDate} minDate={new Date()} onChange={date => this.setState({endDate : date})} /> </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={2}> <p> Choose pharmacy: </p> </Col>\r\n                    <Col xs={-4}>\r\n                            <select value={this.state.pharmacy} onChange={value => this.setState({ pharmacy : value.target.value})}>\r\n                                {PharmaciesTag}\r\n                            </select>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <p> Reason :</p>\r\n                        <textarea className=\"form-control\"  rows=\"5\" cols=\"30\"\r\n                                  placeholder=\"Type reason...\" id=\"comment\" value={this.state.vacationNote} onChange={text => this.setState({vacationNote : text.target.value})}/>\r\n                    </Col>\r\n                </Row>\r\n                <Button onClick={this.sendData}> Submit </Button>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n\r\n    sendData = () => {\r\n        let periodStart = this.state.startDate;\r\n        let periodEnd = this.state.endDate;\r\n\r\n        //let momentDate = moment(date);\r\n        let day = periodStart.getDate();\r\n        let month = parseInt(periodStart.getMonth())+1;\r\n        if (month < 10)\r\n            month = \"0\" + month;\r\n        if (parseInt(day)<10)\r\n            day = \"0\"+day;\r\n        let hours = parseInt(periodStart.getHours());\r\n        if(hours < 10)\r\n            hours = \"0\" + hours;\r\n        let minutes = parseInt(periodStart.getMinutes());\r\n        if(minutes < 10)\r\n            minutes = \"0\" + minutes;\r\n\r\n        let fullYearStart = periodStart.getFullYear() + \"-\" + month + \"-\" + day + \" \" + hours + \":\" + minutes + \":00\";\r\n        day = periodEnd.getDate();\r\n        month = parseInt(periodEnd.getMonth())+1;\r\n        if (month < 10)\r\n            month = \"0\" + month;\r\n        if (parseInt(day)<10)\r\n            day = \"0\"+day;\r\n         hours = parseInt(periodEnd.getHours());\r\n        if(hours < 10)\r\n            hours = \"0\" + hours;\r\n         minutes = parseInt(periodEnd.getMinutes());\r\n        if(minutes < 10)\r\n            minutes = \"0\" + minutes;\r\n        let fullYearEnd = periodEnd.getFullYear() + \"-\" + month + \"-\" + day  + \" \" + hours + \":\" + minutes + \":00\";\r\n\r\n        axios\r\n            .post( process.env.REACT_APP_BACKEND_ADDRESS ?? 'http://localhost:8080/api/vacationRequest/saveDto', {\r\n                'period' : {\r\n                    periodStart: fullYearStart,\r\n                    periodEnd: fullYearEnd\r\n                },\r\n                'pharmacy' : this.state.pharmacy,\r\n                'employeeType' : 1, //props.role\r\n                'employeeId' : 1, //props.Id\r\n                'vacationNote' : this.state.vacationNote,\r\n                'vacationRequestStatus' : 0\r\n            })\r\n            .then(res => {\r\n                alert('You have successfully submitted the request!');\r\n            })\r\n            .catch(e => alert('Something\\'s gonna wrong!'));\r\n\r\n    }\r\n}","import React from 'react'\r\nimport PatientLayout from '../../layout/PatientLayout'\r\n\r\nclass PatientHomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <PatientLayout>\r\n                Lepo\r\n            </PatientLayout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PatientHomePage","import React from \"react\";\r\nimport {Row, Col, Nav, Button} from \"react-bootstrap\";\r\nimport UserInfo from \"../../components/UserInfo\";\r\nimport ChangePassword from \"../../components/ChangePassword\";\r\nimport axios from \"axios\";\r\n\r\nexport default class DermatologistsProfilePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'firstName' : '',\r\n            'lastName' : '',\r\n            'email' : '',\r\n            'address' : '',\r\n            'town' : '',\r\n            'country' : '',\r\n            'phoneNumber' : '',\r\n             'longitude' : '',\r\n             'latitude' : '',\r\n            'oldPass' : '',\r\n            'newPass' : '',\r\n            'repPass' : '',\r\n            'editMode' : false,\r\n            'saveDisabled' : false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        await axios\r\n            .get('http://localhost:8080/api/dermatologists/1')\r\n            .then(res => {\r\n                let patient = res.data;\r\n                console.log(patient)\r\n                this.setState({\r\n                    'id' : patient.id,\r\n                    'firstName' : patient.firstName,\r\n                    'lastName' : patient.lastName,\r\n                    'email' : patient.credentials.email,\r\n                    'password' : patient.credentials.password,\r\n                    'userType' : patient.userType,\r\n                    'editMode' : false,\r\n                    'changePasswordMode' : false,\r\n                    'address' : patient.contact.address.street,\r\n                    'longitude' : patient.contact.address.longitude,\r\n                    'latitude' : patient.contact.address.latitude,\r\n                    'town' : patient.contact.address.town,\r\n                    'country' : patient.contact.address.country,\r\n                    'phoneNumber' : patient.contact.phoneNumber\r\n                })\r\n            });\r\n\r\n        this.createBackupUser();\r\n    }\r\n\r\n    createBackupUser = () => {\r\n        this.user = {\r\n            'firstName' : this.state.firstName,\r\n            'lastName' : this.state.lastName,\r\n            'email' : this.state.email,\r\n            'address' : this.state.address,\r\n            'town' : this.state.town,\r\n            'country' : this.state.country,\r\n            'phoneNumber' : this.state.phoneNumber\r\n        }\r\n\r\n        this.setState({\r\n            'editMode' : false,\r\n            'changePasswordMode' : false\r\n        })\r\n    }\r\n\r\n    activateUpdateMode = () => {\r\n        this.resetData();\r\n        this.setState({\r\n            editMode : !this.state.editMode,\r\n            changePasswordMode : false\r\n        })\r\n    }\r\n\r\n    activateChangePasswordMode = () => {\r\n        this.setState({\r\n            'saveDisabled' : !this.state.changePasswordMode,\r\n            'changePasswordMode' : !this.state.changePasswordMode,\r\n            'oldPass' : '',\r\n            'newPass' : '',\r\n            'repPass' : ''\r\n        })\r\n    }\r\n\r\n    changePass = () => {\r\n        axios\r\n            .put('http://localhost:8080/api/dermatologists/pass', {\r\n                'userId' : this.state.id,\r\n                'oldPassword' : this.state.oldPass,\r\n                'newPassword' : this.state.newPass,\r\n                'repeatedPassword' : this.state.repPass\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    'password' : this.state.newPass\r\n                })\r\n            })\r\n            .catch(e => alert('Nisam pijana i nece moci!!!'));\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        this.setState({\r\n            [target.name] : target.value,\r\n        })\r\n    }\r\n\r\n    resetData = () => {\r\n        this.setState({\r\n            'firstName' : this.user.firstName,\r\n            'lastName' : this.user.lastName,\r\n            'address' : this.user.address,\r\n            'town' : this.user.town,\r\n            'country' : this.user.country,\r\n            'phoneNumber' : this.user.phoneNumber\r\n        })\r\n    }\r\n\r\n    disableSave = (disable) => {\r\n        this.setState({\r\n            'saveDisabled' : disable\r\n        })\r\n    }\r\n\r\n\r\n    save = () => {\r\n        axios\r\n            .put('http://localhost:8080/api/dermatologists', {\r\n                'id' : this.state.id,\r\n                'firstName' : this.state.firstName,\r\n                'lastName' : this.state.lastName,\r\n                'userType' : this.state.userType,\r\n                'credentials' : {\r\n                    'email' : this.state.email,\r\n                    'password' : this.state.password\r\n                },\r\n                'penaltyCount' : this.state.penaltyCount,\r\n                'contact' : {\r\n                    'phoneNumber' : this.state.phoneNumber,\r\n                    'address' : {\r\n                        'street' : this.state.address,\r\n                        'town' : this.state.town,\r\n                        'country' : this.state.country,\r\n                        'latitude' : this.state.latitude,\r\n                        'longitude' : this.state.longitude\r\n                    }\r\n                }\r\n            })\r\n            .then(res => {\r\n                if(this.state.changePasswordMode)\r\n                    this.changePass();\r\n                this.createBackupUser();\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {oldPass, newPass, repPass} = this.state;\r\n        const passwords = [oldPass, newPass, repPass]\r\n\r\n        return (\r\n                <Row className=\"pt-5\">\r\n                    <Col xs={2}>\r\n                        <Nav defaultActiveKey=\"/home\" className=\"flex-column\">\r\n                            {!this.state.editMode\r\n                                ? <Button variant=\"dark\" onClick={this.activateUpdateMode}>Edit</Button>\r\n                                : <Button variant=\"outline-secondary\" onClick={this.activateUpdateMode}>Cancel</Button>\r\n                            }\r\n                            {this.state.editMode && <Button variant=\"primary mt-2\"\r\n                                                            onClick={this.activateChangePasswordMode}>\r\n                                Change Password</Button>}\r\n                            {this.state.editMode && <Button variant=\"success mt-2\"\r\n                                                            disabled={this.state.saveDisabled} onClick={this.save}>Save</Button>}\r\n                        </Nav>\r\n                    </Col>\r\n                    <Col>\r\n                        <UserInfo user={this.state} edit={this.state.editMode} onChange={this.handleInputChange}/>\r\n                        {this.state.changePasswordMode &&\r\n                        <ChangePassword pass={passwords} onChange={this.handleInputChange} disable={this.disableSave}/>}\r\n                    </Col>\r\n                </Row>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport { Calendar, momentLocalizer , Views} from 'react-big-calendar'\r\nimport moment from \"moment\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\n\r\nexport default class WorkingHoursCalendar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal : false,\r\n            event : \"\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const MyCalendar = (\r\n            <div >\r\n                <Calendar\r\n                    localizer={momentLocalizer(moment)}\r\n                    events={this.props.events}\r\n                    popup = {false}\r\n                    views={Object.keys(Views).map(k => Views[k])}\r\n                    step={20}\r\n                    timeslots={2}\r\n                    showMultiDayTimes={true}\r\n                    onDoubleClickEvent={event => this.handleModal(event)}\r\n                    components={{\r\n                        timeSlotWrapper: this.ColoredDateCellWrapper,\r\n                    }}\r\n                    style={{ height: 550}}\r\n                />\r\n            </div>\r\n        );\r\n        return (\r\n            <div height=\"200px\">\r\n                <br/>\r\n                {MyCalendar}\r\n                <Modal backdrop=\"static\" show={this.state.showModal} onHide={this.handleModal}>\r\n                    <Modal.Header>\r\n                        <Modal.Title>{this.state.event.title}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {this.state.event.desc} <br/>\r\n                        Date-time: {moment(this.state.event.start).format('DD.MM.YYYY hh:mm')} -- {moment(this.state.event.end).format('DD.MM.YYYY hh:mm')}\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleModal}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n\r\n        )\r\n    }\r\n    handleModal = (event) => {\r\n        this.setState({\r\n            showModal : !this.state.showModal,\r\n            event : event\r\n        });\r\n    }\r\n\r\n    ColoredDateCellWrapper = ({ children }) =>\r\n        React.cloneElement(React.Children.only(children), {\r\n            style: {\r\n                backgroundColor: 'lightblue',\r\n            },\r\n        })\r\n}","import React from \"react\";\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport WorkingHoursCalendar from \"../../components/WorkingHoursCalendar\";\r\nimport axios from \"axios\";\r\n\r\nexport default class DermatologistWorkingHours extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            myEvents : []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios\r\n            .post(process.env.REACT_APP_BACKEND_ADDRESS ?? 'http://localhost:8080/api/appointment/getEvents', {\r\n                'id' : 1, //this.props.id\r\n                'type' : 1 //this.props.role\r\n            } )\r\n            .then(res => {\r\n                this.setState({\r\n                    myEvents : res.data\r\n                })\r\n            })\r\n            .catch(res => alert(\"Wrong!\"))\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <WorkingHoursCalendar events={this.state.myEvents} />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport {Button, Container, Table} from \"react-bootstrap\";\r\n\r\nexport default class ScheduledAppointments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderAll()}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    renderAll = () => {\r\n        const Events = this.props.events.map((appointment, key) =>\r\n            <tr>\r\n                <td>{appointment.pharmacyName}</td>\r\n                <td>{appointment.firstName}</td>\r\n                <td>{appointment.lastName}</td>\r\n                <td>{moment(appointment.period.periodStart).format('DD.MM.YYYY hh:mm')}</td>\r\n                <td>{moment(appointment.period.periodEnd).format('DD.MM.YYYY hh:mm')}</td>\r\n                <td> <Button onClick={() => this.handleClickStart(appointment)}> Start </Button> </td>\r\n                <td> <Button onClick={() => this.handleClickCancel(appointment)} > Did not show up </Button> </td>\r\n            </tr>)\r\n        return (\r\n            <Container >\r\n                <br/>\r\n                <Table style={{\"borderWidth\":\"1px\", 'borderColor':\"#aaaaaa\", 'borderStyle':'solid'}} striped hover>\r\n                    <tbody>\r\n                    <tr>\r\n                        <th>Pharmacy</th>\r\n                        <th>First name</th>\r\n                        <th>Last name</th>\r\n                        <th>Start of appointment</th>\r\n                        <th>End of appointment</th>\r\n                        <th>Start</th>\r\n                        <th>Cancel</th>\r\n                    </tr>\r\n                    {Events}\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    handleClickCancel = (appointment) => {\r\n        alert(appointment.firstName);\r\n    }\r\n\r\n    handleClickStart = (appointment) => {\r\n        localStorage.setItem(\"appointment\", JSON.stringify(appointment));\r\n        localStorage.setItem(\"startedConsultation\", JSON.stringify(true));\r\n        this.props.renderParent(true);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {Button, Col, Modal, Row} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nexport default class ChooseTherapy extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal : false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const Drugs = this.props.medications.map((medication, index) =>\r\n            <option value={medication.name} key={index}> {medication.name} </option>\r\n        );\r\n        return(\r\n            <div>\r\n                <Row>\r\n                    <Col xs={2}> <p> Choose period: </p> </Col>\r\n                    <Col xs={-4}> <DatePicker selected={this.props.dateStartTherapy}  name=\"dateStartTherapy\" minDate={new Date()} onChange={this.setStartDate} /> </Col>\r\n                    <Col xs={-4}> <DatePicker selected={this.props.dateEndTherapy} name=\"dateEndTherapy\"   minDate={new Date()} onChange={this.setEndDate} /> </Col>\r\n                </Row>\r\n\r\n                <br/>\r\n                <select value={this.props.medication.name}  onChange={this.chooseMedication}>\r\n                    <option disabled> Choose medication ...</option>\r\n                    {Drugs}\r\n                </select>\r\n                <br/>\r\n                {this.props.medication.id !== undefined ?\r\n                    <div style={{ display : \"flex\"}}>\r\n                        <div  className=\"m-2 bg-primary p-2\" style={{ height: 45 , width : 200}}>\r\n                            <Button onClick={this.removeMedication} variant=\"primary\" className=\"mr-3 p-0\" style={{width: '1rem'}} >X</Button>\r\n                            <label  className='text-light'>{this.props.medication.name}</label>\r\n                        </div>\r\n                        <Button style={{height : 40, marginTop : 10}} onClick={this.handleModal} variant=\"secondary\"> Information </Button>\r\n                        <Button style={{width: 120, height : 40, marginTop : 10, marginLeft : 2}} onClick={this.createEPrescription} variant=\"secondary\"> Prescribe </Button>\r\n                    </div>\r\n                    : <div>Nema leka</div>}\r\n                {this.showModalDialog()}\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    createEPrescription = () => {\r\n\r\n        this.props.createEPrescription();\r\n    }\r\n    showModalDialog = () => {\r\n        if(this.props.medication.id !== undefined) {\r\n             const Ingredients = this.props.medication.ingredient.map((ingredient, key) =>\r\n                <label style={{marginLeft: 5}}>{ingredient.name}</label>\r\n            )\r\n            const SideEffect = this.props.medication.sideEffect.map((effect, key) =>\r\n                <label style={{marginLeft: 5}}>{effect.name}</label>\r\n            )\r\n            return (\r\n                <Modal backdrop=\"static\" show={this.state.showModal} onHide={this.handleModal}>\r\n                    <Modal.Header>\r\n                        <Modal.Title>{this.props.medication.name}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {this.props.medication.type !== undefined &&  <label> Medication type : {this.props.medication.type}</label> }<br/>\r\n                        {this.props.medication.dose !== undefined && <label> Dose : {this.props.medication.dose}</label> } <br/>\r\n                        {this.props.medication.medicationShape !== undefined &&  <label> Medication shape : {this.props.medication.medicationShape}</label> } <br/>\r\n                        {this.props.medication.manufacturer !== undefined && <label> Manufacturer : {this.props.medication.manufacturer}</label> }<br/>\r\n                        {this.props.medication.medicationIssue !== undefined && <label> Medication issue : {this.props.medication.medicationIssue}</label> }<br/>\r\n                        {this.props.medication.note !== undefined && <label> Note : {this.props.medication.note}</label> }<br/>\r\n                        <label> Ingredients : </label> {Ingredients} <br/>\r\n                        <label> Side effects : </label> {SideEffect}\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleModal}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            )\r\n        }\r\n    }\r\n\r\n    setStartDate = (date) => {\r\n        this.props.setStartDate(date);\r\n    }\r\n    setEndDate = (date) => {\r\n        this.props.setEndDate(date);\r\n    }\r\n    handleModal = () => {\r\n        this.setState({\r\n                showModal: !this.state.showModal\r\n            }\r\n        )\r\n    }\r\n    chooseMedication = (event) => {\r\n        this.props.chooseMedication(event);\r\n    }\r\n\r\n    removeMedication = () => {\r\n        this.props.removeMedication();\r\n    }\r\n}","import React from \"react\";\r\nimport {Button, Col, Row} from \"react-bootstrap\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\n\r\nexport default class ScheduleByDateTime extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message : \"\",\r\n            timeForScheduling : \"\",\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Row>\r\n                    <Col xs={50}>\r\n                        <p> Choose date: </p>\r\n                        <DateTimePicker value={this.state.timeForScheduling} onChange={this.setTimeForNewAppointment}/>\r\n                    </Col>\r\n                    <br/>\r\n                    <Col>\r\n                        <Button  style={{ height : 40, marginTop : 10, float : \"right\"}} variant=\"primary\" >Schedule</Button>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n    setTimeForNewAppointment = (date) => {\r\n        this.setState({\r\n            timeForScheduling : new Date(date)\r\n        })\r\n    }\r\n}","import React from \"react\";\r\nimport {Button, Col, Container, FormControl, Row} from \"react-bootstrap\";\r\nimport ChooseTherapy from \"./ChooseTherapy\";\r\nimport ScheduleByDateTime from \"./ScheduleByDateTime\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Appointment extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            scheduleNewAppointment : false,\r\n            report : \"\",\r\n            medication : { name :  \"Choose medication ...\" },\r\n            dateStartTherapy : \"\",\r\n            dateEndTherapy : \"\",\r\n            medications : []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios\r\n            .get(process.env.REACT_APP_BACKEND_ADDRESS ?? 'http://localhost:8080/api/medications/getMedicationsForPatient/' + this.props.appointment.patientId)\r\n            .then(res => {\r\n                this.setState({\r\n                    medications : res.data\r\n                })\r\n            })\r\n            .catch(res => alert(\"Cant get medications!\"));\r\n    }\r\n\r\n    render() {\r\n        const ButtonSchedule = \"Schedule new appointment\";\r\n        return (\r\n          <Container>\r\n              <br/>\r\n\r\n              <Row >\r\n                <Col>\r\n                  {this.getPatientsInfo()}\r\n                </Col>\r\n                <Col>\r\n                    <Button variant=\"primary\" onClick={this.showScheduling} style={{ height : 40, marginTop : 10, float : \"right\"}} > {ButtonSchedule} </Button> <br/>\r\n                    <br/>\r\n                      {this.state.scheduleNewAppointment && <ScheduleByDateTime appointment={this.props.appointment}/>}\r\n                </Col>\r\n              </Row>\r\n\r\n              <br/>\r\n              <label  style={{fontSize : 20, marginLeft : 55, textDecoration : \"underline\"}}> Report </label>\r\n              <textarea className=\"form-control\"  rows=\"5\" cols=\"10\" placeholder={\"Type report...\"} name=\"report\" onChange={this.handleInputChange} value={this.state.report} />\r\n              <br/>\r\n              <label style={{fontSize : 20, marginLeft : 55, textDecoration : \"underline\"}}> Choose therapy </label>\r\n\r\n              {<ChooseTherapy createEPrescription={this.createEPrescription} dateEndTherapy={this.state.dateEndTherapy} dateStartTherapy={this.state.dateStartTherapy}  setStartDate={this.setStartDate} setEndDate={this.setEndDate} medications={this.state.medications} medication={this.state.medication} chooseMedication={this.chooseMedication} removeMedication={this.removeMedication}/>}\r\n\r\n              <Button onClick={() => this.finishAppointment()}> Finish appointment </Button>\r\n          </Container>\r\n        );\r\n    }\r\n\r\n    getPatientsInfo = () => {\r\n        return (\r\n            <div>\r\n                <label style={{fontSize : 20, marginLeft : 55, textDecoration : \"underline\"}} > Information about patient :  </label>\r\n                <Row>\r\n                    <label style={{fontSize : 20}} >  <b> First name: </b></label>\r\n                    <label style={{fontSize : 20 , marginLeft: 40}} > {this.props.appointment.firstName} </label>\r\n                </Row>\r\n                <Row>\r\n                    <label style={{fontSize : 20}} >  <b> Last name: </b></label>\r\n                    <label style={{fontSize : 20, marginLeft: 40}} > {this.props.appointment.lastName} </label>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    createEPrescription = () => {\r\n        axios\r\n            .post(process.env.REACT_APP_BACKEND_ADDRESS ?? 'http://localhost:8080/api/eprescriptions/', {\r\n                'pharmacyId' : this.props.appointment.pharmacyId,\r\n                'prescription' : {\r\n                    'patient' : {id : this.props.appointment.patientId},\r\n                    'medicationQuantity' : [{\r\n                        medication: this.state.medication,\r\n                        quantity : 2\r\n                    }\r\n                    ]\r\n                }\r\n            })\r\n            .then(res => alert(\"Uspeo si!\"))\r\n            .catch(es => alert(\"Nisi uspeo!\"));\r\n    }\r\n    showScheduling =() => {\r\n        this.setState({\r\n            scheduleNewAppointment : !this.state.scheduleNewAppointment\r\n        })\r\n    }\r\n\r\n    setStartDate = (date) => {\r\n        this.setState({\r\n            dateStartTherapy : date\r\n        })\r\n    }\r\n    setEndDate = (date) => {\r\n        this.setState({\r\n            dateEndTherapy : date\r\n        })\r\n    }\r\n\r\n    chooseMedication = (event) => {\r\n        this.setState({\r\n            medication: this.state.medications.filter(m => m.name === event.target.value)[0]\r\n        })\r\n    }\r\n\r\n    removeMedication = () => {\r\n        this.setState({\r\n            medication : { name :  \"Choose medication ...\" }\r\n        })\r\n    }\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        this.setState({\r\n            [target.name] : target.value\r\n        })\r\n    }\r\n\r\n    finishAppointment = () => {\r\n        let periodStart = this.state.dateStartTherapy;\r\n\r\n\r\n        //let momentDate = moment(date);\r\n        let day = periodStart.getDate();\r\n        let month = parseInt(periodStart.getMonth())+1;\r\n        if (month < 10)\r\n            month = \"0\" + month;\r\n        if (parseInt(day)<10)\r\n            day = \"0\"+day;\r\n\r\n        let fullYearStart = periodStart.getFullYear() + \"-\" + month + \"-\" + day + \" \" + \"00\" + \":\" + \"00\" + \":00\";\r\n        let periodEnd = this.state.dateEndTherapy;\r\n         day = periodEnd.getDate();\r\n         month = parseInt(periodEnd.getMonth())+1;\r\n        if (month < 10)\r\n            month = \"0\" + month;\r\n        if (parseInt(day)<10)\r\n            day = \"0\"+day;\r\n\r\n        let fullYearEnd = periodEnd.getFullYear() + \"-\" + month + \"-\" + day + \" \" + \"00\" + \":\" + \"00\" + \":00\";\r\n        axios\r\n            .put(process.env.REACT_APP_BACKEND_ADDRESS ?? 'http://localhost:8080/api/appointment/finishAppointment', {\r\n                'id' : this.props.appointment.id,\r\n                'examinerId' : this.props.appointment.examinerId,\r\n                'report' : this.state.report,\r\n                'pharmacyId' : this.props.appointment.pharmacyId,\r\n                'pharmacyName' : this.props.appointment.pharmacyName,\r\n                'appointmentStatus' : this.props.appointment.appointmentStatus,\r\n                'patientId' : this.props.appointment.patientId,\r\n                'therapy' : {\r\n                    'medication' : this.state.medication,\r\n                    'period' : {\r\n                        periodStart : fullYearStart,\r\n                        periodEnd : fullYearEnd\r\n                    }\r\n                }\r\n            })\r\n            .then(res => {\r\n                alert(\"Appointment finished!\");\r\n                localStorage.clear();\r\n                this.props.renderParent(false);\r\n            })\r\n            .catch(res => {\r\n                alert(\"Appointment not finished!\");\r\n            })\r\n\r\n    }\r\n}","import React from \"react\";\r\nimport ScheduledAppointments from \"../../components/ScheduledAppointments\";\r\nimport Appointment from \"../../components/Appointment\";\r\n\r\nexport default class DermatologistAppointmentStart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startedAppointment : !!localStorage.getItem(\"startedAppointment\") ? JSON.parse(localStorage.getItem(\"startedAppointment\")) : false,\r\n            appointment : !!localStorage.getItem(\"appointment\") ? JSON.parse(localStorage.getItem(\"appointment\")) : {},\r\n            dermatologistEvents : [\r\n                {\r\n                    id: 0,\r\n                    patient : { Id : \"1\",\r\n                        firstName : \"Pera\",\r\n                        lastName: \"Peric\"},\r\n                    period : {periodStart: new Date(2021, 0, 20, 10 , 30 , 0 ),\r\n                        periodEnd: new Date(2021, 0, 20, 11, 30, 0)},\r\n                    desc: 'Pre-meeting meeting, to prepare for the meeting'\r\n                },\r\n                {\r\n                    id: 0,\r\n                    patient : { Id : \"2\",\r\n                        firstName : \"Jova\",\r\n                        lastName: \"Jovic\"},\r\n                    period : {periodStart: new Date(2021, 1, 20, 10 , 30 , 0 ),\r\n                        periodEnd: new Date(2021, 1, 20, 11, 30, 0)},\r\n                    desc: 'Pre-meeting meeting, to prepare for the meeting'\r\n                }\r\n            ],\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.handleContent()}\r\n            </div>\r\n        )\r\n    }\r\n    handleContent = () => {\r\n        if(!this.state.startedAppointment)\r\n            return ( <ScheduledAppointments renderParent={this.renderParent} role={this.props.role} Id={this.props.Id} events={this.state.dermatologistEvents}/>)\r\n        else if(this.state.startedAppointment)\r\n            return (<Appointment appointment={this.state.appointment} renderParent={this.renderParent}/>)\r\n\r\n    }\r\n\r\n    renderParent = (content) => {\r\n        this.setState({\r\n            startedAppointment : content,\r\n            appointment : !!localStorage.getItem(\"appointment\") ? JSON.parse(localStorage.getItem(\"appointment\")) : {}\r\n        })\r\n    }\r\n\r\n\r\n}","import React from \"react\";\r\nimport { Container, Button} from \"react-bootstrap\";\r\nimport ReviewedClients from \"../ReviewedClients\";\r\nimport VacationRequest from \"../VacationRequest\";\r\nimport DermatologistsProfilePage from \"./DermatologistsProfilePage\";\r\nimport DermatologistWorkingHours from \"./DermatologistWorkingHours\";\r\nimport DermatologistAppointmentStart from \"./DermatologistAppointmentStart\";\r\n\r\nexport default class DermatologistHomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            role: this.props.role,\r\n            Id: this.props.Id,\r\n            navbar : \"reviewedClients\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container> <h3> Welcome {this.props.role}! </h3> </Container>\r\n                <ul className=\"nav justify-content-center\">\r\n                    <li className=\"nav-item\">\r\n                        <Button className=\"nav-link active\" onClick={this.handleChange} name=\"reviewedClients\">Reviewed clients</Button>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Button className=\"nav-link\" name=\"startAppointment\" onClick={this.handleChange}>Start appointment</Button>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Button className=\"nav-link\" name=\"workHours\" onClick={this.handleChange}>Work hours</Button>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Button className=\"nav-link\" name=\"vacationRequest\" onClick={this.handleChange}>Vacation request</Button>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Button className=\"nav-link\" name=\"profile\" onClick={this.handleChange}>Account</Button>\r\n                    </li>\r\n                </ul>\r\n                {this.renderNavbar()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            navbar : name\r\n        });\r\n    }\r\n\r\n    renderNavbar = () => {\r\n        if (this.state.navbar === \"reviewedClients\")\r\n            return (\r\n                <ReviewedClients Id = {this.state.id} role = {this.state.role}/>\r\n            );\r\n        else if (this.state.navbar === \"vacationRequest\")\r\n            return (\r\n                <VacationRequest Id = {this.state.id} role = {this.state.role} />\r\n            );\r\n        else if (this.state.navbar === \"profile\")\r\n            return (\r\n                <DermatologistsProfilePage Id = {this.state.id} role = {this.state.role} />\r\n            );\r\n        else if (this.state.navbar === \"workHours\")\r\n            return (\r\n                <DermatologistWorkingHours Id = {this.state.id} role = {this.state.role} />\r\n            );\r\n        else if (this.state.navbar === \"startAppointment\")\r\n            return (\r\n                <DermatologistAppointmentStart Id = {this.state.id} role = {this.state.role} />\r\n            );\r\n        else\r\n            return (\r\n              <div><p>Proba</p></div>\r\n            );\r\n    }\r\n}","import React from \"react\";\r\nimport {Container, Row, Col, Nav, Button} from \"react-bootstrap\";\r\nimport UserInfo from \"../../components/UserInfo\";\r\nimport ChangePassword from \"../../components/ChangePassword\";\r\nimport axios from \"axios\";\r\n\r\n//TODO Za sada namerno postoje dve iste stranice za profil dermatologa i farmaceuta, u toku rada uvideti da li je to zaista potrebno\r\nexport default class PharmacistProfilePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'firstName' : '',\r\n            'lastName' : '',\r\n            'email' : '',\r\n            'address' : '',\r\n            'town' : '',\r\n            'country' : '',\r\n            'phoneNumber' : '',\r\n            'longitude' : '',\r\n            'latitude' : '',\r\n            'oldPass' : '',\r\n            'newPass' : '',\r\n            'repPass' : '',\r\n            'editMode' : false,\r\n            'saveDisabled' : false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        await axios\r\n            .get('http://localhost:8080/api/pharmacist/1')\r\n            .then(res => {\r\n                let patient = res.data;\r\n                console.log(patient)\r\n                this.setState({\r\n                    'id' : patient.id,\r\n                    'firstName' : patient.firstName,\r\n                    'lastName' : patient.lastName,\r\n                    'email' : patient.credentials.email,\r\n                    'password' : patient.credentials.password,\r\n                    'userType' : patient.userType,\r\n                    'editMode' : false,\r\n                    'changePasswordMode' : false,\r\n                    'address' : patient.contact.address.street,\r\n                    'longitude' : patient.contact.address.longitude,\r\n                    'latitude' : patient.contact.address.latitude,\r\n                    'town' : patient.contact.address.town,\r\n                    'country' : patient.contact.address.country,\r\n                    'phoneNumber' : patient.contact.phoneNumber\r\n                })\r\n            });\r\n\r\n        this.createBackupUser();\r\n    }\r\n\r\n    createBackupUser = () => {\r\n        this.user = {\r\n            'firstName' : this.state.firstName,\r\n            'lastName' : this.state.lastName,\r\n            'email' : this.state.email,\r\n            'address' : this.state.address,\r\n            'town' : this.state.town,\r\n            'country' : this.state.country,\r\n            'phoneNumber' : this.state.phoneNumber\r\n        }\r\n\r\n        this.setState({\r\n            'editMode' : false,\r\n            'changePasswordMode' : false\r\n        })\r\n    }\r\n\r\n    activateUpdateMode = () => {\r\n        this.resetData();\r\n        this.setState({\r\n            editMode : !this.state.editMode,\r\n            changePasswordMode : false\r\n        })\r\n    }\r\n\r\n    activateChangePasswordMode = () => {\r\n        this.setState({\r\n            'saveDisabled' : !this.state.changePasswordMode,\r\n            'changePasswordMode' : !this.state.changePasswordMode,\r\n            'oldPass' : '',\r\n            'newPass' : '',\r\n            'repPass' : ''\r\n        })\r\n    }\r\n\r\n    changePass = () => {\r\n        axios\r\n            .put('http://localhost:8080/api/pharmacist/pass', {\r\n                'userId' : this.state.id,\r\n                'oldPassword' : this.state.oldPass,\r\n                'newPassword' : this.state.newPass,\r\n                'repeatedPassword' : this.state.repPass\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    'password' : this.state.newPass\r\n                })\r\n            })\r\n            .catch(e => alert('Nisam pijana i nece moci!!!'));\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        this.setState({\r\n            [target.name] : target.value,\r\n        })\r\n    }\r\n\r\n    resetData = () => {\r\n        this.setState({\r\n            'firstName' : this.user.firstName,\r\n            'lastName' : this.user.lastName,\r\n            'address' : this.user.address,\r\n            'town' : this.user.town,\r\n            'country' : this.user.country,\r\n            'phoneNumber' : this.user.phoneNumber\r\n        })\r\n    }\r\n\r\n    disableSave = (disable) => {\r\n        this.setState({\r\n            'saveDisabled' : disable\r\n        })\r\n    }\r\n\r\n\r\n    save = () => {\r\n        axios\r\n            .put('http://localhost:8080/api/pharmacist', {\r\n                'id' : this.state.id,\r\n                'firstName' : this.state.firstName,\r\n                'lastName' : this.state.lastName,\r\n                'userType' : this.state.userType,\r\n                'credentials' : {\r\n                    'email' : this.state.email,\r\n                    'password' : this.state.password\r\n                },\r\n                'penaltyCount' : this.state.penaltyCount,\r\n                'contact' : {\r\n                    'phoneNumber' : this.state.phoneNumber,\r\n                    'address' : {\r\n                        'street' : this.state.address,\r\n                        'town' : this.state.town,\r\n                        'country' : this.state.country,\r\n                        'latitude' : this.state.latitude,\r\n                        'longitude' : this.state.longitude\r\n                    }\r\n                }\r\n            })\r\n            .then(res => {\r\n                if(this.state.changePasswordMode)\r\n                    this.changePass();\r\n                this.createBackupUser();\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {oldPass, newPass, repPass} = this.state;\r\n        const passwords = [oldPass, newPass, repPass]\r\n\r\n        return (\r\n            <Row className=\"pt-5\">\r\n                <Col xs={2}>\r\n                    <Nav defaultActiveKey=\"/home\" className=\"flex-column\">\r\n                        {!this.state.editMode\r\n                            ? <Button variant=\"dark\" onClick={this.activateUpdateMode}>Edit</Button>\r\n                            : <Button variant=\"outline-secondary\" onClick={this.activateUpdateMode}>Cancel</Button>\r\n                        }\r\n                        {this.state.editMode && <Button variant=\"primary mt-2\"\r\n                                                        onClick={this.activateChangePasswordMode}>\r\n                            Change Password</Button>}\r\n                        {this.state.editMode && <Button variant=\"success mt-2\"\r\n                                                        disabled={this.state.saveDisabled} onClick={this.save}>Save</Button>}\r\n                    </Nav>\r\n                </Col>\r\n                <Col>\r\n                    <UserInfo user={this.state} edit={this.state.editMode} onChange={this.handleInputChange}/>\r\n                    {this.state.changePasswordMode &&\r\n                    <ChangePassword pass={passwords} onChange={this.handleInputChange} disable={this.disableSave}/>}\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport WorkingHoursCalendar from \"../../components/WorkingHoursCalendar\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default class PharmacistWorkingHours extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            myEvents : []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        axios\r\n            .post(process.env.REACT_APP_BACKEND_ADDRESS ?? 'http://localhost:8080/api/appointment/getEvents', {\r\n                'id' : 3, //this.props.id\r\n                'type' : 1 //this.props.role\r\n            } )\r\n            .then(res => {\r\n                this.setState({\r\n                    myEvents : res.data\r\n                })\r\n            })\r\n            .catch(res => alert(\"Wrong!\"))\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <WorkingHoursCalendar events={this.state.myEvents} />\r\n        );\r\n    }\r\n\r\n\r\n}","import React from \"react\";\r\n\r\nimport ScheduledAppointments from \"../../components/ScheduledAppointments\";\r\nimport Appointment from \"../../components/Appointment\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default class PharmacistConsultationStart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startedConsultation : !!localStorage.getItem(\"startedConsultation\") ? JSON.parse(localStorage.getItem(\"startedConsultation\")) : false,\r\n            appointment : !!localStorage.getItem(\"appointment\") ? JSON.parse(localStorage.getItem(\"appointment\")) : {},\r\n            appointments : [],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        axios\r\n            .post(process.env.REACT_APP_BACKEND_ADDRESS ?? 'http://localhost:8080/api/appointment/getAllScheduledByExaminer', {\r\n                    'id' : 3, //this.props.id\r\n                    'type' : 1 //this.props.role\r\n                } )\r\n                .then(res => {\r\n                    this.setState({\r\n                        appointments : res.data\r\n                    })\r\n                })\r\n                .catch(res => alert(\"Wrong!\"));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.handleContent()}\r\n            </div>\r\n        )\r\n    }\r\n    handleContent = () => {\r\n        if(!this.state.startedConsultation)\r\n            return ( <ScheduledAppointments renderParent={this.renderParent} role={this.props.role} Id={this.props.Id} events={this.state.appointments}/>)\r\n        else if(this.state.startedConsultation)\r\n            return (<Appointment appointment={this.state.appointment} role={this.props.role} Id={this.props.Id} renderParent={this.renderParent}/>)\r\n\r\n    }\r\n\r\n    renderParent = (content) => {\r\n        this.setState({\r\n            startedConsultation : content,\r\n            appointment : !!localStorage.getItem(\"appointment\") ? JSON.parse(localStorage.getItem(\"appointment\")) : {}\r\n        })\r\n        this.componentDidMount();\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Button, Col, FormControl, FormGroup, Row, Table} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nexport default class PharmacistGiveMedicine extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            medicineCode : \"\",\r\n            reservation : \"samo cisto da probam\",\r\n            reservationFound : false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br/>\r\n                <Row>\r\n                    <label style={{fontSize : 20, marginLeft : 55, marginTop : 10}}> Insert medicine code: </label>\r\n                    <FormControl className=\"mt-2 mb-2\" style={{width : 200, marginLeft : 20, marginBottom : 50}} value={this.state.medicineCode} placeholder={\"Insert here...\"} onChange={this.handleInputChange} />\r\n                    <Button onClick={this.getReservation} style={{height : 40, margin : 8}}  type=\"button\" className=\"btn btn-primary\"> Search </Button>\r\n                </Row>\r\n                <hr className=\"mt-2 mb-3\"/>\r\n                {this.state.reservationFound && this.showReservation()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    showReservation = () => {\r\n        return (\r\n            <div>\r\n                <Table style={{\"borderWidth\":\"1px\", 'borderColor':\"#aaaaaa\", 'borderStyle':'solid'}} striped hover>\r\n                    <tbody>\r\n                    <tr>\r\n                        <th>Patient full name</th>\r\n                        <th>Medication</th>\r\n                        <th>Quantity</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>{this.state.reservation.patient.firstName}</td>\r\n                        <td>{this.state.reservation.medicationQuantity.medication.name}</td>\r\n                        <td>{this.state.reservation.medicationQuantity.quantity}</td>\r\n                        <td> <Button onClick={this.giveMedicine}> Give medication </Button> </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    giveMedicine = () => {\r\n        axios\r\n            .put( process.env.REACT_APP_BACKEND_ADDRESS ?? 'http://localhost:8080/api/medicationReservation/giveMedicine/' + this.state.reservation.id)\r\n            .then(res => {\r\n                    this.setState({\r\n                        reservationFound : false,\r\n                        reservation : \"\"\r\n                    });\r\n                    alert(\"Successful medication approval!\")\r\n                }\r\n            )\r\n            .catch(e => {\r\n                    alert(\"Reservation is not valid!\")\r\n                }\r\n            );\r\n    }\r\n\r\n\r\n    handleInputChange = (event) => {\r\n        this.setState({\r\n            medicineCode : event.target.value\r\n        })\r\n    }\r\n\r\n    getReservation = () => {\r\n        axios\r\n            .post( process.env.REACT_APP_BACKEND_ADDRESS ?? 'http://localhost:8080/api/medicationReservation/getMedicationReservation', {\r\n                pharmacistId : \"2\",\r\n                medicationId : this.state.medicineCode\r\n            })\r\n            .then(res => {\r\n               let reservation = res.data;\r\n               if(res.data.id !== undefined) {\r\n                   this.setState({\r\n                       reservation: reservation,\r\n                       reservationFound: true\r\n                   })\r\n               }\r\n            })\r\n            .catch(e => {\r\n                    this.setState({\r\n                        reservationFound: false\r\n                    });\r\n                    alert(\"Reservation is not valid!\")\r\n                }\r\n            );\r\n    }\r\n}","import React from \"react\";\r\nimport { Container, Button} from \"react-bootstrap\";\r\nimport ReviewedClients from \"../ReviewedClients\";\r\nimport VacationRequest from \"../VacationRequest\";\r\nimport PharmacistProfilePage from \"./PharmacistProfilePage\";\r\nimport PharmacistWorkingHours from \"./PharmacistWorkingHours\";\r\nimport PharmacistConsultationStart from \"./PharmacistConsultationStart\";\r\nimport PharmacistGiveMedicine from \"./PharmacistGiveMedicine\";\r\n\r\nexport default class PharmacistHomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            role: this.props.role,\r\n            Id: this.props.Id,\r\n            navbar : \"reviewedClients\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container> <h3> Welcome {this.props.role}! </h3> </Container>\r\n                <ul className=\"nav justify-content-center\">\r\n                    <li className=\"nav-item\">\r\n                        <Button className=\"nav-link active\" onClick={this.handleChange} name=\"reviewedClients\">Reviewed clients</Button>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Button className=\"nav-link\" name=\"startAppointment\" onClick={this.handleChange}>Start appointment</Button>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Button className=\"nav-link\" name=\"workHours\" onClick={this.handleChange}>Work hours</Button>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Button className=\"nav-link\" name=\"vacationRequest\" onClick={this.handleChange}>Vacation request</Button>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Button className=\"nav-link\" name=\"profile\" onClick={this.handleChange}>Account</Button>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Button className=\"nav-link\" name=\"medicine\" onClick={this.handleChange}>Give medication</Button>\r\n                    </li>\r\n                </ul>\r\n                {this.renderNavbar()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            navbar : name\r\n        });\r\n    }\r\n\r\n    renderNavbar = () => {\r\n        if (this.state.navbar === \"reviewedClients\")\r\n            return (\r\n                <ReviewedClients Id = {this.state.id} role = {this.state.role}/>\r\n            );\r\n        else if (this.state.navbar === \"vacationRequest\")\r\n            return (\r\n                <VacationRequest Id = {this.state.id} role = {this.state.role} />\r\n            );\r\n        else if (this.state.navbar === \"profile\")\r\n            return (\r\n                <PharmacistProfilePage Id = {this.state.id} role = {this.state.role} />\r\n            );\r\n        else if (this.state.navbar === \"workHours\")\r\n            return (\r\n                <PharmacistWorkingHours Id = {this.state.id} role = {this.state.role} />\r\n            );\r\n        else if (this.state.navbar === \"startAppointment\")\r\n            return (\r\n                <PharmacistConsultationStart Id = {this.state.id} role = {this.state.role} />\r\n            );\r\n        if (this.state.navbar === \"medicine\")\r\n            return (\r\n                <PharmacistGiveMedicine Id = {this.state.id} role = {this.state.role} />\r\n            );\r\n        else\r\n            return (\r\n                <div><p>Proba</p></div>\r\n            );\r\n    }\r\n}","import React from \"react\";\r\nimport {Button, Container} from \"react-bootstrap\";\r\nimport Script from 'react-load-script';\r\nimport Select from \"react-select\";\r\n\r\nconst options = [\r\n    { value: 'Marko', label: 'Marko Markovic' },\r\n    { value: 'Zoran', label: 'Zoran Petrovic' },\r\n    { value: 'Ana', label: 'Ana Matic' },\r\n];\r\n\r\nexport default class PharmacyRegistration extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            pharmacy: {\r\n                name: '',\r\n                description: '',\r\n                pharmacyAdmin: [],\r\n                address: {\r\n                    street: \"\",\r\n                    town: \"\",\r\n                    country: \"\",\r\n                    latitude: 51.507351,\r\n                    longitude: -0.127758\r\n                },\r\n            },\r\n            selectedOption: null,\r\n            numberOfRows: 1,\r\n            streetP: \"\",\r\n            townP: \"\",\r\n            countryP: \"\",\r\n            errors: {\r\n                pharmacy: {\r\n                    name: 'Enter name',\r\n                    description: 'Enter description',\r\n                    address: 'Choose address',\r\n                    pharmacyAdmin: 'Select admin',\r\n                },\r\n            }\r\n        }\r\n    }\r\n\r\n    handleAdminChange = selectedOption => {\r\n        const newitems = this.state.pharmacy.pharmacyAdmin\r\n        newitems.push(selectedOption)\r\n\r\n        this.setState({\r\n            pharmacyAdmin: newitems\r\n        });\r\n        console.log(`Option selected:`, selectedOption);\r\n        this.selectErrors(selectedOption)\r\n\r\n    };\r\n\r\n    handleInputChange = (event) => {\r\n\r\n        const {name, value} = event.target;\r\n\r\n        const pharmacy = this.state.pharmacy;\r\n        pharmacy[name] = value;\r\n\r\n        console.log(this.state.pharmacy)\r\n        this.setState({pharmacy});\r\n        this.validationErrorMessage(event);\r\n    }\r\n\r\n    handleScriptLoad = () => {\r\n        var input = document.getElementById('street');\r\n        var options = {\r\n            types: ['geocode'] //this should work !\r\n        };\r\n        const google = window.google\r\n\r\n        this.street = new google.maps.places.Autocomplete(input, options);\r\n        this.street.addListener('place_changed', this.handlePlaceSelect);\r\n    }\r\n\r\n    handlePlaceSelect = () => {\r\n        const addressObject = this.street.getPlace();\r\n        try {\r\n            //console.log( addressObject.address_components)\r\n            const address = addressObject.address_components;\r\n            if (address) {\r\n                if (this.setAddressParams(address)) {\r\n                    this.setState(\r\n                        {\r\n                            pharmacy: {\r\n                                address: {\r\n                                    street: this.state.streetP,\r\n                                    town: this.state.townP,\r\n                                    country: this.state.countryP,\r\n                                    latitude: addressObject.geometry.location.lat(),\r\n                                    longitude: addressObject.geometry.location.lng()\r\n                                }\r\n                            },\r\n                        }\r\n                    );\r\n                }\r\n            } else {\r\n                this.addressErrors(false)\r\n            }\r\n        } catch {\r\n            this.addressErrors(false)\r\n        }\r\n    }\r\n\r\n    setAddressParams = (address) => {\r\n        var street, number, city, country, completeAddress, i;\r\n        for (i = 0; i < address.length; i++) {\r\n            if (address[i].types == \"route\") {\r\n                street = address[i].long_name;\r\n            } else if (address[i].types == \"street_numbe\") {\r\n                number = address[i].long_name;\r\n            } else if (address[i].types[0] == \"locality\") {\r\n                city = address[i].long_name;\r\n            } else if (address[i].types[0] == \"country\") {\r\n                country = address[i].long_name;\r\n            }\r\n        }\r\n        completeAddress = street + \" \" + number + \" \" + city + \" \" + country;\r\n\r\n        if (street == undefined || street == \"\" || city == undefined || city == \"\" || country == undefined || country == \"\") {\r\n            this.addressErrors(false)\r\n            return false;\r\n        } else {\r\n            this.addressErrors(true)\r\n            this.state.townP = city;\r\n            this.state.countryP = country;\r\n            if (number == undefined)\r\n                this.state.streetP = street;\r\n            else\r\n                this.state.streetP = street + number;\r\n        }\r\n        return true;\r\n    }\r\n    selectErrors = (value) => {\r\n        let errors = this.state.errors;\r\n        errors.pharmacy.pharmacyAdmin = value.length < 1 ? 'Select pharmacy admin' : '';\r\n        this.setState({errors});\r\n    }\r\n    addressErrors = (bool) => {\r\n        let errors = this.state.errors;\r\n        if (bool == false) {\r\n            //.log(\"Nisam dobro prosla\")\r\n            errors.pharmacy.address = 'Please choose valid address';\r\n        } else {\r\n            //console.log(\"DObro sam prosla \");\r\n            errors.pharmacy.address = \"\";\r\n        }\r\n        this.setState({errors});\r\n    }\r\n\r\n    validationErrorMessage = (event) => {\r\n        const {name, value} = event.target;\r\n        let errors = this.state.errors;\r\n        switch (name) {\r\n            case 'name':\r\n                errors.pharmacy.name = value.length < 1 ? 'Enter Name' : '';\r\n                break;\r\n            case 'description':\r\n                errors.pharmacy.description = value.length < 1 ? 'Enter Description' : '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({errors});\r\n    }\r\n\r\n    submitForm = async (event) => {\r\n        this.setState({submitted: true});\r\n        const pharmacy = this.state.pharmacy;\r\n        event.preventDefault();\r\n        if (this.validateForm(this.state.errors)) {\r\n            console.info('Valid Form')\r\n        } else {\r\n            console.log('Invalid Form')\r\n        }\r\n    }\r\n    validateForm = (errors) => {\r\n        let valid = true;\r\n        Object.entries(errors.pharmacy).forEach(item => {\r\n            console.log(item)\r\n            item && item[1].length > 0 && (valid = false)\r\n        })\r\n        return valid;\r\n    }\r\n\r\n\r\n    render() {\r\n        const {selectedOption} = this.state;\r\n\r\n        return (\r\n            <Container style={{\r\n                background: 'rgb(232, 244, 248 )',\r\n                color: 'rgb(0, 92, 230)',\r\n            }}>\r\n                <h3 style={({marginTop: '5rem', textAlignVertical: \"center\", textAlign: \"center\"})}>Pharmacy registration</h3>\r\n                <div className=\"row\"\r\n                     style={{marginTop: '3rem', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                    <label className=\"col-sm-2 col-form-label\">Name</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.pharmacy.name} name=\"name\" onChange={(e) => { this.handleInputChange(e)}} className=\"form-control\" placeholder=\"Pharmacy name\"/>\r\n                        {this.state.submitted && this.state.errors.pharmacy.name.length > 0 && <span className=\"text-danger\">{this.state.errors.pharmacy.name}</span>}\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"row\" style={{margin: '1rem', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                    <label className=\"col-sm-2 col-form-label\">Address</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <Script type=\"text/javascript\" url=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBFrua9P_qHcmF253UAXnw1wHnIC7nD2DY&libraries=places\" onLoad={this.handleScriptLoad}/>\r\n                        <input type=\"text\" id=\"street\" placeholder=\"Enter Address\" value={this.query}/>\r\n                        {this.state.submitted && this.state.errors.pharmacy.address.length > 0 &&  <span className=\"text-danger\">{this.state.errors.pharmacy.address}</span>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\"\r\n                     style={{margin: '1rem', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                    <label className=\"col-sm-2 col-form-label\">Description</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.pharmacy.description} name=\"description\" onChange={(e) => {\r\n                            this.handleInputChange(e)\r\n                        }} className=\"form-control\" placeholder=\"Description\"/>\r\n                        {this.state.submitted && this.state.errors.pharmacy.description.length > 0 &&\r\n                        <span className=\"text-danger\">{this.state.errors.pharmacy.description}</span>}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row\" style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                    <label className=\"col-sm-2 col-form-label\">Pharmacy admin</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <Select isSearchable placeholder=\"Choose...\" value={selectedOption}\r\n                                onChange={this.handleAdminChange}\r\n                                options={options}\r\n                        />\r\n                        {this.state.submitted && this.state.errors.pharmacy.pharmacyAdmin.length > 0 &&\r\n                        <span className=\"text-danger\">{this.state.errors.pharmacy.pharmacyAdmin}</span>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\"\r\n                     style={{margin: '1rem', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-5 mb-2\">\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <Button variant=\"primary\" onClick={this.submitForm}>Done</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Button, Container, FormControl} from \"react-bootstrap\";\r\nimport Script from \"react-load-script\";\r\n\r\nexport default class DermatologistRegistration extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                dermatologist: {\r\n                    email: '',\r\n                    password: '',\r\n                    firstName: '',\r\n                    lastName: '',\r\n                    address: {\r\n                        street: \"\",\r\n                        town: \"\",\r\n                        country: \"\",\r\n                        latitude: 51.507351,\r\n                        longitude: -0.127758\r\n                    },\r\n                    telephone: '',\r\n                    rePassword : '',\r\n                    workingHours:''\r\n                },\r\n                errors:{\r\n                    dermatologist: {\r\n                        email: 'Enter email',\r\n                        password: 'Enter password',\r\n                        firstName: 'Enter First name',\r\n                        lastName: 'Enter Last name',\r\n                        address:'Enter address',\r\n                        telephone: 'Enter Telephone',\r\n                        rePassword : 'Repeat password'\r\n\r\n                    }\r\n                },\r\n                validForm: false,\r\n                submitted: false,\r\n        }\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        const dermatologist = this.state.dermatologist;\r\n        dermatologist[name] = value;\r\n\r\n        this.setState({ dermatologist });\r\n        this.validationErrorMessage(event);\r\n    }\r\n    handleScriptLoad = () => {\r\n        var input = document.getElementById('street');\r\n        var options = {\r\n            types: ['geocode'] //this should work !\r\n        };\r\n        const google = window.google\r\n\r\n        this.street = new google.maps.places.Autocomplete(input, options);\r\n        this.street.addListener('place_changed', this.handlePlaceSelect);\r\n    }\r\n\r\n    handlePlaceSelect = () => {\r\n        const addressObject = this.street.getPlace();\r\n        try {\r\n            //console.log( addressObject.address_components)\r\n            const address = addressObject.address_components;\r\n            if (address) {\r\n                if (this.setAddressParams(address)) {\r\n                    this.setState(\r\n                        {\r\n                            dermatologist: {\r\n                                address: {\r\n                                    street: this.state.streetP,\r\n                                    town: this.state.townP,\r\n                                    country: this.state.countryP,\r\n                                    latitude: addressObject.geometry.location.lat(),\r\n                                    longitude: addressObject.geometry.location.lng()\r\n                                }\r\n                            },\r\n                        }\r\n                    );\r\n                }\r\n            } else {\r\n                this.addressErrors(false)\r\n            }\r\n        } catch {\r\n            this.addressErrors(false)\r\n        }\r\n    }\r\n\r\n    setAddressParams = (address) => {\r\n        var street, number, city, country, completeAddress, i;\r\n        for (i = 0; i < address.length; i++) {\r\n            if (address[i].types == \"route\") {\r\n                street = address[i].long_name;\r\n            } else if (address[i].types == \"street_numbe\") {\r\n                number = address[i].long_name;\r\n            } else if (address[i].types[0] == \"locality\") {\r\n                city = address[i].long_name;\r\n            } else if (address[i].types[0] == \"country\") {\r\n                country = address[i].long_name;\r\n            }\r\n        }\r\n        completeAddress = street + \" \" + number + \" \" + city + \" \" + country;\r\n\r\n        if (street == undefined || street == \"\" || city == undefined || city == \"\" || country == undefined || country == \"\") {\r\n            this.addressErrors(false)\r\n            return false;\r\n        } else {\r\n            this.addressErrors(true)\r\n            this.state.townP = city;\r\n            this.state.countryP = country;\r\n            if (number == undefined)\r\n                this.state.streetP = street;\r\n            else\r\n                this.state.streetP = street + number;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    addressErrors = (bool) => {\r\n        let errors = this.state.errors;\r\n        if (bool == false) {\r\n            //.log(\"Nisam dobro prosla\")\r\n            errors.dermatologist.address = 'Please choose valid address';\r\n        } else {\r\n            //console.log(\"DObro sam prosla \");\r\n            errors.dermatologist.address = \"\";\r\n        }\r\n        this.setState({errors});\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron jumbotron-fluid\"  style={{ background: 'rgb(232, 244, 248 )', color: 'rgb(0, 92, 230)'}}>\r\n                <div className=\"container\">\r\n                    <h3 style={({ textAlignVertical: \"center\", textAlign: \"center\"})}>Dermatologist registration</h3>\r\n                </div>\r\n\r\n                <div className=\"row\" style={{marginTop: '3rem', marginLeft:'20rem',display: 'flex', justifyContent: 'center', alignItems: 'center'}} >\r\n                    <label className=\"col-sm-2 col-form-label\">Name</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.dermatologist.firstName} name=\"firstName\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"First Name\" />\r\n                        { this.state.submitted && this.state.errors.dermatologist.firstName.length > 0 &&  <span className=\"text-danger\">{this.state.errors.dermatologist.firstName}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-3 mb-2\" >\r\n                        <input type=\"text\" value={this.state.lastName} name=\"lastName\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"Last Name\" />\r\n                        { this.state.submitted && this.state.errors.dermatologist.lastName.length > 0 &&  <span className=\"text-danger\">{this.state.errors.dermatologist.lastName}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label  className=\"col-sm-2 col-form-label\">Email</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"email\" value={this.state.dermatologist.email} name=\"email\" onChange={(e) => { this.handleInputChange(e)} }className=\"form-control\" id=\"email\" placeholder=\"example@gmail.com\" />\r\n                        { this.state.submitted && this.state.errors.dermatologist.email.length > 0 && <span className=\"text-danger\">{this.state.errors.dermatologist.email}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label  className=\"col-sm-2 col-form-label\">Tel</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.dermatologist.telephone} name=\"telephone\" onChange={(e) => { this.handleInputChange(e)} }  className=\"form-control\" id=\"telephone\" placeholder=\"+3810640333489\" />\r\n                        { this.state.submitted && this.state.errors.dermatologist.telephone.length > 0 && <span className=\"text-danger\">{this.state.errors.dermatologist.telephone}</span>}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label  className=\"col-sm-2 col-form-label\">Address</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <Script type=\"text/javascript\" url=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBFrua9P_qHcmF253UAXnw1wHnIC7nD2DY&libraries=places\" onLoad={this.handleScriptLoad}/>\r\n                        <input type=\"text\" id=\"street\" placeholder=\"Enter Address\" value={this.query}/>\r\n                        {this.state.submitted && this.state.errors.dermatologist.address.length > 0 &&  <span className=\"text-danger\">{this.state.errors.dermatologist.address}</span>}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label className=\"col-sm-2 col-form-label\">Password</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <FormControl name=\"password\" type=\"password\" placeholder=\"Password\"  value={this.state.dermatologist.password} onChange={(e) => { this.handleInputChange(e)} }/>\r\n                        { this.state.submitted && this.state.errors.dermatologist.password.length > 0 &&  <span className=\"text-danger\">{this.state.errors.dermatologist.password}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label  className=\"col-sm-2 col-form-label\">Repeat password</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <FormControl name=\"rePassword\" type=\"password\" placeholder=\"Repeat new Password\" value={this.state.dermatologist.rePassword} onChange={(e) => { this.handleInputChange(e)} }/>\r\n                        { this.state.submitted && this.state.errors.dermatologist.rePassword.length > 0 &&  <span className=\"text-danger\">{this.state.errors.dermatologist.rePassword}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\"style={{marginTop: '1rem'}}>\r\n                    <div className=\"col-sm-5 mb-2\">\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <Button variant=\"primary\" onClick={this.submitForm} >Submit</Button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    submitForm = async (event) => {\r\n        this.setState({ submitted: true });\r\n        const dermatologist = this.state.dermatologist;\r\n        event.preventDefault();\r\n        if (this.validateForm(this.state.errors)) {\r\n            console.info('Valid Form')\r\n        } else {\r\n            console.log('Invalid Form')\r\n        }\r\n    }\r\n\r\n    validationErrorMessage = (event) => {\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n\r\n        switch (name) {\r\n            case 'firstName':\r\n                errors.dermatologist.firstName = value.length < 1 ? 'Enter First Name' : '';\r\n                break;\r\n            case 'lastName':\r\n                errors.dermatologist.lastName = value.length < 1 ? 'Enter Last Name' : '';\r\n                break;\r\n            case 'email':\r\n                errors.dermatologist.email = this.isValidEmail(value) ? '' : 'Email is not valid!';\r\n                break;\r\n            case 'telephone':\r\n                errors.dermatologist.telephone = this.isValidTelephone(value) ? 'Enter valid telephone number' : '';\r\n                break;\r\n            case 'password':\r\n                errors.dermatologist.password = value.length < 1 ? 'Enter Password' : '';\r\n                break;\r\n            case 'rePassword':\r\n                errors.dermatologist.rePassword = this.isValidPassword(value) ? '' : 'This password must match the previous';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({ errors });\r\n    }\r\n\r\n    validateForm = (errors) => {\r\n        let valid = true;\r\n        Object.entries(errors.dermatologist).forEach(item => {\r\n            console.log(item)\r\n            item && item[1].length > 0 && (valid = false)\r\n        })\r\n        return valid;\r\n    }\r\n    isValidEmail = (value) => {\r\n        return !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,64}$/i.test(value))\r\n    }\r\n\r\n    isValidTelephone = (value) => {\r\n        return !(value && /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[0-9]{2,3}[-\\s\\./0-9]*$/i.test(value))\r\n    }\r\n\r\n    isValidPassword = (value) => {\r\n        if(this.state.dermatologist.password !== this.state.dermatologist.rePassword) {\r\n            return false;\r\n        }else{\r\n            return  true\r\n        }\r\n    }\r\n}","import React from \"react\";\r\nimport Script from \"react-load-script\";\r\nimport {Button, FormControl} from \"react-bootstrap\";\r\n\r\nexport default class SupplierRegistration extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            supplier: {\r\n                email: '',\r\n                password: '',\r\n                firstName: '',\r\n                lastName: '',\r\n                address: {\r\n                    street: \"\",\r\n                    town: \"\",\r\n                    country: \"\",\r\n                    latitude: 51.507351,\r\n                    longitude: -0.127758\r\n                },\r\n                telephone: '',\r\n                rePassword : '',\r\n            },\r\n            errors:{\r\n                supplier: {\r\n                    email: 'Enter email',\r\n                    password: 'Enter password',\r\n                    firstName: 'Enter First name',\r\n                    lastName: 'Enter Last name',\r\n                    address:'Enter address',\r\n                    telephone: 'Enter Telephone',\r\n                    rePassword : 'Repeat password'\r\n\r\n                }\r\n            },\r\n            validForm: false,\r\n            submitted: false,\r\n        }\r\n    }\r\n    handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        const supplier = this.state.supplier;\r\n        supplier[name] = value;\r\n\r\n        this.setState({ supplier });\r\n        this.validationErrorMessage(event);\r\n    }\r\n    handleScriptLoad = () => {\r\n        var input = document.getElementById('street');\r\n        var options = {\r\n            types: ['geocode'] //this should work !\r\n        };\r\n        const google = window.google\r\n\r\n        this.street = new google.maps.places.Autocomplete(input, options);\r\n        this.street.addListener('place_changed', this.handlePlaceSelect);\r\n    }\r\n\r\n    handlePlaceSelect = () => {\r\n        const addressObject = this.street.getPlace();\r\n        try {\r\n            //console.log( addressObject.address_components)\r\n            const address = addressObject.address_components;\r\n            if (address) {\r\n                if (this.setAddressParams(address)) {\r\n                    this.setState(\r\n                        {\r\n                            supplier: {\r\n                                address: {\r\n                                    street: this.state.streetP,\r\n                                    town: this.state.townP,\r\n                                    country: this.state.countryP,\r\n                                    latitude: addressObject.geometry.location.lat(),\r\n                                    longitude: addressObject.geometry.location.lng()\r\n                                }\r\n                            },\r\n                        }\r\n                    );\r\n                }\r\n            } else {\r\n                this.addressErrors(false)\r\n            }\r\n        } catch {\r\n            this.addressErrors(false)\r\n        }\r\n    }\r\n\r\n    setAddressParams = (address) => {\r\n        var street, number, city, country, completeAddress, i;\r\n        for (i = 0; i < address.length; i++) {\r\n            if (address[i].types == \"route\") {\r\n                street = address[i].long_name;\r\n            } else if (address[i].types == \"street_numbe\") {\r\n                number = address[i].long_name;\r\n            } else if (address[i].types[0] == \"locality\") {\r\n                city = address[i].long_name;\r\n            } else if (address[i].types[0] == \"country\") {\r\n                country = address[i].long_name;\r\n            }\r\n        }\r\n        completeAddress = street + \" \" + number + \" \" + city + \" \" + country;\r\n\r\n        if (street == undefined || street == \"\" || city == undefined || city == \"\" || country == undefined || country == \"\") {\r\n            this.addressErrors(false)\r\n            return false;\r\n        } else {\r\n            this.addressErrors(true)\r\n            this.state.townP = city;\r\n            this.state.countryP = country;\r\n            if (number == undefined)\r\n                this.state.streetP = street;\r\n            else\r\n                this.state.streetP = street + number;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    addressErrors = (bool) => {\r\n        let errors = this.state.errors;\r\n        if (bool == false) {\r\n            //.log(\"Nisam dobro prosla\")\r\n            errors.supplier.address = 'Please choose valid address';\r\n        } else {\r\n            //console.log(\"DObro sam prosla \");\r\n            errors.supplier.address = \"\";\r\n        }\r\n        this.setState({errors});\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron jumbotron-fluid\"  style={{ background: 'rgb(232, 244, 248 )', color: 'rgb(0, 92, 230)'}}>\r\n                <div className=\"container\">\r\n                    <h3 style={({ textAlignVertical: \"center\", textAlign: \"center\"})}>Supplier registration</h3>\r\n                </div>\r\n\r\n                <div className=\"row\" style={{marginTop: '3rem', marginLeft:'20rem',display: 'flex', justifyContent: 'center', alignItems: 'center'}} >\r\n                    <label className=\"col-sm-2 col-form-label\">Name</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.supplier.firstName} name=\"firstName\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"First Name\" />\r\n                        { this.state.submitted && this.state.errors.supplier.firstName.length > 0 &&  <span className=\"text-danger\">{this.state.errors.supplier.firstName}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-3 mb-2\" >\r\n                        <input type=\"text\" value={this.state.supplier.lastName} name=\"lastName\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"Last Name\" />\r\n                        { this.state.submitted && this.state.errors.supplier.lastName.length > 0 &&  <span className=\"text-danger\">{this.state.errors.supplier.lastName}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label  className=\"col-sm-2 col-form-label\">Email</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"email\" value={this.state.supplier.email} name=\"email\" onChange={(e) => { this.handleInputChange(e)} }className=\"form-control\" id=\"email\" placeholder=\"example@gmail.com\" />\r\n                        { this.state.submitted && this.state.errors.supplier.email.length > 0 && <span className=\"text-danger\">{this.state.errors.supplier.email}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label  className=\"col-sm-2 col-form-label\">Tel</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.supplier.telephone} name=\"telephone\" onChange={(e) => { this.handleInputChange(e)} }  className=\"form-control\" id=\"telephone\" placeholder=\"+3810640333489\" />\r\n                        { this.state.submitted && this.state.errors.supplier.telephone.length > 0 && <span className=\"text-danger\">{this.state.errors.supplier.telephone}</span>}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label  className=\"col-sm-2 col-form-label\">Address</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <Script type=\"text/javascript\" url=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBFrua9P_qHcmF253UAXnw1wHnIC7nD2DY&libraries=places\" onLoad={this.handleScriptLoad}/>\r\n                        <input type=\"text\" id=\"street\" placeholder=\"Enter Address\" value={this.query}/>\r\n                        {this.state.submitted && this.state.errors.supplier.address.length > 0 &&  <span className=\"text-danger\">{this.state.errors.supplier.address}</span>}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label className=\"col-sm-2 col-form-label\">Password</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <FormControl name=\"password\" type=\"password\" placeholder=\"Password\"  value={this.state.supplier.password} onChange={(e) => { this.handleInputChange(e)} }/>\r\n                        { this.state.submitted && this.state.errors.supplier.password.length > 0 &&  <span className=\"text-danger\">{this.state.errors.supplier.password}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label  className=\"col-sm-2 col-form-label\">Repeat password</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <FormControl name=\"rePassword\" type=\"password\" placeholder=\"Repeat new Password\" value={this.state.supplier.rePassword} onChange={(e) => { this.handleInputChange(e)} }/>\r\n                        { this.state.submitted && this.state.errors.supplier.rePassword.length > 0 &&  <span className=\"text-danger\">{this.state.errors.supplier.rePassword}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <h1>MedicationQuantity</h1>\r\n                <h1>medicationOffer</h1>\r\n\r\n                <div className=\"row\"style={{marginTop: '1rem'}}>\r\n                    <div className=\"col-sm-5 mb-2\">\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <Button variant=\"primary\" onClick={this.submitForm} >Submit</Button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    submitForm = async (event) => {\r\n        this.setState({ submitted: true });\r\n        const supplier = this.state.supplier;\r\n        event.preventDefault();\r\n        if (this.validateForm(this.state.errors)) {\r\n            console.info('Valid Form')\r\n        } else {\r\n            console.log('Invalid Form')\r\n        }\r\n    }\r\n\r\n    validationErrorMessage = (event) => {\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n\r\n        switch (name) {\r\n            case 'firstName':\r\n                errors.supplier.firstName = value.length < 1 ? 'Enter First Name' : '';\r\n                break;\r\n            case 'lastName':\r\n                errors.supplier.lastName = value.length < 1 ? 'Enter Last Name' : '';\r\n                break;\r\n            case 'email':\r\n                errors.supplier.email = this.isValidEmail(value) ? '' : 'Email is not valid!';\r\n                break;\r\n            case 'telephone':\r\n                errors.supplier.telephone = this.isValidTelephone(value) ? 'Enter valid telephone number' : '';\r\n                break;\r\n            case 'password':\r\n                errors.supplier.password = value.length < 1 ? 'Enter Password' : '';\r\n                break;\r\n            case 'rePassword':\r\n                errors.supplier.rePassword = this.isValidPassword(value) ? '' : 'This password must match the previous';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({ errors });\r\n    }\r\n\r\n    validateForm = (errors) => {\r\n        let valid = true;\r\n        Object.entries(errors.supplier).forEach(item => {\r\n            console.log(item)\r\n            item && item[1].length > 0 && (valid = false)\r\n        })\r\n        return valid;\r\n    }\r\n    isValidEmail = (value) => {\r\n        return !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,64}$/i.test(value))\r\n    }\r\n\r\n    isValidTelephone = (value) => {\r\n        return !(value && /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[0-9]{2,3}[-\\s\\./0-9]*$/i.test(value))\r\n    }\r\n\r\n    isValidPassword = (value) => {\r\n        if(this.state.supplier.password !== this.state.supplier.rePassword) {\r\n            return false;\r\n        }else{\r\n            return  true\r\n        }\r\n    }\r\n}","import React from \"react\";\r\nimport Script from \"react-load-script\";\r\nimport {Button, FormControl} from \"react-bootstrap\";\r\n\r\nexport default class AddNewMedication extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            medication:{\r\n                name:'',\r\n                type:'',\r\n                dose:'',\r\n                shape:'',\r\n                ingredient:[\r\n                    {\r\n                        name:''\r\n                    }\r\n                ],\r\n                sideEffects:[\r\n                    {\r\n                        name:''\r\n                    }\r\n                ],\r\n                alternatives:[\r\n                    {\r\n                        name:''\r\n                    }\r\n                ]\r\n\r\n            },\r\n            errors:{\r\n                medication: {\r\n                    name: 'Enter name',\r\n                    type: 'Select type',\r\n                    dose: 'Enter dose',\r\n                    shape: 'Select shape',\r\n                    ingredient: 'Select ingredients',\r\n                    sideEffects: 'Select side effects',\r\n                    alternatives:'Select alternatives'\r\n                }\r\n            },\r\n            validForm: false,\r\n            submitted: false,\r\n        }\r\n    }\r\n\r\n\r\n    handleMultiChange =(event) =>{\r\n        var options = event.target.options;\r\n        var value = [];\r\n        for (var i = 0, l = options.length; i < l; i++) {\r\n            if (options[i].selected) {\r\n                value.push(options[i].value);\r\n            }\r\n        }\r\n        if(event.target.name==\"sideEffects\") {\r\n            this.state.medication.sideEffects.push(value);\r\n        }else if(event.target.name==\"ingredients\") {\r\n            this.state.medication.ingredient.push(value);\r\n        }if(event.target.name==\"alternatives\") {\r\n            this.state.medication.alternatives.push(value);\r\n        }\r\n        this.validationErrorMessage(event)\r\n\r\n        this.setState({meditation: value});\r\n        console.log(this.state.medication)\r\n\r\n    }\r\n\r\n    handleSelectChange=(event)=>{\r\n        const target = event.target;\r\n        console.log(event.target.name)\r\n        const medication = this.state.medication;\r\n\r\n        if(event.target.name==\"type\") {\r\n            medication['type'] = event.target.value\r\n        }else  if(event.target.name==\"shape\") {\r\n            medication['shape'] = event.target.value\r\n\r\n        }\r\n        this.setState({ medication });\r\n        this.validationErrorMessage(event)\r\n\r\n        console.log(this.state.medication)\r\n\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        const medication = this.state.medication;\r\n        medication[name] = value;\r\n        console.log(this.state.medication)\r\n\r\n        this.setState({ medication });\r\n        this.validationErrorMessage(event);\r\n    }\r\n\r\n    submitForm = async (event) => {\r\n        this.setState({submitted: true});\r\n        const medication = this.state.medication;\r\n        event.preventDefault();\r\n        if (this.validateForm(this.state.errors)) {\r\n            console.info('Valid Form')\r\n        } else {\r\n            console.log('Invalid Form')\r\n        }\r\n    }\r\n\r\n    validationErrorMessage = (event) => {\r\n        const {name, value} = event.target;\r\n        let errors = this.state.errors;\r\n        console.log(\"Dosao\")\r\n        console.log(name)\r\n        switch (name) {\r\n            case 'name':\r\n                errors.medication.name = value.length < 1 ? 'Enter Name' : '';\r\n                break;\r\n            case 'dose':\r\n                errors.medication.dose = value.length < 1 ? 'Enter Dose' : '';\r\n                break;\r\n            case 'type':\r\n                errors.medication.type = value.length < 1 ? 'Select type' : '';\r\n                break;\r\n            case 'shape':\r\n                errors.medication.shape = value.length < 1 ? 'Select shape' : '';\r\n                break;\r\n            case 'ingredients':\r\n                errors.medication.ingredient = value.length < 1 ? 'Select ingredients' : '';\r\n                break;\r\n            case 'sideEffects':\r\n                errors.medication.sideEffects = value.length < 1 ? 'Select sideEffects' : '';\r\n                break;\r\n            case 'alternatives':\r\n                errors.medication.alternatives = value.length < 1 ? 'Select alternatives' : '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({errors});\r\n    }\r\n\r\n    validateForm = (errors) => {\r\n        let valid = true;\r\n        Object.entries(errors.medication).forEach(item => {\r\n            console.log(item)\r\n            item && item[1].length > 0 && (valid = false)\r\n        })\r\n        return valid;\r\n    }\r\n\r\n\r\n    render() {\r\n        let ingredients = [\"saharoza\", \"dekstroza\",\"aspirin\"];\r\n        const  ingredientsTag = ingredients.map((ingredient, key) =>\r\n            <option value={ingredient}> {ingredient} </option>\r\n        );\r\n\r\n        let shape = [\"powder\",\"capsule\",\"pill\",\"ointment\",\"gel\",\"solution\",\"syrup\"];\r\n        const  shapeTag = shape.map((shape, key) =>\r\n            <option value={shape}> {shape} </option>\r\n        );\r\n\r\n        let sideEffects = [\"povracanje\",\"znojenje\",\"alergija\"];\r\n        const  sideEffectsTag = sideEffects.map((sideEffects, key) =>\r\n            <option value={sideEffects}> {sideEffects} </option>\r\n        );\r\n\r\n        let alternatives = [\"aspirin\",\"brufen\",\"nimulid\"];\r\n        const  alternativesTag = alternatives.map((alternatives, key) =>\r\n            <option value={alternatives}> {alternatives} </option>\r\n        );\r\n\r\n        let type = [\"antibiotic\",\"anesthetic\",\"antihistamine\"];\r\n        const  typeTag = type.map((type, key) =>\r\n            <option value={type}> {type} </option>\r\n        );\r\n        return (\r\n            <div className=\"jumbotron jumbotron-fluid\"  style={{ background: 'rgb(232, 244, 248 )', color: 'rgb(0, 92, 230)'}}>\r\n                <div className=\"container\">\r\n                    <h3 style={({ textAlignVertical: \"center\", textAlign: \"center\"})}>Add new medication</h3>\r\n                </div>\r\n\r\n                <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label  className=\"col-sm-2 col-form-label\">Name</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.medication.name} name=\"name\" onChange={(e) => { this.handleInputChange(e)} }  className=\"form-control\" id=\"name\" placeholder=\"Enter name\" />\r\n                        { this.state.submitted && this.state.errors.medication.name.length > 0 && <span className=\"text-danger\">{this.state.errors.medication.name}</span>}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label  className=\"col-sm-2 col-form-label\">Type</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <select   name=\"type\" multiple={false}  value={this.state.medication.type} onChange={(e) => { this.handleSelectChange(e)} }  >\r\n                            {typeTag}\r\n                        </select>\r\n                        { this.state.submitted && this.state.errors.medication.type.length > 0 && <span className=\"text-danger\">{this.state.errors.medication.type}</span>}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label  className=\"col-sm-2 col-form-label\">Dose</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"number\" value={this.state.medication.dose} name=\"dose\" onChange={(e) => { this.handleInputChange(e)} }  className=\"form-control\" id=\"dose\" placeholder=\"Enter dose\" />\r\n                        { this.state.submitted && this.state.errors.medication.dose.length > 0 && <span className=\"text-danger\">{this.state.errors.medication.dose}</span>}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label  className=\"col-sm-2 col-form-label\">Medication shape</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <select name=\"shape\" multiple={false} value={this.state.medication.shape} onChange={(e) => { this.handleSelectChange(e)} }  >\r\n                            {shapeTag}\r\n                        </select>\r\n                        {this.state.submitted && this.state.errors.medication.shape.length > 0 &&  <span className=\"text-danger\">{this.state.errors.medication.shape}</span>}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label className=\"col-sm-2 col-form-label\">Ingredients</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <select multiple={true} name=\"ingredients\" value={this.state.medication.ingredient} onChange={(e) => { this.handleMultiChange(e)} }  >\r\n                            {ingredientsTag}\r\n                        </select>\r\n                        { this.state.submitted && this.state.errors.medication.ingredient.length > 0 &&  <span className=\"text-danger\">{this.state.errors.medication.ingredient}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label  className=\"col-sm-2 col-form-label\">Side effects</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <select multiple={true}  name=\"sideEffects\" value={this.state.medication.sideEffects} onChange={(e) => { this.handleMultiChange(e)} }  >\r\n                            {sideEffectsTag}\r\n                        </select>\r\n                        { this.state.submitted && this.state.errors.medication.sideEffects.length > 0 &&  <span className=\"text-danger\">{this.state.errors.medication.sideEffects}</span>}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label  className=\"col-sm-2 col-form-label\">Alternatives</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <select name=\"alternatives\" multiple={true}  value={this.state.medication.alternatives} onChange={(e) => { this.handleMultiChange(e)} }  >\r\n                            {alternativesTag}\r\n                        </select>\r\n                        { this.state.submitted && this.state.errors.medication.alternatives.length > 0 &&  <span className=\"text-danger\">{this.state.errors.medication.alternatives}</span>}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\"style={{marginTop: '1rem'}}>\r\n                    <div className=\"col-sm-5 mb-2\">\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <Button variant=\"primary\" onClick={this.submitForm} >Submit</Button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class Complaints extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h1>Zalbe</h1>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class LoyaltyProgram extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h1>LoyaltyProgram</h1>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {Button, Container, FormControl} from \"react-bootstrap\";\r\nimport \"../App.css\";\r\nimport Script from \"react-load-script\";\r\n\r\nexport default class PharmacyAdminRegistration extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                email: '',\r\n                password: '',\r\n                firstName: '',\r\n                lastName: '',\r\n                address: {\r\n                    street: \"\",\r\n                    town: \"\",\r\n                    country: \"\",\r\n                    latitude: 51.507351,\r\n                    longitude: -0.127758\r\n                },\r\n                telephone: '',\r\n                rePassword: ''\r\n            },\r\n            errors: {\r\n                user: {\r\n                    'email': 'Enter email',\r\n                    'password': 'Enter password',\r\n                    'firstName': 'Enter First name',\r\n                    'lastName': 'Enter Last name',\r\n                    'address': 'Enter address',\r\n                    'telephone': 'Enter Telephone',\r\n                    'rePassword': 'Repeat password'\r\n                }\r\n            },\r\n            validForm: false,\r\n            submitted: false,\r\n\r\n\r\n        }\r\n    }\r\n    handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        const user = this.state.user;\r\n        user[name] = value;\r\n\r\n        this.setState({ user });\r\n        this.validationErrorMessage(event);\r\n    }\r\n\r\n    handleScriptLoad = () => {\r\n        var input = document.getElementById('street');\r\n        var options = {\r\n            types: ['geocode'] //this should work !\r\n        };\r\n        const google = window.google\r\n\r\n        this.street = new google.maps.places.Autocomplete(input, options);\r\n        this.street.addListener('place_changed', this.handlePlaceSelect);\r\n    }\r\n\r\n    handlePlaceSelect = () => {\r\n        const addressObject = this.street.getPlace();\r\n        try {\r\n            //console.log( addressObject.address_components)\r\n            const address = addressObject.address_components;\r\n            if (address) {\r\n                if (this.setAddressParams(address)) {\r\n                    this.setState(\r\n                        {\r\n                            user: {\r\n                                address: {\r\n                                    street: this.state.streetP,\r\n                                    town: this.state.townP,\r\n                                    country: this.state.countryP,\r\n                                    latitude: addressObject.geometry.location.lat(),\r\n                                    longitude: addressObject.geometry.location.lng()\r\n                                }\r\n                            },\r\n                        }\r\n                    );\r\n                }\r\n            } else {\r\n                this.addressErrors(false)\r\n            }\r\n        } catch {\r\n            this.addressErrors(false)\r\n        }\r\n    }\r\n\r\n    setAddressParams = (address) => {\r\n        var street, number, city, country, completeAddress, i;\r\n        for (i = 0; i < address.length; i++) {\r\n            if (address[i].types == \"route\") {\r\n                street = address[i].long_name;\r\n            } else if (address[i].types == \"street_numbe\") {\r\n                number = address[i].long_name;\r\n            } else if (address[i].types[0] == \"locality\") {\r\n                city = address[i].long_name;\r\n            } else if (address[i].types[0] == \"country\") {\r\n                country = address[i].long_name;\r\n            }\r\n        }\r\n        completeAddress = street + \" \" + number + \" \" + city + \" \" + country;\r\n\r\n        if (street == undefined || street == \"\" || city == undefined || city == \"\" || country == undefined || country == \"\") {\r\n            this.addressErrors(false)\r\n            return false;\r\n        } else {\r\n            this.addressErrors(true)\r\n            this.state.townP = city;\r\n            this.state.countryP = country;\r\n            if (number == undefined)\r\n                this.state.streetP = street;\r\n            else\r\n                this.state.streetP = street + number;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    addressErrors = (bool) => {\r\n        let errors = this.state.errors;\r\n        if (bool == false) {\r\n            //.log(\"Nisam dobro prosla\")\r\n            errors.user.address = 'Please choose valid address';\r\n        } else {\r\n            //console.log(\"DObro sam prosla \");\r\n            errors.user.address = \"\";\r\n        }\r\n        this.setState({errors});\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"jumbotron jumbotron-fluid\"  style={{ background: 'rgb(232, 244, 248 )', color: 'rgb(0, 92, 230)'}}>\r\n                <div className=\"container\">\r\n                    <h3 style={({ textAlignVertical: \"center\", textAlign: \"center\"})}>Pharmacy admin registration</h3>\r\n                </div>\r\n\r\n                <div className=\"row\" style={{marginTop: '3rem', marginLeft:'20rem',display: 'flex', justifyContent: 'center', alignItems: 'center'}} >\r\n                    <label className=\"col-sm-2 col-form-label\">Name</label>\r\n                    <div className=\"col-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.firstName} name=\"firstName\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"First Name\" />\r\n                        { this.state.submitted && this.state.errors.user.firstName.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.firstName}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-3 mb-2\" >\r\n                        <input type=\"text\" value={this.state.lastName} name=\"lastName\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\" placeholder=\"Last Name\" />\r\n                        { this.state.submitted && this.state.errors.user.lastName.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.lastName}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label  className=\"col-sm-2 col-form-label\">Email</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"email\" value={this.state.user.email} name=\"email\" onChange={(e) => { this.handleInputChange(e)} }className=\"form-control\" id=\"email\" placeholder=\"example@gmail.com\" />\r\n                        { this.state.submitted && this.state.errors.user.email.length > 0 && <span className=\"text-danger\">{this.state.errors.user.email}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label  className=\"col-sm-2 col-form-label\">Tel</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <input type=\"text\" value={this.state.user.telephone} name=\"telephone\" onChange={(e) => { this.handleInputChange(e)} }  className=\"form-control\" id=\"telephone\" placeholder=\"+3810640333489\" />\r\n                        { this.state.submitted && this.state.errors.user.telephone.length > 0 && <span className=\"text-danger\">{this.state.errors.user.telephone}</span>}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label  className=\"col-sm-2 col-form-label\">Address</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <Script type=\"text/javascript\" url=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBFrua9P_qHcmF253UAXnw1wHnIC7nD2DY&libraries=places\" onLoad={this.handleScriptLoad}/>\r\n                        <input type=\"text\" id=\"street\" placeholder=\"Enter Address\" value={this.query}/>\r\n                        {this.state.submitted && this.state.errors.user.address.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.address}</span>}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label className=\"col-sm-2 col-form-label\">Password</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <FormControl name=\"password\" type=\"password\" placeholder=\"Password\"  value={this.state.user.password} onChange={(e) => { this.handleInputChange(e)} }/>\r\n                        { this.state.submitted && this.state.errors.user.password.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.password}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                    <label  className=\"col-sm-2 col-form-label\">Repeat password</label>\r\n                    <div className=\"col-sm-6 mb-2\">\r\n                        <FormControl name=\"rePassword\" type=\"password\" placeholder=\"Repeat new Password\" value={this.state.user.rePassword} onChange={(e) => { this.handleInputChange(e)} }/>\r\n                        { this.state.submitted && this.state.errors.user.rePassword.length > 0 &&  <span className=\"text-danger\">{this.state.errors.user.rePassword}</span>}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\"style={{marginTop: '1rem'}}>\r\n                    <div className=\"col-sm-5 mb-2\">\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <Button variant=\"primary\" onClick={this.submitForm} >Submit</Button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    submitForm = async (event) => {\r\n        this.setState({ submitted: true });\r\n        const user = this.state.user;\r\n        event.preventDefault();\r\n        if (this.validateForm(this.state.errors)) {\r\n            console.info('Valid Form')\r\n        } else {\r\n            console.log('Invalid Form')\r\n        }\r\n    }\r\n\r\n    validationErrorMessage = (event) => {\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n\r\n        switch (name) {\r\n            case 'firstName':\r\n                errors.user.firstName = value.length < 1 ? 'Enter First Name' : '';\r\n                break;\r\n            case 'lastName':\r\n                errors.user.lastName = value.length < 1 ? 'Enter Last Name' : '';\r\n                break;\r\n            case 'email':\r\n                errors.user.email = this.isValidEmail(value) ? '' : 'Email is not valid!';\r\n                break;\r\n            case 'telephone':\r\n                errors.user.telephone = this.isValidTelephone(value) ? 'Enter valid telephone number' : '';\r\n                break;\r\n            case 'country':\r\n                errors.user.country = value.length < 1 ?  'Enter Country' : '';\r\n                break;\r\n            case 'city':\r\n                errors.user.city = value.length < 1 ?  'Enter City' : '';\r\n                break;\r\n            case 'password':\r\n                errors.user.password = value.length < 1 ? 'Enter Password' : '';\r\n                break;\r\n            case 'rePassword':\r\n                errors.user.rePassword = this.isValidPassword(value) ? '' : 'This password must match the previous';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({ errors });\r\n    }\r\n\r\n    validateForm = (errors) => {\r\n        let valid = true;\r\n        Object.entries(errors.user).forEach(item => {\r\n            console.log(item)\r\n            item && item[1].length > 0 && (valid = false)\r\n        })\r\n        return valid;\r\n    }\r\n    isValidEmail = (value) => {\r\n        return !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,64}$/i.test(value))\r\n    }\r\n\r\n    isValidTelephone = (value) => {\r\n        return !(value && /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[0-9]{2,3}[-\\s\\./0-9]*$/i.test(value))\r\n    }\r\n\r\n    isValidPassword = (value) => {\r\n        if(this.state.user.password !== this.state.user.rePassword) {\r\n            return false;\r\n        }else{\r\n            return  true\r\n        }\r\n    }\r\n}","import React from \"react\";\r\nimport PharmacyRegistration from \"../components/PharmacyRegistration\";\r\nimport DermatologistRegistration from \"../components/DermatologistRegistration\";\r\nimport SupplierRegistration from \"../components/SupplierRegistration\";\r\nimport AddNewMedication from \"../components/AddNewMedication\";\r\nimport Complaints from \"../components/Complaints\";\r\nimport LoyaltyProgram from \"../components/LoyaltyProgram\";\r\nimport PharmacyAdminRegistration from \"../components/PharmacyAdminRegistration\";\r\n\r\nexport class ISAdminHomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            pharmacyAdmin:{\r\n                firstName:'',\r\n                lastName:'',\r\n            },\r\n            navbar : \"\",\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let  pharmacyAdmin= {\r\n            firstName: 'Snezana',\r\n            lastName: 'Bulajic',\r\n        }\r\n        this.setState({\r\n            pharmacyAdmin : pharmacyAdmin\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron jumbotron-fluid\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-4\">{this.state.pharmacyAdmin.firstName +\" \" +this.state.pharmacyAdmin.lastName }</h1>\r\n                </div>\r\n\r\n                <ul className=\"nav justify-content-center\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" href='#' onClick={this.handleChange} name=\"pharmacy\">Pharmacy registration</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"dermatologist\" onClick={this.handleChange}>Dermatologist registration</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"supplier\" onClick={this.handleChange}>Supplier registration</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"medication\" onClick={this.handleChange}>Add medication</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"complaint\" onClick={this.handleChange}>Complaint</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"loyalty\" onClick={this.handleChange}>Loyalty program</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"pharmacyAdmin\" onClick={this.handleChange}>Add new pharmacy admin</a>\r\n                    </li>\r\n\r\n                </ul>\r\n                {this.renderNavbar()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            navbar : name\r\n        });\r\n    }\r\n\r\n    renderNavbar = () => {\r\n        if (this.state.navbar === \"pharmacy\")\r\n            return (\r\n                <PharmacyRegistration/>\r\n            );\r\n        else if (this.state.navbar === \"dermatologist\")\r\n            return (\r\n                <DermatologistRegistration/>\r\n            );\r\n        else if (this.state.navbar === \"supplier\")\r\n            return (\r\n                <SupplierRegistration/>\r\n            );\r\n        else if (this.state.navbar === \"medication\")\r\n            return (\r\n                <AddNewMedication/>\r\n            );\r\n        else if (this.state.navbar === \"complaint\")\r\n            return (\r\n                <Complaints/>\r\n            );\r\n        else if (this.state.navbar === \"loyalty\")\r\n            return (\r\n                <LoyaltyProgram/>\r\n            );\r\n        else if (this.state.navbar === \"pharmacyAdmin\")\r\n            return (\r\n                <PharmacyAdminRegistration/>\r\n            );\r\n    }\r\n}","import React from 'react'\r\nimport { Container, Navbar, NavDropdown, Nav } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass PharmacyAdminLayout extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid style={{'background-color' : '#AEB6BF'}}>\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand as={NavLink} to=\"/\">WebPharm</Navbar.Brand>\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavDropdown title=\"Pharmacies\" id=\"collasible-nav-dropdow\">\r\n                                <NavDropdown.Item href=\"/pharmacy\">My pharmacy</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                        <Nav>\r\n                            <NavDropdown title=\"Account\" id=\"collasible-nav-dropdow\">\r\n                                <NavDropdown.Item href=\"/pharmacy-admin-profile\">My Account</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                {this.props.children}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PharmacyAdminLayout","import React from \"react\";\r\nimport {Col, Container, Nav, Row, Button, Toast} from \"react-bootstrap\";\r\nimport UserInfo from \"../components/UserInfo\";\r\nimport ChangePassword from \"../components/ChangePassword\";\r\nimport axios from \"axios\"\r\nimport PatientLayout from \"../layout/PatientLayout\";\r\nimport PharmacyAdminLayout from \"../layout/PharmacyAdminLayout\";\r\n\r\nexport default class PharmacyAdminProfilePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'firstName' : '',\r\n            'lastName' : '',\r\n            'email' : '',\r\n            'address' : '',\r\n            'town' : '',\r\n            'country' : '',\r\n            'phoneNumber' : '',\r\n            'oldPass' : '',\r\n            'newPass' : '',\r\n            'repPass' : '',\r\n            'editMode' : false,\r\n            'saveDisabled' : false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        await axios\r\n            .get('http://localhost:8080/api/pharmacyAdmin/1')\r\n            .then(res => {\r\n                let pharmacyAdmin = res.data;\r\n                console.log(pharmacyAdmin)\r\n                this.setState({\r\n                    'id' : pharmacyAdmin.id,\r\n                    'firstName' : pharmacyAdmin.firstName,\r\n                    'lastName' : pharmacyAdmin.lastName,\r\n                    'email' : pharmacyAdmin.email,\r\n                    'userType' : pharmacyAdmin.userType,\r\n                    'editMode' : false,\r\n                    'changePasswordMode' : false,\r\n                    'address' : pharmacyAdmin.contact.address.street,\r\n                    'town' : pharmacyAdmin.contact.address.town,\r\n                    'country' : pharmacyAdmin.contact.address.country,\r\n                    'phoneNumber' : pharmacyAdmin.contact.phoneNumber\r\n                })\r\n            });\r\n\r\n        this.createBackupUser();\r\n    }\r\n\r\n    createBackupUser = () => {\r\n        this.user = {\r\n            'firstName' : this.state.firstName,\r\n            'lastName' : this.state.lastName,\r\n            'email' : this.state.email,\r\n            'address' : this.state.address,\r\n            'town' : this.state.town,\r\n            'country' : this.state.country,\r\n            'phoneNumber' : this.state.phoneNumber,\r\n        }\r\n\r\n        this.setState({\r\n            'editMode' : false,\r\n            'changePasswordMode' : false\r\n        })\r\n    }\r\n\r\n    activateUpdateMode = () => {\r\n        this.resetData();\r\n        this.setState({\r\n            editMode : !this.state.editMode,\r\n            changePasswordMode : false\r\n        })\r\n    }\r\n\r\n    activateChangePasswordMode = () => {\r\n        this.setState({\r\n            'saveDisabled' : !this.state.changePasswordMode,\r\n            'changePasswordMode' : !this.state.changePasswordMode,\r\n            'oldPass' : '',\r\n            'newPass' : '',\r\n            'repPass' : ''\r\n        })\r\n    }\r\n\r\n    changePass = () => {\r\n        axios\r\n            .put('http://localhost:8080/api/pharmacyAdmin/pass', {\r\n                'userId' : this.state.id,\r\n                'oldPassword' : this.state.oldPass,\r\n                'newPassword' : this.state.newPass,\r\n                'repeatedPassword' : this.state.repPass\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    'password' : this.state.newPass\r\n                })\r\n            })\r\n            .catch(e => alert('Nisam pijana i nece moci!!!'));\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        this.setState({\r\n            [target.name] : target.value,\r\n        })\r\n    }\r\n\r\n    resetData = () => {\r\n        this.setState({\r\n            'firstName' : this.user.firstName,\r\n            'lastName' : this.user.lastName,\r\n            'address' : this.user.address,\r\n            'town' : this.user.town,\r\n            'country' : this.user.country,\r\n            'phoneNumber' : this.user.phoneNumber,\r\n        })\r\n    }\r\n\r\n    disableSave = (disable) => {\r\n        this.setState({\r\n            'saveDisabled' : disable\r\n        })\r\n    }\r\n\r\n\r\n\r\n    save = () => {\r\n        axios\r\n            .put('http://localhost:8080/api/pharmacyAdmin', {\r\n                'id' : this.state.id,\r\n                'firstName' : this.state.firstName,\r\n                'lastName' : this.state.lastName,\r\n                'userType' : this.state.userType,\r\n                'credentials' : {\r\n                    'email' : this.state.email,\r\n                    'password' : this.state.password\r\n                },\r\n                'contact' : {\r\n                    'phoneNumber' : this.state.phoneNumber,\r\n                    'address' : {\r\n                        'street' : this.state.address,\r\n                        'town' : this.state.town,\r\n                        'country' : this.state.country\r\n                    }\r\n                }\r\n            })\r\n            .then(res => {\r\n                if(this.state.changePasswordMode)\r\n                    this.changePass();\r\n                this.createBackupUser();\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {oldPass, newPass, repPass} = this.state;\r\n        const passwords = [oldPass, newPass, repPass]\r\n\r\n        return (\r\n            <PharmacyAdminLayout>\r\n                <Row className=\"pt-5\">\r\n                    <Col xs={2}>\r\n                        <Nav defaultActiveKey=\"/home\" className=\"flex-column\">\r\n                            {!this.state.editMode\r\n                                ? <Button variant=\"dark\" onClick={this.activateUpdateMode}>Edit</Button>\r\n                                : <Button variant=\"outline-secondary\" onClick={this.activateUpdateMode}>Cancel</Button>\r\n                            }\r\n                            {this.state.editMode && <Button variant=\"primary mt-2\"\r\n                                                            onClick={this.activateChangePasswordMode}>\r\n                                Change Password</Button>}\r\n                            {this.state.editMode && <Button variant=\"success mt-2\"\r\n                                                            disabled={this.state.saveDisabled} onClick={this.save}>Save</Button>}\r\n                        </Nav>\r\n                    </Col>\r\n                    <Col>\r\n                        <UserInfo user={this.state} edit={this.state.editMode} onChange={this.handleInputChange}/>\r\n\r\n                        {this.state.changePasswordMode && <ChangePassword pass={passwords} onChange={this.handleInputChange} disable={this.disableSave}/>}\r\n                    </Col>\r\n                </Row>\r\n            </PharmacyAdminLayout>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport {ButtonGroup, Input} from \"rsuite\";\r\nimport Dropdown from \"react-dropdown\";\r\n\r\n\r\nconst options = [\r\n    'Xanax | 3', 'Brufen | 4', 'Linex | 100'\r\n];\r\nconst defaultOption = options[0];\r\n\r\nexport default class MedicationOrdersForSupplier extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userType : 'pharmacyAdmin',\r\n            medicationOrders : [],\r\n            showModal : false,\r\n            showContent : 'listOrders',\r\n            radioAll : '1',\r\n            radioPending : '2',\r\n            radioProcessed : '3',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let medicationOrders = [\r\n            {\r\n                pharmacyAdmin : {\r\n                    firstName : 'Mirko',\r\n                    lastName : 'Mirkovic'\r\n                },\r\n                deadLine : '21.3.2021.',\r\n                medicationQuantity: {\r\n\r\n                },\r\n                status : 'pending',\r\n                medicationOffers : []\r\n            },\r\n            {\r\n                pharmacyAdmin : {\r\n                    firstName : 'Jelena',\r\n                    lastName : 'Rozga'\r\n                },\r\n                deadLine : '13.5.2021.',\r\n                medicationQuantity: {\r\n\r\n                },\r\n                status : 'processed',\r\n                medicationOffers : []\r\n            }\r\n        ];\r\n\r\n        this.setState({\r\n            medicationOrders : medicationOrders\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n\r\n                <h1>Medication orders</h1>\r\n\r\n\r\n                <br/>\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Created by</th>\r\n                        <th scope=\"col\">Dead line</th>\r\n                        <th scope=\"col\">Medications</th>\r\n                        <th scope=\"col\">Offer</th>\r\n\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.medicationOrders.map((medicationOrder, index) => (\r\n                        <tr>\r\n                            <th scope=\"row\">{index+1}</th>\r\n                            <td>{medicationOrder.pharmacyAdmin.firstName + ' ' + medicationOrder.pharmacyAdmin.lastName}</td>\r\n                            <td>{medicationOrder.deadLine}</td>\r\n                            <td>\r\n                                <Dropdown options={options}  value={defaultOption} />\r\n                            </td>\r\n                            <td>\r\n                                <Button variant=\"primary\" onClick={this.showOffersButtonClick}>\r\n                                    Create offer\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    showOffersButtonClick = () => {\r\n\r\n    }\r\n\r\n\r\n\r\n}","import React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\n\r\nexport default class CreateNewOffer extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           // order : this.props.order,\r\n            medicationOrder : {\r\n                pharmacyAdmin : {\r\n                    firstName : 'Mirko',\r\n                    lastName : 'Mirkovic'\r\n                },\r\n                deadLine : '21.3.2021.',\r\n                medicationQuantity: {\r\n\r\n                },\r\n                status : 'pending',\r\n            },\r\n\r\n            medicationOffer:   {\r\n                supplier : \"\",\r\n                price : 1,\r\n                shippingDate : '',\r\n                status : ''\r\n            },\r\n            errors: {\r\n                medicationOffer: {\r\n                    price: 'Enter price',\r\n                    shippingDate: 'Choose shipping date',\r\n                }\r\n            }\r\n        }\r\n    }\r\n    handleInputChange = (event) => {\r\n\r\n        const { name, value } = event.target;\r\n        const medicationOffer = this.state.medicationOffer;\r\n        medicationOffer[name] = value;\r\n\r\n        this.setState({ medicationOffer });\r\n        this.validationErrorMessage(event);\r\n    }\r\n\r\n    changeDatePicker = (date) => {\r\n        let errors = this.state.errors;\r\n        errors.medicationOffer.shippingDate = this.state.errors.medicationOffer.shippingDate.length < 1 ? 'Choose shipping date' : '';\r\n        this.setState({ errors });\r\n\r\n        this.setState({\r\n                medicationOffer : {\r\n                    ...this.state.medicationOffer,\r\n                    shippingDate : date\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    validationErrorMessage = (event) => {\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n             errors.medicationOffer.price = value.length < 1 ? 'Enter price' : '';\r\n        this.setState({ errors });\r\n    }\r\n\r\n\r\n    submitForm = async (event) => {\r\n        console.log(this.state.medicationOffer)\r\n\r\n\r\n        this.setState({ submitted: true });\r\n        const medicationOffer = this.state.medicationOffer;\r\n        event.preventDefault();\r\n        if (this.validateForm(this.state.errors)) {\r\n            console.info('Valid Form')\r\n        } else {\r\n            console.log('Invalid Form')\r\n        }\r\n    }\r\n\r\n    validateForm = (errors) => {\r\n        let valid = true;\r\n        Object.entries(errors.medicationOffer).forEach(item => {\r\n            console.log(item)\r\n            item && item[1].length > 0 && (valid = false)\r\n        })\r\n        return valid;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron jumbotron-fluid\"  style={{ background: 'rgb(232, 244, 248 )', color: 'rgb(0, 92, 230)'}}>\r\n                <div>\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"card\">\r\n                                    <h5 className=\"card-header\">\r\n                                        Order\r\n                                    </h5>\r\n                                    <div className=\"card-body\">\r\n                                        <p className=\"card-text\">\r\n                                            Kreirao : {this.state.medicationOrder.pharmacyAdmin.firstName + \" \" + this.state.medicationOrder.pharmacyAdmin.lastName}\r\n                                            <br/>\r\n                                            Status : {this.state.medicationOrder.status}\r\n                                            <br/>\r\n                                            Rok isporuke : {this.state.medicationOrder.deadLine}\r\n                                            <br/>\r\n                                            <br/>\r\n                                            Lekovi\r\n                                            <ul>\r\n                                                <li>Bromazepan : 4</li>\r\n                                                <li>Brufen : 1000</li>\r\n                                                <li>Gaze : 2</li>\r\n                                            </ul>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <h2 style={{marginTop: '1rem', marginLeft:'2rem'}}>Offer</h2>\r\n                <div>\r\n                    <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                        <label  className=\"col-sm-2 col-form-label\">Price</label>\r\n                        <div className=\"col-sm-6 mb-2\">\r\n                            <input type=\"number\"  name=\"price\" className=\"form-control\" id=\"price\" placeholder=\"Enter price\" onChange={(e) => { this.handleInputChange(e)} } className=\"form-control\"/>\r\n                            { this.state.submitted && this.state.errors.medicationOffer.price.length > 0 &&  <span className=\"text-danger\">{this.state.errors.medicationOffer.price}</span>}\r\n\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\"style={{marginTop: '1rem', marginLeft:'20rem'}}>\r\n                        <label  className=\"col-sm-2 col-form-label\">Shipping date</label>\r\n                        <div className=\"col-sm-6 mb-2\">\r\n                            <DatePicker  selected={this.state.medicationOffer.shippingDate} minDate={new Date()} onChange={date => this.changeDatePicker(date)} />\r\n                            { this.state.submitted && this.state.errors.medicationOffer.shippingDate.length > 0 &&  <span className=\"text-danger\">{this.state.errors.medicationOffer.shippingDate}</span>}\r\n\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\"style={{marginTop: '1rem'}}>\r\n                    <div className=\"col-sm-5 mb-2\">\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <Button variant=\"primary\" onClick={this.submitForm} >Submit</Button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport UnregisteredLayout from \"../../layout/UnregisteredLayout\";\r\nimport PharmacyListing from \"../pharmacy/PharmacyListing\";\r\nimport MedicationListing from \"../MedicationListing\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport {ButtonGroup, Input} from \"rsuite\";\r\nconst options = [\r\n    'Xanax | 3', 'Brufen | 4', 'Linex | 100'\r\n];\r\nconst defaultOption = options[0];\r\n\r\nexport default class SupplierMedicationOffers extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            medicationOffers : [],\r\n            selectedOption:\"\",\r\n            medicationOffersPom:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let medicationOffers = [\r\n            {\r\n                price : 12443,\r\n                shippingDate : '20.2.2021.',\r\n                status : 'pending',\r\n                medicationOrder:{\r\n                    pharmacyAdmin : {\r\n                        firstName : 'Mirko',\r\n                        lastName : 'Mirkovic'\r\n                    },\r\n                    deadLine : '21.3.2021.',\r\n                    medicationQuantity: {\r\n\r\n                    },\r\n                    status : 'pending',\r\n                }\r\n            },\r\n            {\r\n                price : 23533,\r\n                shippingDate : '30.3.2021.',\r\n                status : 'approved',\r\n                medicationOrder:  {\r\n                    pharmacyAdmin : {\r\n                        firstName : 'Jelena',\r\n                            lastName : 'Rozga'\r\n                    },\r\n                    deadLine : '13.5.2021.',\r\n                        medicationQuantity: {\r\n\r\n                    },\r\n                    status : 'processed',\r\n                }\r\n            },\r\n            {\r\n                price : 12400,\r\n                shippingDate : '10.2.2021.',\r\n                status : 'rejected',\r\n                medicationOrder:\r\n                    {\r\n                        pharmacyAdmin : {\r\n                            firstName : 'Jovana',\r\n                                lastName : 'Tipsin'\r\n                        },\r\n                        deadLine : '23.04.2021.',\r\n                            medicationQuantity: {\r\n\r\n                    },\r\n                status : 'processed',\r\n            }\r\n            }\r\n        ]\r\n\r\n        this.setState({\r\n            medicationOffers : medicationOffers,\r\n            medicationOffersPom:medicationOffers\r\n        })\r\n    }\r\n\r\n    onValueChange=(event) =>{\r\n        var option=event.target.value\r\n        console.log(option)\r\n        this.setState({\r\n            selectedOption : option,\r\n        })\r\n        console.log(option)\r\n        if(option==\"All\"){\r\n            this.setState({\r\n                medicationOffers: this.state.medicationOffersPom\r\n            });\r\n\r\n            console.log(\"dosao\");\r\n            return this.state.medicationOffers;\r\n\r\n        }else {\r\n            let filteredData = this.state.medicationOffers.filter(column => {\r\n\r\n                return column.status.toLowerCase().indexOf(option.toLowerCase()) !== -1;\r\n            });\r\n            this.setState({\r\n                medicationOffers: filteredData\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 style={{marginLeft:'2rem'}} >Offers</h2>\r\n                <div className=\"row\" style={{marginTop: '1rem', marginLeft:'2rem'}} >\r\n\r\n\r\n                    <div className=\"form-check\">\r\n                        <b >Filter by  :</b>\r\n                        <label>\r\n                            <input type=\"radio\" value=\"All\" checked={this.state.selectedOption === \"all\"}onChange={this.onValueChange} />\r\n                            All\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"radio\">\r\n                        <label>\r\n                            <input type=\"radio\" value=\"Pending\" checked={this.state.selectedOption === \"pending\"}onChange={this.onValueChange} />\r\n                            Pending\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"radio\">\r\n                        <label>\r\n                            <input  type=\"radio\"  value=\"Approved\" checked={this.state.selectedOption === \"approved\"} onChange={this.onValueChange}/>\r\n                            Approved\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"radio\">\r\n                        <label>\r\n                            <input type=\"radio\" value=\"Rejected\" checked={this.state.selectedOption === \"rejected\"} onChange={this.onValueChange}/>\r\n                            Rejected\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n\r\n                <table className=\"table table-hover\" >\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Created by</th>\r\n                        <th scope=\"col\">Dead line</th>\r\n                        <th scope=\"col\">Medications</th>\r\n                        <th scope=\"col\">Price</th>\r\n                        <th scope=\"col\">Shipping date</th>\r\n                        <th scope=\"col\">Status</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.medicationOffers.map((medicationOffer, index) => (\r\n                        <tr>\r\n                            <th scope=\"row\">{index+1}</th>\r\n                            <td>{medicationOffer.medicationOrder.pharmacyAdmin.firstName + ' ' + medicationOffer.medicationOrder.pharmacyAdmin.lastName}</td>\r\n                            <td>{medicationOffer.medicationOrder.deadLine}</td>\r\n                            <td>\r\n                                <Dropdown options={options}  value={defaultOption} />\r\n                            </td>\r\n                            <td>{medicationOffer.price}</td>\r\n                            <td>{medicationOffer.shippingDate}</td>\r\n                            <td>{medicationOffer.status}</td>\r\n                        </tr>\r\n\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n\r\n                <Modal show={this.state.showModal} onHide={this.handleModal}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Modal heading</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleModal}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.handleModal}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleModal = () => {\r\n        this.setState({\r\n            showModal : !this.state.showModal\r\n        });\r\n    }\r\n}","import React from \"react\";\r\n\r\n\r\nexport default class SupplierProfile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <h1>BLAAA</h1>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PharmacyRegistration from \"../components/PharmacyRegistration\";\r\nimport DermatologistRegistration from \"../components/DermatologistRegistration\";\r\nimport SupplierRegistration from \"../components/SupplierRegistration\";\r\nimport AddNewMedication from \"../components/AddNewMedication\";\r\nimport Complaints from \"../components/Complaints\";\r\nimport LoyaltyProgram from \"../components/LoyaltyProgram\";\r\nimport PharmacyAdminRegistration from \"../components/PharmacyAdminRegistration\";\r\nimport MedicationOrdersForSupplier from \"../components/Supplier/MedicationOrdersForSupplier\";\r\nimport MedicationOrdersList from \"../components/pharmacy/MedicationOrdersList\";\r\nimport MedicationOffers from \"../components/pharmacy/MedicationOffers\";\r\nimport CreateOrder from \"../components/pharmacy/CreateOrder\";\r\nimport CreateNewOffer from \"../components/Supplier/CreateNewOffer\";\r\nimport SupplierMedicationOffers from \"../components/Supplier/SupplierMedicationOffers\";\r\nimport SupplierProfile from \"../components/Supplier/SupplierProfile\";\r\n\r\nexport default class SupplierHomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            supplier:{\r\n                firstName:'',\r\n                lastName:'',\r\n            },\r\n            navbar : \"\",\r\n            showContent:\"\"\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let  supplier= {\r\n            firstName: 'Manja',\r\n            lastName: 'Babic',\r\n        }\r\n        this.setState({\r\n            supplier : supplier\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron jumbotron-fluid\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-4\">{this.state.supplier.firstName +\" \" +this.state.supplier.lastName }</h1>\r\n                </div>\r\n\r\n                <ul className=\"nav justify-content-center\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" href='#' onClick={this.handleChange} name=\"order\">Medication orders</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"offer\" onClick={this.handleChange}>My medication offers</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" name=\"profile\" onClick={this.handleChange}>Profile</a>\r\n                    </li>\r\n                </ul>\r\n                {this.renderNavbar()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            navbar : name\r\n        });\r\n    }\r\n\r\n    renderNavbar = () => {\r\n        if (this.state.navbar === \"order\")\r\n            return (\r\n                <MedicationOrdersForSupplier/>\r\n            );\r\n        else if (this.state.navbar === \"offer\")\r\n            return (\r\n                <SupplierMedicationOffers/>\r\n            );\r\n        else if (this.state.navbar === \"profile\")\r\n            return (\r\n                <SupplierProfile/>\r\n            );\r\n\r\n    }\r\n\r\n\r\n\r\n}","import React from 'react';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport {Button, Row, Col} from \"react-bootstrap\";\r\n\r\nclass DateTime extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date : new Date()\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.search = this.search.bind(this)\r\n        this.extendDate = this.extendDate.bind(this)\r\n    }\r\n\r\n    handleInputChange(value, e) {\r\n        this.setState({\r\n            date : value\r\n        })\r\n    }\r\n\r\n    search() {\r\n        const dateTime = this.state.date\r\n        const year = dateTime.getFullYear()\r\n        const month = this.extendDate(dateTime.getMonth() + 1)\r\n        const day = this.extendDate(dateTime.getDate())\r\n        const hour = this.extendDate(dateTime.getHours())\r\n        const minute = this.extendDate(dateTime.getMinutes())\r\n        const second = this.extendDate(dateTime.getSeconds())\r\n\r\n        this.props.search(`${year}-${month}-${day} ${hour}:${minute}:${second}`)\r\n    }\r\n\r\n    extendDate(component) {\r\n        return (component < 10) ? '0' + component : component\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row className={'p-4'} style={{'background-color' : '#D6DBDF', 'margin-left' : '-30px',\r\n                'margin-right' : '-30px'}}>\r\n                <Col xs={{span: 2, offset: 4}}>\r\n                    <DateTimePicker\r\n                        onChange={(value, e) => this.handleInputChange(value, e)}\r\n                        value={this.state.date}\r\n                        format={'dd.MM.y H:mm'}\r\n                    />\r\n                </Col>\r\n                <Col xs={'1'}>\r\n                    <Button variant={'outline-dark'} onClick={this.search}>Search</Button>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DateTime","import React from 'react'\r\nimport {Accordion, Card, Col, ListGroup, Row, Button} from \"react-bootstrap\";\r\n\r\nexport default class ScheduleCounsel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.schedule = this.schedule.bind(this)\r\n    }\r\n\r\n    schedule(pharmacyId, pharmacistId) {\r\n        this.props.schedule(pharmacyId, pharmacistId);\r\n    }\r\n\r\n\r\n    render() {\r\n        const pharmacies = this.props.data.map((pharmacy, index) => {\r\n\r\n            const address = pharmacy.address.street + ', ' + pharmacy.address.town + ', ' + pharmacy.address.country\r\n            const pharmacists = this.props.pharmacists.filter(p => p.pharmacyDTO.id === pharmacy.id)\r\n                .map((pharmacist, index) => {\r\n                let pharmacistPlain = pharmacist.pharmacistPlainDTO\r\n                return(\r\n                    <ListGroup.Item key={index}>\r\n                        <Row>\r\n                            <Col xs={4}>{pharmacistPlain.firstName + ' ' + pharmacistPlain.lastName}</Col>\r\n                            <Col xs={{span : 2, offset : 5}}>\r\n                                <Button variant={'success'} onClick={() => this.schedule(pharmacy.id, pharmacistPlain.id)}>Schedule</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                )\r\n            })\r\n            return (\r\n                <Col>\r\n                <Accordion defaultActiveKey=\"1\" className={'mt-3 mb-3'}>\r\n                    <Card bg={'dark'} text={'white'}>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                            <Row className={'pl-3'}><b>{pharmacy.name}</b></Row>\r\n                            <Row className={'pl-3'}> {address} </Row>\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                            <Card text={'dark'}>\r\n                            <Card.Body>\r\n                                <ListGroup>\r\n                                    {pharmacists}\r\n                                </ListGroup>\r\n                            </Card.Body>\r\n                            </Card>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                </Accordion>\r\n                </Col>\r\n            )\r\n        })\r\n        return (\r\n            <Row className={'mt-4'}>\r\n                {pharmacies}\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport PatientLayout from '../../layout/PatientLayout'\r\nimport DateTime from \"../../components/DateTime\";\r\nimport {Container, Row} from \"react-bootstrap\";\r\nimport ScheduleCounsel from \"../../components/ScheduleCounsel\";\r\nimport axios from \"axios\";\r\n\r\nclass PatientCounselScheduling extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            pharmacies : [],\r\n            pharmacists : [],\r\n            dateTime : ''\r\n        }\r\n        this.search = this.search.bind(this)\r\n        this.schedule = this.schedule.bind(this)\r\n    }\r\n\r\n    search(dateTime) {\r\n        axios\r\n            .post('http://localhost:8080/api/scheduling/search', {\r\n                'timeSlot' : dateTime,\r\n                'employeeType' : 'pharmacist'\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    'pharmacies' : [...new Set(res.data.map(x => x.pharmacyDTO))],\r\n                    'pharmacists' : res.data,\r\n                    'dateTime' : dateTime\r\n                })\r\n            })\r\n    }\r\n\r\n    schedule(pharmacyId, pharmacistId) {\r\n        axios\r\n        .post('http://localhost:8080/api/appointment/counseling', {\r\n            examinerId : pharmacistId,\r\n            type : 'pharmacist',\r\n            pharmacy : {\r\n                id : pharmacyId\r\n            },\r\n            patient : {\r\n                id : 0\r\n            },\r\n            period : {\r\n                periodStart : this.state.dateTime\r\n            }\r\n        })\r\n        .then(res => console.log(res));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <PatientLayout>\r\n                <Container fluid>\r\n                    <Row className={'mt-3 mb-4'}>\r\n                        <h2>Choose what date & time fits you the best</h2>\r\n                    </Row>\r\n                    <DateTime search={this.search}/>\r\n                    <ScheduleCounsel data={this.state.pharmacies} pharmacists={this.state.pharmacists} schedule={this.schedule}/>\r\n                </Container>\r\n            </PatientLayout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PatientCounselScheduling","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Alert, Button} from \"react-bootstrap\";\r\n\r\n\r\n\r\nexport default class RegistrationConfirmation extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    confirmation=()=>{\r\n        localStorage.setItem(\"confirmed\", JSON.stringify(true));\r\n        window.opener = null;\r\n        window.open('', '_self');\r\n        window.close();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron jumbotron-fluid\"  style={{ background: 'rgb(232, 244, 248 )', color: 'rgb(0, 92, 230)'}}>\r\n                <Alert variant=\"success\">\r\n                    <Alert.Heading>Hey, nice to see you</Alert.Heading>\r\n                    <p>\r\n                        Click on the \"Confirm\" button and go to registration page to complete your registration.\r\n                    </p>\r\n                </Alert>\r\n                <Button variant=\"success\" onClick={this.confirmation} >\r\n                             Confirm!\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport IndexPage from \"./pages/IndexPage\";\r\nimport PatientProfilePage from \"./pages/patient/PatientProfilePage\";\r\nimport PharmacyPage from \"./pages/PharmacyPage\";\r\nimport ReviewedClients from \"./pages/ReviewedClients\";\r\nimport VacationRequest from \"./pages/VacationRequest\";\r\nimport PatientHomePage from \"./pages/patient/PatientHomePage\";\r\nimport DermatologistHomePage from \"./pages/Dermatologist/DermatologistHomePage\";\r\nimport PharmacistProfilePage from \"./pages/Pharmacist/PharmacistProfilePage\";\r\nimport PharmacistHomePage from \"./pages/Pharmacist/PharmacistHomePage\";\r\nimport PharmacistWorkingHours from \"./pages/Pharmacist/PharmacistWorkingHours\";\r\nimport Registration from \"./pages/Registration\";\r\nimport {ISAdminHomePage} from \"./pages/ISAdminHomePage\";\r\nimport PharmacyAdminProfilePage from \"./pages/PharmacyAdminProfilePage\";\r\nimport SupplierHomePage from \"./pages/SupplierHomePage\";\r\nimport CreateNewOffer from \"./components/Supplier/CreateNewOffer\";\r\nimport PatientCounselScheduling from \"./pages/patient/PatientCounselScheduling\";\r\nimport RegistrationConfirmation from \"./pages/RegistrationConfirmation\";\r\n\r\n\r\nexport default class App extends React.Component {\r\n  constructor () {\r\n    super();\r\n    this.state = {\r\n      userRole : \"\",\r\n      username : \"\",\r\n      Id : \"\"\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const role = \"Admin\";\r\n    const Id = this.state.Id;\r\n    document.title = \"Internet Pharmacy\"\r\n    return (\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route exact path=\"/\"  render={(props) => <IndexPage {...props} role={role} /> } />\r\n            <Route path=\"/patient-profile\" render={(props) => <PatientProfilePage {...props} role={role} /> } />\r\n            <Route path=\"/pharmacy-admin-profile\" render={(props) => <PharmacyAdminProfilePage {...props} role={role} /> } />\r\n            <Route path=\"/pharmacy\"  component={PharmacyPage} role={role}/>\r\n            <Route path=\"/reviewClients\"  render={(props) => <ReviewedClients {...props} role={role} Id={Id}/> } />\r\n            <Route path=\"/vacationRequest\" render={(props) => <VacationRequest {...props} role={role} Id={Id}/> } />\r\n            <Route path='/patient-home' render={(props) => <PatientHomePage {...props} role={role} Id={Id}/> }/>\r\n            <Route path=\"/dermatologistHomePage\"  render={(props) => <DermatologistHomePage {...props} role={role} Id={Id}/> } />\r\n            <Route path=\"/pharmacistHomePage\"  render={(props) => <PharmacistHomePage {...props} role={role} Id={Id}/> } />\r\n            <Route path=\"/patient-counsel-schedule\"  render={(props) => <PatientCounselScheduling {...props} role={role} Id={Id}/> } />\r\n            <Route path=\"/registration\"  component={Registration} role={role}/>\r\n            <Route path=\"/systemAdmin\"  component={ISAdminHomePage} role={role}/>\r\n            <Route path=\"/supplierHomePage\"  component={SupplierHomePage} role={role}/>\r\n            <Route path=\"/createNew\" component={CreateNewOffer} role={role}/>\r\n            <Route path=\"/confirmRegistration\" component={RegistrationConfirmation} role={role}/>\r\n          </Switch>\r\n        </BrowserRouter>\r\n    );\r\n  }\r\n\r\n  updateUserData = (role, username) => {\r\n    this.setState({\r\n      userRole : role,\r\n      username : username\r\n    })\r\n  }\r\n\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(<App/> , document.getElementById('root'))\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}